# Copyright 2016, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

cc_test(
    name = "alloc_test",
    srcs = ["alloc_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "avl_test",
    srcs = ["avl_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "backoff_test",
    srcs = ["backoff_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "cmdline_test",
    srcs = ["cmdline_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "cpu_test",
    srcs = ["cpu_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "env_test",
    srcs = ["env_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "histogram_test",
    srcs = ["histogram_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "host_port_test",
    srcs = ["host_port_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "log_test",
    srcs = ["log_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "mpscq_test",
    srcs = ["mpscq_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "murmur_hash_test",
    srcs = ["murmur_hash_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "stack_lockfree_test",
    srcs = ["stack_lockfree_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "string_test",
    srcs = ["string_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "sync_test",
    srcs = ["sync_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "thd_test",
    srcs = ["thd_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "time_test",
    srcs = ["time_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "tls_test",
    srcs = ["tls_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)

cc_test(
    name = "useful_test",
    srcs = ["useful_test.c"],
    deps = ["//:gpr", "//test/core/util:gpr_test_util"],
    copts = ['-std=c99']
)
