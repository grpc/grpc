syntax = "proto3";

package envoy.extensions.transport_sockets.tap.v4alpha;

import "envoy/config/core/v4alpha/base.proto";
import "envoy/extensions/common/tap/v4alpha/common.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.transport_sockets.tap.v4alpha";
option java_outer_classname = "TapProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = NEXT_MAJOR_VERSION_CANDIDATE;

// [#protodoc-title: Tap]
// [#extension: envoy.transport_sockets.tap]

// Configuration for tap transport socket. This wraps another transport socket, providing the
// ability to interpose and record in plain text any traffic that is surfaced to Envoy.
message Tap {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.extensions.transport_sockets.tap.v3.Tap";

  // Common configuration for the tap transport socket.
  common.tap.v4alpha.CommonExtensionConfig common_config = 1
      [(validate.rules).message = {required: true}];

  // The underlying transport socket being wrapped.
  config.core.v4alpha.TransportSocket transport_socket = 2
      [(validate.rules).message = {required: true}];
}
