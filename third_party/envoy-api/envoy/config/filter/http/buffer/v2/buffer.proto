syntax = "proto3";

package envoy.config.filter.http.buffer.v2;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/migrate.proto";
import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.filter.http.buffer.v2";
option java_outer_classname = "BufferProto";
option java_multiple_files = true;
option (udpa.annotations.file_migrate).move_to_package = "envoy.extensions.filters.http.buffer.v3";
option (udpa.annotations.file_status).package_version_status = FROZEN;

// [#protodoc-title: Buffer]
// Buffer :ref:`configuration overview <config_http_filters_buffer>`.
// [#extension: envoy.filters.http.buffer]

message Buffer {
  reserved 2;

  // The maximum request size that the filter will buffer before the connection
  // manager will stop buffering and return a 413 response.
  google.protobuf.UInt32Value max_request_bytes = 1
      [(validate.rules).uint32 = {gt: 0}, (validate.rules).message = {required: true}];
}

message BufferPerRoute {
  oneof override {
    option (validate.required) = true;

    // Disable the buffer filter for this particular vhost or route.
    bool disabled = 1 [(validate.rules).bool = {const: true}];

    // Override the global configuration of the filter with this new config.
    Buffer buffer = 2 [(validate.rules).message = {required: true}];
  }
}
