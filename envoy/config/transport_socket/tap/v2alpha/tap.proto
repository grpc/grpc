syntax = "proto3";

package envoy.config.transport_socket.tap.v2alpha;

import "envoy/api/v2/core/base.proto";
import "envoy/config/common/tap/v2alpha/common.proto";

import "udpa/annotations/migrate.proto";
import "udpa/annotations/status.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.transport_socket.tap.v2alpha";
option java_outer_classname = "TapProto";
option java_multiple_files = true;
option (udpa.annotations.file_migrate).move_to_package =
    "envoy.extensions.transport_sockets.tap.v3";
option (udpa.annotations.file_status).work_in_progress = true;
option (udpa.annotations.file_status).package_version_status = FROZEN;

// [#protodoc-title: Tap]
// [#extension: envoy.transport_sockets.tap]

// Configuration for tap transport socket. This wraps another transport socket, providing the
// ability to interpose and record in plain text any traffic that is surfaced to Envoy.
message Tap {
  // Common configuration for the tap transport socket.
  common.tap.v2alpha.CommonExtensionConfig common_config = 1
      [(validate.rules).message = {required: true}];

  // The underlying transport socket being wrapped.
  api.v2.core.TransportSocket transport_socket = 2 [(validate.rules).message = {required: true}];
}
