syntax = "proto3";

package envoy.extensions.common.tap.v4alpha;

import "envoy/config/tap/v4alpha/common.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.common.tap.v4alpha";
option java_outer_classname = "CommonProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = NEXT_MAJOR_VERSION_CANDIDATE;

// [#protodoc-title: Common tap extension configuration]

// Common configuration for all tap extensions.
message CommonExtensionConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.extensions.common.tap.v3.CommonExtensionConfig";

  oneof config_type {
    option (validate.required) = true;

    // If specified, the tap filter will be configured via an admin handler.
    AdminConfig admin_config = 1;

    // If specified, the tap filter will be configured via a static configuration that cannot be
    // changed.
    config.tap.v4alpha.TapConfig static_config = 2;
  }
}

// Configuration for the admin handler. See :ref:`here <config_http_filters_tap_admin_handler>` for
// more information.
message AdminConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.extensions.common.tap.v3.AdminConfig";

  // Opaque configuration ID. When requests are made to the admin handler, the passed opaque ID is
  // matched to the configured filter opaque ID to determine which filter to configure.
  string config_id = 1 [(validate.rules).string = {min_len: 1}];
}
