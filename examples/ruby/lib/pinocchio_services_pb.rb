# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: pinocchio.proto for package 'instacart.infra.pinocchio.v2'

require 'grpc'
require 'pinocchio_pb'

module Instacart
  module Infra
    module Pinocchio
      module V2
        module PinocchioService
          # Service for checking network health. This is not a real service and is only used for testing purpose via the pinocchio app.
          # Service standard requires that upon receiving a "Where are you?" message - the server responds with NOT_FOUND and
          # grpc message of "Not here"
          class Service

            include ::GRPC::GenericService

            self.marshal_class_method = :encode
            self.unmarshal_class_method = :decode
            self.service_name = 'instacart.infra.pinocchio.v2.PinocchioService'

            # Performs an echo operation, sending a string and getting it back.
            rpc :Echo, ::Instacart::Infra::Pinocchio::V2::EchoRequest, ::Instacart::Infra::Pinocchio::V2::EchoResponse
            # Collects each request from stream and returns them joined by ", "
            rpc :EchoStreamRequest, stream(::Instacart::Infra::Pinocchio::V2::EchoRequest), ::Instacart::Infra::Pinocchio::V2::EchoResponse
            # Returns the request 3 times
            rpc :EchoStreamResponse, ::Instacart::Infra::Pinocchio::V2::EchoRequest, stream(::Instacart::Infra::Pinocchio::V2::EchoResponse)
            # Echoes each request
            rpc :EchoStreamRequestResponse, stream(::Instacart::Infra::Pinocchio::V2::EchoRequest), stream(::Instacart::Infra::Pinocchio::V2::EchoResponse)
          end

          Stub = Service.rpc_stub_class
        end
      end
    end
  end
end
