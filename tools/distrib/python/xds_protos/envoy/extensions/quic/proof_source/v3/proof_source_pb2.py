# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: envoy/extensions/quic/proof_source/v3/proof_source.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'envoy/extensions/quic/proof_source/v3/proof_source.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from udpa.annotations import status_pb2 as udpa_dot_annotations_dot_status__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n8envoy/extensions/quic/proof_source/v3/proof_source.proto\x12%envoy.extensions.quic.proof_source.v3\x1a\x1dudpa/annotations/status.proto\"\x13\n\x11ProofSourceConfigB\xae\x01\n3io.envoyproxy.envoy.extensions.quic.proof_source.v3B\x10ProofSourceProtoP\x01Z[github.com/envoyproxy/go-control-plane/envoy/extensions/quic/proof_source/v3;proof_sourcev3\xba\x80\xc8\xd1\x06\x02\x10\x02\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'envoy.extensions.quic.proof_source.v3.proof_source_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n3io.envoyproxy.envoy.extensions.quic.proof_source.v3B\020ProofSourceProtoP\001Z[github.com/envoyproxy/go-control-plane/envoy/extensions/quic/proof_source/v3;proof_sourcev3\272\200\310\321\006\002\020\002'
  _globals['_PROOFSOURCECONFIG']._serialized_start=130
  _globals['_PROOFSOURCECONFIG']._serialized_end=149
# @@protoc_insertion_point(module_scope)
