<%def name="resolver_gce_integration_tests(tests, records, resolver_tests_common_zone_name)">#!/bin/bash
# Copyright 2015 gRPC authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is auto-generated

set -ex

if [[ "$GRPC_DNS_RESOLVER" == "" ]]; then
  export GRPC_DNS_RESOLVER=ares
elif [[ "$GRPC_DNS_RESOLVER" != ares ]]; then
  echo "Unexpected: GRPC_DNS_RESOLVER=$GRPC_DNS_RESOLVER. This test only works with c-ares resolver"
  exit 1
fi

cd "$(dirname "$0")/../../.."

if [[ "$CONFIG" == "" ]]; then
  export CONFIG=opt
fi
make resolver_component_test
echo "Sanity check DNS records are resolveable with dig:"
EXIT_CODE=0

% for r in records:
ONE_FAILED=0
dig ${r['type']} ${r['name']}.${resolver_tests_common_zone_name} | grep 'ANSWER SECTION' || ONE_FAILED=1
if [[ "$ONE_FAILED" != 0 ]]; then
  echo "Sanity check: dig ${r['type']} ${r['name']}.${resolver_tests_common_zone_name} FAILED"
  exit 1
fi

% endfor
echo "Sanity check PASSED. Run resolver tests:"

% for test in tests:
ONE_FAILED=0
bins/$CONFIG/resolver_component_test \\

  --target_name='${test['target_name']}' \\

  --expected_addrs='${test['expected_addrs']}' \\

  --expected_chosen_service_config='${test['expected_chosen_service_config']}' \\

  --expected_lb_policy='${test['expected_lb_policy']}' || ONE_FAILED=1
if [[ "$ONE_FAILED" != 0 ]]; then
  echo "Test based on target record: ${test['target_name']} FAILED"
  EXIT_CODE=1
fi

% endfor
exit $EXIT_CODE</%def>
