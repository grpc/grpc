%YAML 1.2
--- |
  /*
   *
   * Copyright 2016 gRPC authors.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   *
   *     http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing, software
   * distributed under the License is distributed on an "AS IS" BASIS,
   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   * See the License for the specific language governing permissions and
   * limitations under the License.
   *
   */

  <%
  def is_platform_header(hdr):
    for platform_identifier in ['_gcc', '_windows', '_pthread',
                                '_zookeeper', '_msvc', '_posix']:
      if platform_identifier in hdr:
        return True
    return False
  hdrs = set()
  pfx = 'include/'
  for lib in libs:
    if lib.language != 'c': continue
    for hdr in lib.get('public_headers', []):
      if is_platform_header(hdr): continue
      if 'grpc_cronet.h' in hdr: continue
      assert(hdr[0:len(pfx)] == pfx)
      hdrs.add(hdr[len(pfx):])
  hdrs = sorted(list(hdrs))
  fns = list()
  for api in c_apis:
    if is_platform_header(api.header):
      continue
    fns.append(api.name)
  %>\
  % for hdr in hdrs:
  #include <${hdr}>
  % endfor

  #include <stdio.h>

  int main(int argc, char **argv) {
    % for fn in fns:
    printf("%lx", (unsigned long) ${fn});
    % endfor
    return 0;
  }
