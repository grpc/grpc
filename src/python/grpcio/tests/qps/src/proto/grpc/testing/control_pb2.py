# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/control.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from src.proto.grpc.testing import payloads_pb2 as src_dot_proto_dot_grpc_dot_testing_dot_payloads__pb2
from src.proto.grpc.testing import stats_pb2 as src_dot_proto_dot_grpc_dot_testing_dot_stats__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/proto/grpc/testing/control.proto',
  package='grpc.testing',
  syntax='proto3',
  serialized_pb=_b('\n$src/proto/grpc/testing/control.proto\x12\x0cgrpc.testing\x1a%src/proto/grpc/testing/payloads.proto\x1a\"src/proto/grpc/testing/stats.proto\"%\n\rPoissonParams\x12\x14\n\x0coffered_load\x18\x01 \x01(\x01\"A\n\rUniformParams\x12\x17\n\x0finterarrival_lo\x18\x01 \x01(\x01\x12\x17\n\x0finterarrival_hi\x18\x02 \x01(\x01\"+\n\x13\x44\x65terministicParams\x12\x14\n\x0coffered_load\x18\x01 \x01(\x01\"8\n\x0cParetoParams\x12\x19\n\x11interarrival_base\x18\x01 \x01(\x01\x12\r\n\x05\x61lpha\x18\x02 \x01(\x01\"\x12\n\x10\x43losedLoopParams\"\x8e\x02\n\nLoadParams\x12\x35\n\x0b\x63losed_loop\x18\x01 \x01(\x0b\x32\x1e.grpc.testing.ClosedLoopParamsH\x00\x12.\n\x07poisson\x18\x02 \x01(\x0b\x32\x1b.grpc.testing.PoissonParamsH\x00\x12.\n\x07uniform\x18\x03 \x01(\x0b\x32\x1b.grpc.testing.UniformParamsH\x00\x12\x33\n\x06\x64\x65term\x18\x04 \x01(\x0b\x32!.grpc.testing.DeterministicParamsH\x00\x12,\n\x06pareto\x18\x05 \x01(\x0b\x32\x1a.grpc.testing.ParetoParamsH\x00\x42\x06\n\x04load\"C\n\x0eSecurityParams\x12\x13\n\x0buse_test_ca\x18\x01 \x01(\x08\x12\x1c\n\x14server_host_override\x18\x02 \x01(\t\"\xd6\x03\n\x0c\x43lientConfig\x12\x16\n\x0eserver_targets\x18\x01 \x03(\t\x12-\n\x0b\x63lient_type\x18\x02 \x01(\x0e\x32\x18.grpc.testing.ClientType\x12\x35\n\x0fsecurity_params\x18\x03 \x01(\x0b\x32\x1c.grpc.testing.SecurityParams\x12$\n\x1coutstanding_rpcs_per_channel\x18\x04 \x01(\x05\x12\x17\n\x0f\x63lient_channels\x18\x05 \x01(\x05\x12\x1c\n\x14\x61sync_client_threads\x18\x07 \x01(\x05\x12\'\n\x08rpc_type\x18\x08 \x01(\x0e\x32\x15.grpc.testing.RpcType\x12-\n\x0bload_params\x18\n \x01(\x0b\x32\x18.grpc.testing.LoadParams\x12\x33\n\x0epayload_config\x18\x0b \x01(\x0b\x32\x1b.grpc.testing.PayloadConfig\x12\x37\n\x10histogram_params\x18\x0c \x01(\x0b\x32\x1d.grpc.testing.HistogramParams\x12\x11\n\tcore_list\x18\r \x03(\x05\x12\x12\n\ncore_limit\x18\x0e \x01(\x05\"8\n\x0c\x43lientStatus\x12(\n\x05stats\x18\x01 \x01(\x0b\x32\x19.grpc.testing.ClientStats\"\x15\n\x04Mark\x12\r\n\x05reset\x18\x01 \x01(\x08\"h\n\nClientArgs\x12+\n\x05setup\x18\x01 \x01(\x0b\x32\x1a.grpc.testing.ClientConfigH\x00\x12\"\n\x04mark\x18\x02 \x01(\x0b\x32\x12.grpc.testing.MarkH\x00\x42\t\n\x07\x61rgtype\"\xfc\x01\n\x0cServerConfig\x12-\n\x0bserver_type\x18\x01 \x01(\x0e\x32\x18.grpc.testing.ServerType\x12\x35\n\x0fsecurity_params\x18\x02 \x01(\x0b\x32\x1c.grpc.testing.SecurityParams\x12\x0c\n\x04port\x18\x04 \x01(\x05\x12\x1c\n\x14\x61sync_server_threads\x18\x07 \x01(\x05\x12\x12\n\ncore_limit\x18\x08 \x01(\x05\x12\x33\n\x0epayload_config\x18\t \x01(\x0b\x32\x1b.grpc.testing.PayloadConfig\x12\x11\n\tcore_list\x18\n \x03(\x05\"h\n\nServerArgs\x12+\n\x05setup\x18\x01 \x01(\x0b\x32\x1a.grpc.testing.ServerConfigH\x00\x12\"\n\x04mark\x18\x02 \x01(\x0b\x32\x12.grpc.testing.MarkH\x00\x42\t\n\x07\x61rgtype\"U\n\x0cServerStatus\x12(\n\x05stats\x18\x01 \x01(\x0b\x32\x19.grpc.testing.ServerStats\x12\x0c\n\x04port\x18\x02 \x01(\x05\x12\r\n\x05\x63ores\x18\x03 \x01(\x05\"\r\n\x0b\x43oreRequest\"\x1d\n\x0c\x43oreResponse\x12\r\n\x05\x63ores\x18\x01 \x01(\x05\"\x06\n\x04Void\"\xfd\x01\n\x08Scenario\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x31\n\rclient_config\x18\x02 \x01(\x0b\x32\x1a.grpc.testing.ClientConfig\x12\x13\n\x0bnum_clients\x18\x03 \x01(\x05\x12\x31\n\rserver_config\x18\x04 \x01(\x0b\x32\x1a.grpc.testing.ServerConfig\x12\x13\n\x0bnum_servers\x18\x05 \x01(\x05\x12\x16\n\x0ewarmup_seconds\x18\x06 \x01(\x05\x12\x19\n\x11\x62\x65nchmark_seconds\x18\x07 \x01(\x05\x12 \n\x18spawn_local_worker_count\x18\x08 \x01(\x05\"6\n\tScenarios\x12)\n\tscenarios\x18\x01 \x03(\x0b\x32\x16.grpc.testing.Scenario*/\n\nClientType\x12\x0f\n\x0bSYNC_CLIENT\x10\x00\x12\x10\n\x0c\x41SYNC_CLIENT\x10\x01*I\n\nServerType\x12\x0f\n\x0bSYNC_SERVER\x10\x00\x12\x10\n\x0c\x41SYNC_SERVER\x10\x01\x12\x18\n\x14\x41SYNC_GENERIC_SERVER\x10\x02*#\n\x07RpcType\x12\t\n\x05UNARY\x10\x00\x12\r\n\tSTREAMING\x10\x01\x62\x06proto3')
  ,
  dependencies=[src_dot_proto_dot_grpc_dot_testing_dot_payloads__pb2.DESCRIPTOR,src_dot_proto_dot_grpc_dot_testing_dot_stats__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_CLIENTTYPE = _descriptor.EnumDescriptor(
  name='ClientType',
  full_name='grpc.testing.ClientType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SYNC_CLIENT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASYNC_CLIENT', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2174,
  serialized_end=2221,
)
_sym_db.RegisterEnumDescriptor(_CLIENTTYPE)

ClientType = enum_type_wrapper.EnumTypeWrapper(_CLIENTTYPE)
_SERVERTYPE = _descriptor.EnumDescriptor(
  name='ServerType',
  full_name='grpc.testing.ServerType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SYNC_SERVER', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASYNC_SERVER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASYNC_GENERIC_SERVER', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2223,
  serialized_end=2296,
)
_sym_db.RegisterEnumDescriptor(_SERVERTYPE)

ServerType = enum_type_wrapper.EnumTypeWrapper(_SERVERTYPE)
_RPCTYPE = _descriptor.EnumDescriptor(
  name='RpcType',
  full_name='grpc.testing.RpcType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNARY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STREAMING', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2298,
  serialized_end=2333,
)
_sym_db.RegisterEnumDescriptor(_RPCTYPE)

RpcType = enum_type_wrapper.EnumTypeWrapper(_RPCTYPE)
SYNC_CLIENT = 0
ASYNC_CLIENT = 1
SYNC_SERVER = 0
ASYNC_SERVER = 1
ASYNC_GENERIC_SERVER = 2
UNARY = 0
STREAMING = 1



_POISSONPARAMS = _descriptor.Descriptor(
  name='PoissonParams',
  full_name='grpc.testing.PoissonParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offered_load', full_name='grpc.testing.PoissonParams.offered_load', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=166,
)


_UNIFORMPARAMS = _descriptor.Descriptor(
  name='UniformParams',
  full_name='grpc.testing.UniformParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interarrival_lo', full_name='grpc.testing.UniformParams.interarrival_lo', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='interarrival_hi', full_name='grpc.testing.UniformParams.interarrival_hi', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=168,
  serialized_end=233,
)


_DETERMINISTICPARAMS = _descriptor.Descriptor(
  name='DeterministicParams',
  full_name='grpc.testing.DeterministicParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offered_load', full_name='grpc.testing.DeterministicParams.offered_load', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=235,
  serialized_end=278,
)


_PARETOPARAMS = _descriptor.Descriptor(
  name='ParetoParams',
  full_name='grpc.testing.ParetoParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='interarrival_base', full_name='grpc.testing.ParetoParams.interarrival_base', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alpha', full_name='grpc.testing.ParetoParams.alpha', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=280,
  serialized_end=336,
)


_CLOSEDLOOPPARAMS = _descriptor.Descriptor(
  name='ClosedLoopParams',
  full_name='grpc.testing.ClosedLoopParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=338,
  serialized_end=356,
)


_LOADPARAMS = _descriptor.Descriptor(
  name='LoadParams',
  full_name='grpc.testing.LoadParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='closed_loop', full_name='grpc.testing.LoadParams.closed_loop', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='poisson', full_name='grpc.testing.LoadParams.poisson', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='uniform', full_name='grpc.testing.LoadParams.uniform', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='determ', full_name='grpc.testing.LoadParams.determ', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pareto', full_name='grpc.testing.LoadParams.pareto', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='load', full_name='grpc.testing.LoadParams.load',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=359,
  serialized_end=629,
)


_SECURITYPARAMS = _descriptor.Descriptor(
  name='SecurityParams',
  full_name='grpc.testing.SecurityParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='use_test_ca', full_name='grpc.testing.SecurityParams.use_test_ca', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='server_host_override', full_name='grpc.testing.SecurityParams.server_host_override', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=631,
  serialized_end=698,
)


_CLIENTCONFIG = _descriptor.Descriptor(
  name='ClientConfig',
  full_name='grpc.testing.ClientConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_targets', full_name='grpc.testing.ClientConfig.server_targets', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_type', full_name='grpc.testing.ClientConfig.client_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='security_params', full_name='grpc.testing.ClientConfig.security_params', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='outstanding_rpcs_per_channel', full_name='grpc.testing.ClientConfig.outstanding_rpcs_per_channel', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_channels', full_name='grpc.testing.ClientConfig.client_channels', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='async_client_threads', full_name='grpc.testing.ClientConfig.async_client_threads', index=5,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='rpc_type', full_name='grpc.testing.ClientConfig.rpc_type', index=6,
      number=8, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='load_params', full_name='grpc.testing.ClientConfig.load_params', index=7,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload_config', full_name='grpc.testing.ClientConfig.payload_config', index=8,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='histogram_params', full_name='grpc.testing.ClientConfig.histogram_params', index=9,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='core_list', full_name='grpc.testing.ClientConfig.core_list', index=10,
      number=13, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='core_limit', full_name='grpc.testing.ClientConfig.core_limit', index=11,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=701,
  serialized_end=1171,
)


_CLIENTSTATUS = _descriptor.Descriptor(
  name='ClientStatus',
  full_name='grpc.testing.ClientStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stats', full_name='grpc.testing.ClientStatus.stats', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1173,
  serialized_end=1229,
)


_MARK = _descriptor.Descriptor(
  name='Mark',
  full_name='grpc.testing.Mark',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='reset', full_name='grpc.testing.Mark.reset', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1231,
  serialized_end=1252,
)


_CLIENTARGS = _descriptor.Descriptor(
  name='ClientArgs',
  full_name='grpc.testing.ClientArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='setup', full_name='grpc.testing.ClientArgs.setup', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mark', full_name='grpc.testing.ClientArgs.mark', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='argtype', full_name='grpc.testing.ClientArgs.argtype',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1254,
  serialized_end=1358,
)


_SERVERCONFIG = _descriptor.Descriptor(
  name='ServerConfig',
  full_name='grpc.testing.ServerConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='server_type', full_name='grpc.testing.ServerConfig.server_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='security_params', full_name='grpc.testing.ServerConfig.security_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='grpc.testing.ServerConfig.port', index=2,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='async_server_threads', full_name='grpc.testing.ServerConfig.async_server_threads', index=3,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='core_limit', full_name='grpc.testing.ServerConfig.core_limit', index=4,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload_config', full_name='grpc.testing.ServerConfig.payload_config', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='core_list', full_name='grpc.testing.ServerConfig.core_list', index=6,
      number=10, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1361,
  serialized_end=1613,
)


_SERVERARGS = _descriptor.Descriptor(
  name='ServerArgs',
  full_name='grpc.testing.ServerArgs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='setup', full_name='grpc.testing.ServerArgs.setup', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mark', full_name='grpc.testing.ServerArgs.mark', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='argtype', full_name='grpc.testing.ServerArgs.argtype',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1615,
  serialized_end=1719,
)


_SERVERSTATUS = _descriptor.Descriptor(
  name='ServerStatus',
  full_name='grpc.testing.ServerStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stats', full_name='grpc.testing.ServerStatus.stats', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='grpc.testing.ServerStatus.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='cores', full_name='grpc.testing.ServerStatus.cores', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1721,
  serialized_end=1806,
)


_COREREQUEST = _descriptor.Descriptor(
  name='CoreRequest',
  full_name='grpc.testing.CoreRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1808,
  serialized_end=1821,
)


_CORERESPONSE = _descriptor.Descriptor(
  name='CoreResponse',
  full_name='grpc.testing.CoreResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cores', full_name='grpc.testing.CoreResponse.cores', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1823,
  serialized_end=1852,
)


_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='grpc.testing.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1854,
  serialized_end=1860,
)


_SCENARIO = _descriptor.Descriptor(
  name='Scenario',
  full_name='grpc.testing.Scenario',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='grpc.testing.Scenario.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='client_config', full_name='grpc.testing.Scenario.client_config', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_clients', full_name='grpc.testing.Scenario.num_clients', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='server_config', full_name='grpc.testing.Scenario.server_config', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_servers', full_name='grpc.testing.Scenario.num_servers', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='warmup_seconds', full_name='grpc.testing.Scenario.warmup_seconds', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='benchmark_seconds', full_name='grpc.testing.Scenario.benchmark_seconds', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='spawn_local_worker_count', full_name='grpc.testing.Scenario.spawn_local_worker_count', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1863,
  serialized_end=2116,
)


_SCENARIOS = _descriptor.Descriptor(
  name='Scenarios',
  full_name='grpc.testing.Scenarios',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='scenarios', full_name='grpc.testing.Scenarios.scenarios', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2118,
  serialized_end=2172,
)

_LOADPARAMS.fields_by_name['closed_loop'].message_type = _CLOSEDLOOPPARAMS
_LOADPARAMS.fields_by_name['poisson'].message_type = _POISSONPARAMS
_LOADPARAMS.fields_by_name['uniform'].message_type = _UNIFORMPARAMS
_LOADPARAMS.fields_by_name['determ'].message_type = _DETERMINISTICPARAMS
_LOADPARAMS.fields_by_name['pareto'].message_type = _PARETOPARAMS
_LOADPARAMS.oneofs_by_name['load'].fields.append(
  _LOADPARAMS.fields_by_name['closed_loop'])
_LOADPARAMS.fields_by_name['closed_loop'].containing_oneof = _LOADPARAMS.oneofs_by_name['load']
_LOADPARAMS.oneofs_by_name['load'].fields.append(
  _LOADPARAMS.fields_by_name['poisson'])
_LOADPARAMS.fields_by_name['poisson'].containing_oneof = _LOADPARAMS.oneofs_by_name['load']
_LOADPARAMS.oneofs_by_name['load'].fields.append(
  _LOADPARAMS.fields_by_name['uniform'])
_LOADPARAMS.fields_by_name['uniform'].containing_oneof = _LOADPARAMS.oneofs_by_name['load']
_LOADPARAMS.oneofs_by_name['load'].fields.append(
  _LOADPARAMS.fields_by_name['determ'])
_LOADPARAMS.fields_by_name['determ'].containing_oneof = _LOADPARAMS.oneofs_by_name['load']
_LOADPARAMS.oneofs_by_name['load'].fields.append(
  _LOADPARAMS.fields_by_name['pareto'])
_LOADPARAMS.fields_by_name['pareto'].containing_oneof = _LOADPARAMS.oneofs_by_name['load']
_CLIENTCONFIG.fields_by_name['client_type'].enum_type = _CLIENTTYPE
_CLIENTCONFIG.fields_by_name['security_params'].message_type = _SECURITYPARAMS
_CLIENTCONFIG.fields_by_name['rpc_type'].enum_type = _RPCTYPE
_CLIENTCONFIG.fields_by_name['load_params'].message_type = _LOADPARAMS
_CLIENTCONFIG.fields_by_name['payload_config'].message_type = src_dot_proto_dot_grpc_dot_testing_dot_payloads__pb2._PAYLOADCONFIG
_CLIENTCONFIG.fields_by_name['histogram_params'].message_type = src_dot_proto_dot_grpc_dot_testing_dot_stats__pb2._HISTOGRAMPARAMS
_CLIENTSTATUS.fields_by_name['stats'].message_type = src_dot_proto_dot_grpc_dot_testing_dot_stats__pb2._CLIENTSTATS
_CLIENTARGS.fields_by_name['setup'].message_type = _CLIENTCONFIG
_CLIENTARGS.fields_by_name['mark'].message_type = _MARK
_CLIENTARGS.oneofs_by_name['argtype'].fields.append(
  _CLIENTARGS.fields_by_name['setup'])
_CLIENTARGS.fields_by_name['setup'].containing_oneof = _CLIENTARGS.oneofs_by_name['argtype']
_CLIENTARGS.oneofs_by_name['argtype'].fields.append(
  _CLIENTARGS.fields_by_name['mark'])
_CLIENTARGS.fields_by_name['mark'].containing_oneof = _CLIENTARGS.oneofs_by_name['argtype']
_SERVERCONFIG.fields_by_name['server_type'].enum_type = _SERVERTYPE
_SERVERCONFIG.fields_by_name['security_params'].message_type = _SECURITYPARAMS
_SERVERCONFIG.fields_by_name['payload_config'].message_type = src_dot_proto_dot_grpc_dot_testing_dot_payloads__pb2._PAYLOADCONFIG
_SERVERARGS.fields_by_name['setup'].message_type = _SERVERCONFIG
_SERVERARGS.fields_by_name['mark'].message_type = _MARK
_SERVERARGS.oneofs_by_name['argtype'].fields.append(
  _SERVERARGS.fields_by_name['setup'])
_SERVERARGS.fields_by_name['setup'].containing_oneof = _SERVERARGS.oneofs_by_name['argtype']
_SERVERARGS.oneofs_by_name['argtype'].fields.append(
  _SERVERARGS.fields_by_name['mark'])
_SERVERARGS.fields_by_name['mark'].containing_oneof = _SERVERARGS.oneofs_by_name['argtype']
_SERVERSTATUS.fields_by_name['stats'].message_type = src_dot_proto_dot_grpc_dot_testing_dot_stats__pb2._SERVERSTATS
_SCENARIO.fields_by_name['client_config'].message_type = _CLIENTCONFIG
_SCENARIO.fields_by_name['server_config'].message_type = _SERVERCONFIG
_SCENARIOS.fields_by_name['scenarios'].message_type = _SCENARIO
DESCRIPTOR.message_types_by_name['PoissonParams'] = _POISSONPARAMS
DESCRIPTOR.message_types_by_name['UniformParams'] = _UNIFORMPARAMS
DESCRIPTOR.message_types_by_name['DeterministicParams'] = _DETERMINISTICPARAMS
DESCRIPTOR.message_types_by_name['ParetoParams'] = _PARETOPARAMS
DESCRIPTOR.message_types_by_name['ClosedLoopParams'] = _CLOSEDLOOPPARAMS
DESCRIPTOR.message_types_by_name['LoadParams'] = _LOADPARAMS
DESCRIPTOR.message_types_by_name['SecurityParams'] = _SECURITYPARAMS
DESCRIPTOR.message_types_by_name['ClientConfig'] = _CLIENTCONFIG
DESCRIPTOR.message_types_by_name['ClientStatus'] = _CLIENTSTATUS
DESCRIPTOR.message_types_by_name['Mark'] = _MARK
DESCRIPTOR.message_types_by_name['ClientArgs'] = _CLIENTARGS
DESCRIPTOR.message_types_by_name['ServerConfig'] = _SERVERCONFIG
DESCRIPTOR.message_types_by_name['ServerArgs'] = _SERVERARGS
DESCRIPTOR.message_types_by_name['ServerStatus'] = _SERVERSTATUS
DESCRIPTOR.message_types_by_name['CoreRequest'] = _COREREQUEST
DESCRIPTOR.message_types_by_name['CoreResponse'] = _CORERESPONSE
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['Scenario'] = _SCENARIO
DESCRIPTOR.message_types_by_name['Scenarios'] = _SCENARIOS
DESCRIPTOR.enum_types_by_name['ClientType'] = _CLIENTTYPE
DESCRIPTOR.enum_types_by_name['ServerType'] = _SERVERTYPE
DESCRIPTOR.enum_types_by_name['RpcType'] = _RPCTYPE

PoissonParams = _reflection.GeneratedProtocolMessageType('PoissonParams', (_message.Message,), dict(
  DESCRIPTOR = _POISSONPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.PoissonParams)
  ))
_sym_db.RegisterMessage(PoissonParams)

UniformParams = _reflection.GeneratedProtocolMessageType('UniformParams', (_message.Message,), dict(
  DESCRIPTOR = _UNIFORMPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.UniformParams)
  ))
_sym_db.RegisterMessage(UniformParams)

DeterministicParams = _reflection.GeneratedProtocolMessageType('DeterministicParams', (_message.Message,), dict(
  DESCRIPTOR = _DETERMINISTICPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.DeterministicParams)
  ))
_sym_db.RegisterMessage(DeterministicParams)

ParetoParams = _reflection.GeneratedProtocolMessageType('ParetoParams', (_message.Message,), dict(
  DESCRIPTOR = _PARETOPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ParetoParams)
  ))
_sym_db.RegisterMessage(ParetoParams)

ClosedLoopParams = _reflection.GeneratedProtocolMessageType('ClosedLoopParams', (_message.Message,), dict(
  DESCRIPTOR = _CLOSEDLOOPPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ClosedLoopParams)
  ))
_sym_db.RegisterMessage(ClosedLoopParams)

LoadParams = _reflection.GeneratedProtocolMessageType('LoadParams', (_message.Message,), dict(
  DESCRIPTOR = _LOADPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.LoadParams)
  ))
_sym_db.RegisterMessage(LoadParams)

SecurityParams = _reflection.GeneratedProtocolMessageType('SecurityParams', (_message.Message,), dict(
  DESCRIPTOR = _SECURITYPARAMS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.SecurityParams)
  ))
_sym_db.RegisterMessage(SecurityParams)

ClientConfig = _reflection.GeneratedProtocolMessageType('ClientConfig', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTCONFIG,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ClientConfig)
  ))
_sym_db.RegisterMessage(ClientConfig)

ClientStatus = _reflection.GeneratedProtocolMessageType('ClientStatus', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTSTATUS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ClientStatus)
  ))
_sym_db.RegisterMessage(ClientStatus)

Mark = _reflection.GeneratedProtocolMessageType('Mark', (_message.Message,), dict(
  DESCRIPTOR = _MARK,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.Mark)
  ))
_sym_db.RegisterMessage(Mark)

ClientArgs = _reflection.GeneratedProtocolMessageType('ClientArgs', (_message.Message,), dict(
  DESCRIPTOR = _CLIENTARGS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ClientArgs)
  ))
_sym_db.RegisterMessage(ClientArgs)

ServerConfig = _reflection.GeneratedProtocolMessageType('ServerConfig', (_message.Message,), dict(
  DESCRIPTOR = _SERVERCONFIG,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ServerConfig)
  ))
_sym_db.RegisterMessage(ServerConfig)

ServerArgs = _reflection.GeneratedProtocolMessageType('ServerArgs', (_message.Message,), dict(
  DESCRIPTOR = _SERVERARGS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ServerArgs)
  ))
_sym_db.RegisterMessage(ServerArgs)

ServerStatus = _reflection.GeneratedProtocolMessageType('ServerStatus', (_message.Message,), dict(
  DESCRIPTOR = _SERVERSTATUS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ServerStatus)
  ))
_sym_db.RegisterMessage(ServerStatus)

CoreRequest = _reflection.GeneratedProtocolMessageType('CoreRequest', (_message.Message,), dict(
  DESCRIPTOR = _COREREQUEST,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.CoreRequest)
  ))
_sym_db.RegisterMessage(CoreRequest)

CoreResponse = _reflection.GeneratedProtocolMessageType('CoreResponse', (_message.Message,), dict(
  DESCRIPTOR = _CORERESPONSE,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.CoreResponse)
  ))
_sym_db.RegisterMessage(CoreResponse)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.Void)
  ))
_sym_db.RegisterMessage(Void)

Scenario = _reflection.GeneratedProtocolMessageType('Scenario', (_message.Message,), dict(
  DESCRIPTOR = _SCENARIO,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.Scenario)
  ))
_sym_db.RegisterMessage(Scenario)

Scenarios = _reflection.GeneratedProtocolMessageType('Scenarios', (_message.Message,), dict(
  DESCRIPTOR = _SCENARIOS,
  __module__ = 'src.proto.grpc.testing.control_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.Scenarios)
  ))
_sym_db.RegisterMessage(Scenarios)


import abc
import six
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
# @@protoc_insertion_point(module_scope)
