# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/payloads.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='src/proto/grpc/testing/payloads.proto',
  package='grpc.testing',
  syntax='proto3',
  serialized_pb=_b('\n%src/proto/grpc/testing/payloads.proto\x12\x0cgrpc.testing\"7\n\x10\x42yteBufferParams\x12\x10\n\x08req_size\x18\x01 \x01(\x05\x12\x11\n\tresp_size\x18\x02 \x01(\x05\"8\n\x11SimpleProtoParams\x12\x10\n\x08req_size\x18\x01 \x01(\x05\x12\x11\n\tresp_size\x18\x02 \x01(\x05\"\x14\n\x12\x43omplexProtoParams\"\xca\x01\n\rPayloadConfig\x12\x38\n\x0e\x62ytebuf_params\x18\x01 \x01(\x0b\x32\x1e.grpc.testing.ByteBufferParamsH\x00\x12\x38\n\rsimple_params\x18\x02 \x01(\x0b\x32\x1f.grpc.testing.SimpleProtoParamsH\x00\x12:\n\x0e\x63omplex_params\x18\x03 \x01(\x0b\x32 .grpc.testing.ComplexProtoParamsH\x00\x42\t\n\x07payloadb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_BYTEBUFFERPARAMS = _descriptor.Descriptor(
  name='ByteBufferParams',
  full_name='grpc.testing.ByteBufferParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='req_size', full_name='grpc.testing.ByteBufferParams.req_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resp_size', full_name='grpc.testing.ByteBufferParams.resp_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=55,
  serialized_end=110,
)


_SIMPLEPROTOPARAMS = _descriptor.Descriptor(
  name='SimpleProtoParams',
  full_name='grpc.testing.SimpleProtoParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='req_size', full_name='grpc.testing.SimpleProtoParams.req_size', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='resp_size', full_name='grpc.testing.SimpleProtoParams.resp_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=168,
)


_COMPLEXPROTOPARAMS = _descriptor.Descriptor(
  name='ComplexProtoParams',
  full_name='grpc.testing.ComplexProtoParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=170,
  serialized_end=190,
)


_PAYLOADCONFIG = _descriptor.Descriptor(
  name='PayloadConfig',
  full_name='grpc.testing.PayloadConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bytebuf_params', full_name='grpc.testing.PayloadConfig.bytebuf_params', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='simple_params', full_name='grpc.testing.PayloadConfig.simple_params', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='complex_params', full_name='grpc.testing.PayloadConfig.complex_params', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='payload', full_name='grpc.testing.PayloadConfig.payload',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=193,
  serialized_end=395,
)

_PAYLOADCONFIG.fields_by_name['bytebuf_params'].message_type = _BYTEBUFFERPARAMS
_PAYLOADCONFIG.fields_by_name['simple_params'].message_type = _SIMPLEPROTOPARAMS
_PAYLOADCONFIG.fields_by_name['complex_params'].message_type = _COMPLEXPROTOPARAMS
_PAYLOADCONFIG.oneofs_by_name['payload'].fields.append(
  _PAYLOADCONFIG.fields_by_name['bytebuf_params'])
_PAYLOADCONFIG.fields_by_name['bytebuf_params'].containing_oneof = _PAYLOADCONFIG.oneofs_by_name['payload']
_PAYLOADCONFIG.oneofs_by_name['payload'].fields.append(
  _PAYLOADCONFIG.fields_by_name['simple_params'])
_PAYLOADCONFIG.fields_by_name['simple_params'].containing_oneof = _PAYLOADCONFIG.oneofs_by_name['payload']
_PAYLOADCONFIG.oneofs_by_name['payload'].fields.append(
  _PAYLOADCONFIG.fields_by_name['complex_params'])
_PAYLOADCONFIG.fields_by_name['complex_params'].containing_oneof = _PAYLOADCONFIG.oneofs_by_name['payload']
DESCRIPTOR.message_types_by_name['ByteBufferParams'] = _BYTEBUFFERPARAMS
DESCRIPTOR.message_types_by_name['SimpleProtoParams'] = _SIMPLEPROTOPARAMS
DESCRIPTOR.message_types_by_name['ComplexProtoParams'] = _COMPLEXPROTOPARAMS
DESCRIPTOR.message_types_by_name['PayloadConfig'] = _PAYLOADCONFIG

ByteBufferParams = _reflection.GeneratedProtocolMessageType('ByteBufferParams', (_message.Message,), dict(
  DESCRIPTOR = _BYTEBUFFERPARAMS,
  __module__ = 'src.proto.grpc.testing.payloads_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ByteBufferParams)
  ))
_sym_db.RegisterMessage(ByteBufferParams)

SimpleProtoParams = _reflection.GeneratedProtocolMessageType('SimpleProtoParams', (_message.Message,), dict(
  DESCRIPTOR = _SIMPLEPROTOPARAMS,
  __module__ = 'src.proto.grpc.testing.payloads_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.SimpleProtoParams)
  ))
_sym_db.RegisterMessage(SimpleProtoParams)

ComplexProtoParams = _reflection.GeneratedProtocolMessageType('ComplexProtoParams', (_message.Message,), dict(
  DESCRIPTOR = _COMPLEXPROTOPARAMS,
  __module__ = 'src.proto.grpc.testing.payloads_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.ComplexProtoParams)
  ))
_sym_db.RegisterMessage(ComplexProtoParams)

PayloadConfig = _reflection.GeneratedProtocolMessageType('PayloadConfig', (_message.Message,), dict(
  DESCRIPTOR = _PAYLOADCONFIG,
  __module__ = 'src.proto.grpc.testing.payloads_pb2'
  # @@protoc_insertion_point(class_scope:grpc.testing.PayloadConfig)
  ))
_sym_db.RegisterMessage(PayloadConfig)


import abc
import six
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities
# @@protoc_insertion_point(module_scope)
