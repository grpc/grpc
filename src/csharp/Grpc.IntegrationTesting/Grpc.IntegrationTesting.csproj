<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="..\Grpc.Core\Version.csproj.include" />
  <Import Project="..\Grpc.Core\Common.csproj.include" />

  <PropertyGroup>
    <TargetFrameworks>net45;netcoreapp1.0</TargetFrameworks>
    <AssemblyName>Grpc.IntegrationTesting</AssemblyName>
    <OutputType>Exe</OutputType>
    <PackageId>Grpc.IntegrationTesting</PackageId>
    <PackageTargetFallback Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">$(PackageTargetFallback);portable-net45</PackageTargetFallback>
    <RuntimeFrameworkVersion Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">1.0.4</RuntimeFrameworkVersion>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="../Grpc.Auth/Grpc.Auth.csproj" />
    <ProjectReference Include="../Grpc.Core/Grpc.Core.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="$(GoogleProtobufVersion)" />
    <PackageReference Include="CommandLineParser" Version="2.1.1-beta" />
    <PackageReference Include="Moq" Version="4.7.0" />
    <PackageReference Include="NUnit" Version="3.6.0" />
    <PackageReference Include="NUnitLite" Version="3.6.0" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net45' ">
    <Reference Include="System" />
    <Reference Include="Microsoft.CSharp" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netcoreapp1.0' ">
    <PackageReference Include="System.Linq.Expressions" Version="4.1.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Include="..\Grpc.Core\Version.cs" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="data\server1.pem">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>false</Pack>
    </Content>
    <Content Include="data\server1.key">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>false</Pack>
    </Content>
    <Content Include="data\ca.pem">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>false</Pack>
    </Content>
  </ItemGroup>

</Project>
