// Copyright 2016, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

import "google/prootbuf/timestamp.proto"

package grpc.binary_log.v1alpha;

enum Direction {
  SERVER_SEND;
  SERVER_RECV;
  CLIENT_SEND;
  CLIENT_RECV;
}

message KeyValuePair {
  string key;
  string value;
}

message Metadata {
  uint32 rpc_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  Direction direction = 3;
  repeated KeyValuePair metadata = 4;

  message ClientInitialMetadata {
    string method_name = 1;
    google.protobuf.Timestamp timestamp = 2;
  }

  message UserData {
  }

  message ServerInitialMetadata {
  }

  message ServerStatus {
    uint32 code = 1;
    string details = 2;
  }

  oneof kind {
    ClientInitialMetadata client_initial_metadata = 5;
    UserData user_data = 6;
    ServerInitialMetadata server_initial_metadata = 7;
    ServerStatus server_status = 8;
  }
}

message Message {
  uint32 rpc_id = 1;
  uint32 sequence_number = 2;
  Direction direction = 3;
  uint64 length;
  bytes data;
}