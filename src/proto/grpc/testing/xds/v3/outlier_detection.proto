// Copyright 2020 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Local copy of Envoy xDS proto file, used for testing only.

syntax = "proto3";

package envoy.config.cluster.v3;

import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

message OutlierDetection {
  // The time interval between ejection analysis sweeps. This can result in
  // both new ejections as well as hosts being returned to service. Defaults
  // to 10000ms or 10s.
  google.protobuf.Duration interval = 2;

  // The base time that a host is ejected for. The real time is equal to the
  // base time multiplied by the number of times the host has been ejected and is
  // capped by :ref:`max_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.max_ejection_time>`.
  // Defaults to 30000ms or 30s.
  google.protobuf.Duration base_ejection_time = 3;

  // The maximum % of an upstream cluster that can be ejected due to outlier
  // detection. Defaults to 10% but will eject at least one host regardless of the value.
  google.protobuf.UInt32Value max_ejection_percent = 4;

  // The % chance that a host will be actually ejected when an outlier status
  // is detected through success rate statistics. This setting can be used to
  // disable ejection or to ramp it up slowly. Defaults to 100.
  google.protobuf.UInt32Value enforcing_success_rate = 6;

  // The number of hosts in a cluster that must have enough request volume to
  // detect success rate outliers. If the number of hosts is less than this
  // setting, outlier detection via success rate statistics is not performed
  // for any host in the cluster. Defaults to 5.
  google.protobuf.UInt32Value success_rate_minimum_hosts = 7;

  // The minimum number of total requests that must be collected in one
  // interval (as defined by the interval duration above) to include this host
  // in success rate based outlier detection. If the volume is lower than this
  // setting, outlier detection via success rate statistics is not performed
  // for that host. Defaults to 100.
  google.protobuf.UInt32Value success_rate_request_volume = 8;

  // This factor is used to determine the ejection threshold for success rate
  // outlier ejection. The ejection threshold is the difference between the
  // mean success rate, and the product of this factor and the standard
  // deviation of the mean success rate: mean - (stdev *
  // success_rate_stdev_factor). This factor is divided by a thousand to get a
  // double. That is, if the desired factor is 1.9, the runtime value should
  // be 1900. Defaults to 1900.
  google.protobuf.UInt32Value success_rate_stdev_factor = 9;

  // The failure percentage to use when determining failure percentage-based outlier detection. If
  // the failure percentage of a given host is greater than or equal to this value, it will be
  // ejected. Defaults to 85.
  google.protobuf.UInt32Value failure_percentage_threshold = 16;

  // The % chance that a host will be actually ejected when an outlier status is detected through
  // failure percentage statistics. This setting can be used to disable ejection or to ramp it up
  // slowly. Defaults to 0.
  //
  // [#next-major-version: setting this without setting failure_percentage_threshold should be
  // invalid in v4.]
  google.protobuf.UInt32Value enforcing_failure_percentage = 17;

  // The minimum number of hosts in a cluster in order to perform failure percentage-based ejection.
  // If the total number of hosts in the cluster is less than this value, failure percentage-based
  // ejection will not be performed. Defaults to 5.
  google.protobuf.UInt32Value failure_percentage_minimum_hosts = 19;

  // The minimum number of total requests that must be collected in one interval (as defined by the
  // interval duration above) to perform failure percentage-based ejection for this host. If the
  // volume is lower than this setting, failure percentage-based ejection will not be performed for
  // this host. Defaults to 50.
  google.protobuf.UInt32Value failure_percentage_request_volume = 20;

  // The maximum time that a host is ejected for. See :ref:`base_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.base_ejection_time>`
  // for more information. If not specified, the default value (300000ms or 300s) or
  // :ref:`base_ejection_time<envoy_v3_api_field_config.cluster.v3.OutlierDetection.base_ejection_time>` value is applied, whatever is larger.
  google.protobuf.Duration max_ejection_time = 21;

}
