module helloworld.helloworldrpc;


// Generated by the gRPC dlang plugin.
// If you make any local change, they will be lost.


import helloworld.helloworld;
import std.array;
public import hunt.net.Result;
import grpc;
import google.protobuf;
import kiss.logger;




class GreeterClient
{
	this(Channel channel)
	{
		_channel = channel;
	}

	HelloReply SayHello( HelloRequest request)
	{
		mixin(CM!(HelloReply , GreeterBase.SERVICE));
	}

	void SayHello( HelloRequest request , void delegate(Result!HelloReply reply) dele)
	{
		mixin(CMA!(HelloReply , GreeterBase.SERVICE));
	}


	private:
	Channel _channel;
}

class GreeterBase: GrpcService
{
	enum SERVICE  = "helloworld.Greeter";
	string getModule()
	{
		return SERVICE;
	}

	HelloReply SayHello(HelloRequest ){ return new HelloReply(); }

	ubyte[] process(string method , ubyte[] data)
	{
		switch(method)
		{
			mixin(SM!(HelloRequest , "SayHello"));

			default:
			logWarning("none method ", method);
				return null;
		}
	}
}


