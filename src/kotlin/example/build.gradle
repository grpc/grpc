buildscript {
  ext.kotlin_version = '1.3.61'
  ext.coroutines_version = '1.3.3'
  ext.grpc_version = '1.26.0'
  ext.protobuf_version = '3.11.1'

  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

repositories {
  google()
  jcenter()
  mavenCentral()
  mavenLocal()
}

apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

// Generate IntelliJ IDEA's .idea & .iml project files.
// protobuf-gradle-plugin automatically registers *.proto and the gen output files
// to IntelliJ as sources.
// For best results, install the Protobuf and Kotlin plugins for IntelliJ.
apply plugin: 'idea'
apply plugin: 'application'

dependencies {
  implementation "com.google.protobuf:protobuf-kotlin-util:0.1"
  implementation "com.google.protobuf:protobuf-kotlin:0.1"

  // This repo
  implementation "io.grpc:grpc-kotlin:0.1"

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"

  // Grpc and Protobuf
  implementation 'com.google.protobuf:protobuf-gradle-plugin:0.8.11'
  implementation 'com.google.protobuf:protobuf-java:${protobuf_version}'
  implementation 'com.google.protobuf:protobuf-java-util:3.11.1'
  implementation "io.grpc:grpc-netty-shaded:${grpc_version}"
  implementation "io.grpc:grpc-protobuf:${grpc_version}"
  implementation "io.grpc:grpc-stub:${grpc_version}"

  // Java
  compileOnly "javax.annotation:javax.annotation-api:1.2"

  // Google
  implementation "com.google.guava:guava:28.2-jre"
}

protobuf {
    protoc { artifact = 'com.google.protobuf:protoc:3.11.0' }
    plugins {
        // Specify protoc to generate using kotlin protobuf plugin
        kotlin {
            artifact = 'com.google.protobuf:protobuf-kotlin:0.1'
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.27.0'
        }
        // Specify protoc to generate using our grpc kotlin plugin
        grpckt {
            artifact = 'io.grpc:grpc-kotlin:0.1'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                // Generate Kotlin classes using proto-kotlin
                kotlin { }
                // Generate Java gRPC classes
                grpc { }
                // Generate Kotlin gRPC using the custom plugin from library
                grpckt { }
            }
        }
    }
}

startScripts.enabled = false

task routeGuideServer(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.routeguide.RouteGuideServer'
    applicationName = 'route-guide-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task routeGuideClient(type: CreateStartScripts) {
    mainClassName = 'io.grpc.examples.routeguide.RouteGuideClient'
    applicationName = 'route-guide-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(routeGuideServer)
    from(routeGuideClient)
    fileMode = 0755
}
