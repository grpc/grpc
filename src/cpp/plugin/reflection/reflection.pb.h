// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reflection.proto

#ifndef PROTOBUF_reflection_2eproto__INCLUDED
#define PROTOBUF_reflection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/descriptor.pb.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace grpc {
namespace reflection {
namespace v1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_reflection_2eproto();
void protobuf_AssignDesc_reflection_2eproto();
void protobuf_ShutdownFile_reflection_2eproto();

class GetDescriptorRequest;
class GetEnumTypeResponse;
class GetEnumValueResponse;
class GetExtensionResponse;
class GetMessageTypeResponse;
class GetMethodResponse;
class GetServiceResponse;
class ListServiceRequest;
class ListServiceResponse;

// ===================================================================

class ListServiceRequest : public ::google::protobuf::Message {
 public:
  ListServiceRequest();
  virtual ~ListServiceRequest();

  ListServiceRequest(const ListServiceRequest& from);

  inline ListServiceRequest& operator=(const ListServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceRequest& default_instance();

  void Swap(ListServiceRequest* other);

  // implements Message ----------------------------------------------

  inline ListServiceRequest* New() const { return New(NULL); }

  ListServiceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceRequest& from);
  void MergeFrom(const ListServiceRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.ListServiceRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static ListServiceRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetDescriptorRequest : public ::google::protobuf::Message {
 public:
  GetDescriptorRequest();
  virtual ~GetDescriptorRequest();

  GetDescriptorRequest(const GetDescriptorRequest& from);

  inline GetDescriptorRequest& operator=(const GetDescriptorRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetDescriptorRequest& default_instance();

  void Swap(GetDescriptorRequest* other);

  // implements Message ----------------------------------------------

  inline GetDescriptorRequest* New() const { return New(NULL); }

  GetDescriptorRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetDescriptorRequest& from);
  void MergeFrom(const GetDescriptorRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetDescriptorRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetDescriptorRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetDescriptorRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListServiceResponse : public ::google::protobuf::Message {
 public:
  ListServiceResponse();
  virtual ~ListServiceResponse();

  ListServiceResponse(const ListServiceResponse& from);

  inline ListServiceResponse& operator=(const ListServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceResponse& default_instance();

  void Swap(ListServiceResponse* other);

  // implements Message ----------------------------------------------

  inline ListServiceResponse* New() const { return New(NULL); }

  ListServiceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceResponse& from);
  void MergeFrom(const ListServiceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::std::string& services(int index) const;
  ::std::string* mutable_services(int index);
  void set_services(int index, const ::std::string& value);
  void set_services(int index, const char* value);
  void set_services(int index, const char* value, size_t size);
  ::std::string* add_services();
  void add_services(const ::std::string& value);
  void add_services(const char* value);
  void add_services(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& services() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_services();

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.ListServiceResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> services_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static ListServiceResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetMethodResponse : public ::google::protobuf::Message {
 public:
  GetMethodResponse();
  virtual ~GetMethodResponse();

  GetMethodResponse(const GetMethodResponse& from);

  inline GetMethodResponse& operator=(const GetMethodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMethodResponse& default_instance();

  void Swap(GetMethodResponse* other);

  // implements Message ----------------------------------------------

  inline GetMethodResponse* New() const { return New(NULL); }

  GetMethodResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMethodResponse& from);
  void MergeFrom(const GetMethodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMethodResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.MethodDescriptorProto method = 1;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  const ::google::protobuf::MethodDescriptorProto& method() const;
  ::google::protobuf::MethodDescriptorProto* mutable_method();
  ::google::protobuf::MethodDescriptorProto* release_method();
  void set_allocated_method(::google::protobuf::MethodDescriptorProto* method);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetMethodResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::MethodDescriptorProto* method_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetMethodResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetServiceResponse : public ::google::protobuf::Message {
 public:
  GetServiceResponse();
  virtual ~GetServiceResponse();

  GetServiceResponse(const GetServiceResponse& from);

  inline GetServiceResponse& operator=(const GetServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetServiceResponse& default_instance();

  void Swap(GetServiceResponse* other);

  // implements Message ----------------------------------------------

  inline GetServiceResponse* New() const { return New(NULL); }

  GetServiceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetServiceResponse& from);
  void MergeFrom(const GetServiceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetServiceResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.ServiceDescriptorProto service = 1;
  bool has_service() const;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::google::protobuf::ServiceDescriptorProto& service() const;
  ::google::protobuf::ServiceDescriptorProto* mutable_service();
  ::google::protobuf::ServiceDescriptorProto* release_service();
  void set_allocated_service(
      ::google::protobuf::ServiceDescriptorProto* service);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetServiceResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::ServiceDescriptorProto* service_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetServiceResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetMessageTypeResponse : public ::google::protobuf::Message {
 public:
  GetMessageTypeResponse();
  virtual ~GetMessageTypeResponse();

  GetMessageTypeResponse(const GetMessageTypeResponse& from);

  inline GetMessageTypeResponse& operator=(const GetMessageTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMessageTypeResponse& default_instance();

  void Swap(GetMessageTypeResponse* other);

  // implements Message ----------------------------------------------

  inline GetMessageTypeResponse* New() const { return New(NULL); }

  GetMessageTypeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMessageTypeResponse& from);
  void MergeFrom(const GetMessageTypeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetMessageTypeResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.DescriptorProto message_type = 1;
  bool has_message_type() const;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  const ::google::protobuf::DescriptorProto& message_type() const;
  ::google::protobuf::DescriptorProto* mutable_message_type();
  ::google::protobuf::DescriptorProto* release_message_type();
  void set_allocated_message_type(
      ::google::protobuf::DescriptorProto* message_type);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetMessageTypeResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::DescriptorProto* message_type_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetMessageTypeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetEnumTypeResponse : public ::google::protobuf::Message {
 public:
  GetEnumTypeResponse();
  virtual ~GetEnumTypeResponse();

  GetEnumTypeResponse(const GetEnumTypeResponse& from);

  inline GetEnumTypeResponse& operator=(const GetEnumTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnumTypeResponse& default_instance();

  void Swap(GetEnumTypeResponse* other);

  // implements Message ----------------------------------------------

  inline GetEnumTypeResponse* New() const { return New(NULL); }

  GetEnumTypeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnumTypeResponse& from);
  void MergeFrom(const GetEnumTypeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEnumTypeResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.EnumDescriptorProto enum_type = 1;
  bool has_enum_type() const;
  void clear_enum_type();
  static const int kEnumTypeFieldNumber = 1;
  const ::google::protobuf::EnumDescriptorProto& enum_type() const;
  ::google::protobuf::EnumDescriptorProto* mutable_enum_type();
  ::google::protobuf::EnumDescriptorProto* release_enum_type();
  void set_allocated_enum_type(
      ::google::protobuf::EnumDescriptorProto* enum_type);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetEnumTypeResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::EnumDescriptorProto* enum_type_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetEnumTypeResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetEnumValueResponse : public ::google::protobuf::Message {
 public:
  GetEnumValueResponse();
  virtual ~GetEnumValueResponse();

  GetEnumValueResponse(const GetEnumValueResponse& from);

  inline GetEnumValueResponse& operator=(const GetEnumValueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnumValueResponse& default_instance();

  void Swap(GetEnumValueResponse* other);

  // implements Message ----------------------------------------------

  inline GetEnumValueResponse* New() const { return New(NULL); }

  GetEnumValueResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetEnumValueResponse& from);
  void MergeFrom(const GetEnumValueResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetEnumValueResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
  bool has_enum_value() const;
  void clear_enum_value();
  static const int kEnumValueFieldNumber = 1;
  const ::google::protobuf::EnumValueDescriptorProto& enum_value() const;
  ::google::protobuf::EnumValueDescriptorProto* mutable_enum_value();
  ::google::protobuf::EnumValueDescriptorProto* release_enum_value();
  void set_allocated_enum_value(
      ::google::protobuf::EnumValueDescriptorProto* enum_value);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetEnumValueResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::EnumValueDescriptorProto* enum_value_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetEnumValueResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetExtensionResponse : public ::google::protobuf::Message {
 public:
  GetExtensionResponse();
  virtual ~GetExtensionResponse();

  GetExtensionResponse(const GetExtensionResponse& from);

  inline GetExtensionResponse& operator=(const GetExtensionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetExtensionResponse& default_instance();

  void Swap(GetExtensionResponse* other);

  // implements Message ----------------------------------------------

  inline GetExtensionResponse* New() const { return New(NULL); }

  GetExtensionResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetExtensionResponse& from);
  void MergeFrom(const GetExtensionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetExtensionResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .google.protobuf.FieldDescriptorProto extension = 1;
  bool has_extension() const;
  void clear_extension();
  static const int kExtensionFieldNumber = 1;
  const ::google::protobuf::FieldDescriptorProto& extension() const;
  ::google::protobuf::FieldDescriptorProto* mutable_extension();
  ::google::protobuf::FieldDescriptorProto* release_extension();
  void set_allocated_extension(
      ::google::protobuf::FieldDescriptorProto* extension);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1.GetExtensionResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::FieldDescriptorProto* extension_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static GetExtensionResponse* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ListServiceRequest

// -------------------------------------------------------------------

// GetDescriptorRequest

// optional string name = 1;
inline void GetDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetDescriptorRequest.name)
  return name_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDescriptorRequest::set_name(const ::std::string& value) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1.GetDescriptorRequest.name)
}
inline void GetDescriptorRequest::set_name(const char* value) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1.GetDescriptorRequest.name)
}
inline void GetDescriptorRequest::set_name(const char* value, size_t size) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1.GetDescriptorRequest.name)
}
inline ::std::string* GetDescriptorRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetDescriptorRequest.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetDescriptorRequest::release_name() {
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
  } else {
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetDescriptorRequest.name)
}

// -------------------------------------------------------------------

// ListServiceResponse

// repeated string services = 1;
inline int ListServiceResponse::services_size() const {
  return services_.size();
}
inline void ListServiceResponse::clear_services() { services_.Clear(); }
inline const ::std::string& ListServiceResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.ListServiceResponse.services)
  return services_.Get(index);
}
inline ::std::string* ListServiceResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.ListServiceResponse.services)
  return services_.Mutable(index);
}
inline void ListServiceResponse::set_services(int index,
                                              const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.reflection.v1.ListServiceResponse.services)
  services_.Mutable(index)->assign(value);
}
inline void ListServiceResponse::set_services(int index, const char* value) {
  services_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1.ListServiceResponse.services)
}
inline void ListServiceResponse::set_services(int index, const char* value,
                                              size_t size) {
  services_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1.ListServiceResponse.services)
}
inline ::std::string* ListServiceResponse::add_services() {
  return services_.Add();
}
inline void ListServiceResponse::add_services(const ::std::string& value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.reflection.v1.ListServiceResponse.services)
}
inline void ListServiceResponse::add_services(const char* value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.reflection.v1.ListServiceResponse.services)
}
inline void ListServiceResponse::add_services(const char* value, size_t size) {
  services_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.reflection.v1.ListServiceResponse.services)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListServiceResponse::services() const {
  // @@protoc_insertion_point(field_list:grpc.reflection.v1.ListServiceResponse.services)
  return services_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListServiceResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:grpc.reflection.v1.ListServiceResponse.services)
  return &services_;
}

// -------------------------------------------------------------------

// GetMethodResponse

// optional .google.protobuf.MethodDescriptorProto method = 1;
inline bool GetMethodResponse::has_method() const {
  return !_is_default_instance_ && method_ != NULL;
}
inline void GetMethodResponse::clear_method() {
  if (GetArenaNoVirtual() == NULL && method_ != NULL) delete method_;
  method_ = NULL;
}
inline const ::google::protobuf::MethodDescriptorProto&
GetMethodResponse::method() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetMethodResponse.method)
  return method_ != NULL ? *method_ : *default_instance_->method_;
}
inline ::google::protobuf::MethodDescriptorProto*
GetMethodResponse::mutable_method() {
  if (method_ == NULL) {
    method_ = new ::google::protobuf::MethodDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetMethodResponse.method)
  return method_;
}
inline ::google::protobuf::MethodDescriptorProto*
GetMethodResponse::release_method() {
  ::google::protobuf::MethodDescriptorProto* temp = method_;
  method_ = NULL;
  return temp;
}
inline void GetMethodResponse::set_allocated_method(
    ::google::protobuf::MethodDescriptorProto* method) {
  delete method_;
  method_ = method;
  if (method) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetMethodResponse.method)
}

// -------------------------------------------------------------------

// GetServiceResponse

// optional .google.protobuf.ServiceDescriptorProto service = 1;
inline bool GetServiceResponse::has_service() const {
  return !_is_default_instance_ && service_ != NULL;
}
inline void GetServiceResponse::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}
inline const ::google::protobuf::ServiceDescriptorProto&
GetServiceResponse::service() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetServiceResponse.service)
  return service_ != NULL ? *service_ : *default_instance_->service_;
}
inline ::google::protobuf::ServiceDescriptorProto*
GetServiceResponse::mutable_service() {
  if (service_ == NULL) {
    service_ = new ::google::protobuf::ServiceDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetServiceResponse.service)
  return service_;
}
inline ::google::protobuf::ServiceDescriptorProto*
GetServiceResponse::release_service() {
  ::google::protobuf::ServiceDescriptorProto* temp = service_;
  service_ = NULL;
  return temp;
}
inline void GetServiceResponse::set_allocated_service(
    ::google::protobuf::ServiceDescriptorProto* service) {
  delete service_;
  service_ = service;
  if (service) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetServiceResponse.service)
}

// -------------------------------------------------------------------

// GetMessageTypeResponse

// optional .google.protobuf.DescriptorProto message_type = 1;
inline bool GetMessageTypeResponse::has_message_type() const {
  return !_is_default_instance_ && message_type_ != NULL;
}
inline void GetMessageTypeResponse::clear_message_type() {
  if (GetArenaNoVirtual() == NULL && message_type_ != NULL)
    delete message_type_;
  message_type_ = NULL;
}
inline const ::google::protobuf::DescriptorProto&
GetMessageTypeResponse::message_type() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetMessageTypeResponse.message_type)
  return message_type_ != NULL ? *message_type_
                               : *default_instance_->message_type_;
}
inline ::google::protobuf::DescriptorProto*
GetMessageTypeResponse::mutable_message_type() {
  if (message_type_ == NULL) {
    message_type_ = new ::google::protobuf::DescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetMessageTypeResponse.message_type)
  return message_type_;
}
inline ::google::protobuf::DescriptorProto*
GetMessageTypeResponse::release_message_type() {
  ::google::protobuf::DescriptorProto* temp = message_type_;
  message_type_ = NULL;
  return temp;
}
inline void GetMessageTypeResponse::set_allocated_message_type(
    ::google::protobuf::DescriptorProto* message_type) {
  delete message_type_;
  message_type_ = message_type;
  if (message_type) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetMessageTypeResponse.message_type)
}

// -------------------------------------------------------------------

// GetEnumTypeResponse

// optional .google.protobuf.EnumDescriptorProto enum_type = 1;
inline bool GetEnumTypeResponse::has_enum_type() const {
  return !_is_default_instance_ && enum_type_ != NULL;
}
inline void GetEnumTypeResponse::clear_enum_type() {
  if (GetArenaNoVirtual() == NULL && enum_type_ != NULL) delete enum_type_;
  enum_type_ = NULL;
}
inline const ::google::protobuf::EnumDescriptorProto&
GetEnumTypeResponse::enum_type() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
  return enum_type_ != NULL ? *enum_type_ : *default_instance_->enum_type_;
}
inline ::google::protobuf::EnumDescriptorProto*
GetEnumTypeResponse::mutable_enum_type() {
  if (enum_type_ == NULL) {
    enum_type_ = new ::google::protobuf::EnumDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
  return enum_type_;
}
inline ::google::protobuf::EnumDescriptorProto*
GetEnumTypeResponse::release_enum_type() {
  ::google::protobuf::EnumDescriptorProto* temp = enum_type_;
  enum_type_ = NULL;
  return temp;
}
inline void GetEnumTypeResponse::set_allocated_enum_type(
    ::google::protobuf::EnumDescriptorProto* enum_type) {
  delete enum_type_;
  enum_type_ = enum_type;
  if (enum_type) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
}

// -------------------------------------------------------------------

// GetEnumValueResponse

// optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
inline bool GetEnumValueResponse::has_enum_value() const {
  return !_is_default_instance_ && enum_value_ != NULL;
}
inline void GetEnumValueResponse::clear_enum_value() {
  if (GetArenaNoVirtual() == NULL && enum_value_ != NULL) delete enum_value_;
  enum_value_ = NULL;
}
inline const ::google::protobuf::EnumValueDescriptorProto&
GetEnumValueResponse::enum_value() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetEnumValueResponse.enum_value)
  return enum_value_ != NULL ? *enum_value_ : *default_instance_->enum_value_;
}
inline ::google::protobuf::EnumValueDescriptorProto*
GetEnumValueResponse::mutable_enum_value() {
  if (enum_value_ == NULL) {
    enum_value_ = new ::google::protobuf::EnumValueDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetEnumValueResponse.enum_value)
  return enum_value_;
}
inline ::google::protobuf::EnumValueDescriptorProto*
GetEnumValueResponse::release_enum_value() {
  ::google::protobuf::EnumValueDescriptorProto* temp = enum_value_;
  enum_value_ = NULL;
  return temp;
}
inline void GetEnumValueResponse::set_allocated_enum_value(
    ::google::protobuf::EnumValueDescriptorProto* enum_value) {
  delete enum_value_;
  enum_value_ = enum_value;
  if (enum_value) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetEnumValueResponse.enum_value)
}

// -------------------------------------------------------------------

// GetExtensionResponse

// optional .google.protobuf.FieldDescriptorProto extension = 1;
inline bool GetExtensionResponse::has_extension() const {
  return !_is_default_instance_ && extension_ != NULL;
}
inline void GetExtensionResponse::clear_extension() {
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) delete extension_;
  extension_ = NULL;
}
inline const ::google::protobuf::FieldDescriptorProto&
GetExtensionResponse::extension() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetExtensionResponse.extension)
  return extension_ != NULL ? *extension_ : *default_instance_->extension_;
}
inline ::google::protobuf::FieldDescriptorProto*
GetExtensionResponse::mutable_extension() {
  if (extension_ == NULL) {
    extension_ = new ::google::protobuf::FieldDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetExtensionResponse.extension)
  return extension_;
}
inline ::google::protobuf::FieldDescriptorProto*
GetExtensionResponse::release_extension() {
  ::google::protobuf::FieldDescriptorProto* temp = extension_;
  extension_ = NULL;
  return temp;
}
inline void GetExtensionResponse::set_allocated_extension(
    ::google::protobuf::FieldDescriptorProto* extension) {
  delete extension_;
  extension_ = extension;
  if (extension) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetExtensionResponse.extension)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace reflection
}  // namespace grpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_reflection_2eproto__INCLUDED
