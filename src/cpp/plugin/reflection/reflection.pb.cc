// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reflection.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "reflection.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace grpc {
namespace reflection {
namespace v1 {

namespace {

const ::google::protobuf::Descriptor* ListServiceRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    ListServiceRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetDescriptorRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetDescriptorRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ListServiceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    ListServiceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMethodResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetMethodResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetServiceResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetServiceResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetMessageTypeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetMessageTypeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetEnumTypeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetEnumTypeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetEnumValueResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetEnumValueResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetExtensionResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
    GetExtensionResponse_reflection_ = NULL;

}  // namespace

void protobuf_AssignDesc_reflection_2eproto() {
  protobuf_AddDesc_reflection_2eproto();
  const ::google::protobuf::FileDescriptor* file =
      ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
          "reflection.proto");
  GOOGLE_CHECK(file != NULL);
  ListServiceRequest_descriptor_ = file->message_type(0);
  static const int ListServiceRequest_offsets_[1] = {};
  ListServiceRequest_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          ListServiceRequest_descriptor_, ListServiceRequest::default_instance_,
          ListServiceRequest_offsets_, -1, -1, -1, sizeof(ListServiceRequest),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListServiceRequest,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              ListServiceRequest, _is_default_instance_));
  GetDescriptorRequest_descriptor_ = file->message_type(1);
  static const int GetDescriptorRequest_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptorRequest,
                                                     name_),
  };
  GetDescriptorRequest_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetDescriptorRequest_descriptor_,
          GetDescriptorRequest::default_instance_,
          GetDescriptorRequest_offsets_, -1, -1, -1,
          sizeof(GetDescriptorRequest),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetDescriptorRequest,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetDescriptorRequest, _is_default_instance_));
  ListServiceResponse_descriptor_ = file->message_type(2);
  static const int ListServiceResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListServiceResponse,
                                                     services_),
  };
  ListServiceResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          ListServiceResponse_descriptor_,
          ListServiceResponse::default_instance_, ListServiceResponse_offsets_,
          -1, -1, -1, sizeof(ListServiceResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ListServiceResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              ListServiceResponse, _is_default_instance_));
  GetMethodResponse_descriptor_ = file->message_type(3);
  static const int GetMethodResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMethodResponse,
                                                     method_),
  };
  GetMethodResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetMethodResponse_descriptor_, GetMethodResponse::default_instance_,
          GetMethodResponse_offsets_, -1, -1, -1, sizeof(GetMethodResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMethodResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetMethodResponse, _is_default_instance_));
  GetServiceResponse_descriptor_ = file->message_type(4);
  static const int GetServiceResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServiceResponse,
                                                     service_),
  };
  GetServiceResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetServiceResponse_descriptor_, GetServiceResponse::default_instance_,
          GetServiceResponse_offsets_, -1, -1, -1, sizeof(GetServiceResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetServiceResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetServiceResponse, _is_default_instance_));
  GetMessageTypeResponse_descriptor_ = file->message_type(5);
  static const int GetMessageTypeResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageTypeResponse,
                                                     message_type_),
  };
  GetMessageTypeResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetMessageTypeResponse_descriptor_,
          GetMessageTypeResponse::default_instance_,
          GetMessageTypeResponse_offsets_, -1, -1, -1,
          sizeof(GetMessageTypeResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetMessageTypeResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetMessageTypeResponse, _is_default_instance_));
  GetEnumTypeResponse_descriptor_ = file->message_type(6);
  static const int GetEnumTypeResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnumTypeResponse,
                                                     enum_type_),
  };
  GetEnumTypeResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetEnumTypeResponse_descriptor_,
          GetEnumTypeResponse::default_instance_, GetEnumTypeResponse_offsets_,
          -1, -1, -1, sizeof(GetEnumTypeResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnumTypeResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetEnumTypeResponse, _is_default_instance_));
  GetEnumValueResponse_descriptor_ = file->message_type(7);
  static const int GetEnumValueResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnumValueResponse,
                                                     enum_value_),
  };
  GetEnumValueResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetEnumValueResponse_descriptor_,
          GetEnumValueResponse::default_instance_,
          GetEnumValueResponse_offsets_, -1, -1, -1,
          sizeof(GetEnumValueResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetEnumValueResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetEnumValueResponse, _is_default_instance_));
  GetExtensionResponse_descriptor_ = file->message_type(8);
  static const int GetExtensionResponse_offsets_[1] = {
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetExtensionResponse,
                                                     extension_),
  };
  GetExtensionResponse_reflection_ = ::google::protobuf::internal::
      GeneratedMessageReflection::NewGeneratedMessageReflection(
          GetExtensionResponse_descriptor_,
          GetExtensionResponse::default_instance_,
          GetExtensionResponse_offsets_, -1, -1, -1,
          sizeof(GetExtensionResponse),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetExtensionResponse,
                                                         _internal_metadata_),
          GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
              GetExtensionResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                                     &protobuf_AssignDesc_reflection_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListServiceRequest_descriptor_, &ListServiceRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetDescriptorRequest_descriptor_,
      &GetDescriptorRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ListServiceResponse_descriptor_,
      &ListServiceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMethodResponse_descriptor_, &GetMethodResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetServiceResponse_descriptor_, &GetServiceResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetMessageTypeResponse_descriptor_,
      &GetMessageTypeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetEnumTypeResponse_descriptor_,
      &GetEnumTypeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetEnumValueResponse_descriptor_,
      &GetEnumValueResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetExtensionResponse_descriptor_,
      &GetExtensionResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_reflection_2eproto() {
  delete ListServiceRequest::default_instance_;
  delete ListServiceRequest_reflection_;
  delete GetDescriptorRequest::default_instance_;
  delete GetDescriptorRequest_reflection_;
  delete ListServiceResponse::default_instance_;
  delete ListServiceResponse_reflection_;
  delete GetMethodResponse::default_instance_;
  delete GetMethodResponse_reflection_;
  delete GetServiceResponse::default_instance_;
  delete GetServiceResponse_reflection_;
  delete GetMessageTypeResponse::default_instance_;
  delete GetMessageTypeResponse_reflection_;
  delete GetEnumTypeResponse::default_instance_;
  delete GetEnumTypeResponse_reflection_;
  delete GetEnumValueResponse::default_instance_;
  delete GetEnumValueResponse_reflection_;
  delete GetExtensionResponse::default_instance_;
  delete GetExtensionResponse_reflection_;
}

void protobuf_AddDesc_reflection_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      "\n\020reflection.proto\022\022grpc.reflection.v1\032 "
      "google/protobuf/descriptor.proto\"\024\n\022List"
      "ServiceRequest\"$\n\024GetDescriptorRequest\022\014"
      "\n\004name\030\001 \001(\t\"\'\n\023ListServiceResponse\022\020\n\010s"
      "ervices\030\001 \003(\t\"K\n\021GetMethodResponse\0226\n\006me"
      "thod\030\001 \001(\0132&.google.protobuf.MethodDescr"
      "iptorProto\"N\n\022GetServiceResponse\0228\n\007serv"
      "ice\030\001 \001(\0132\'.google.protobuf.ServiceDescr"
      "iptorProto\"P\n\026GetMessageTypeResponse\0226\n\014"
      "message_type\030\001 \001(\0132 .google.protobuf.Des"
      "criptorProto\"N\n\023GetEnumTypeResponse\0227\n\te"
      "num_type\030\001 \001(\0132$.google.protobuf.EnumDes"
      "criptorProto\"U\n\024GetEnumValueResponse\022=\n\n"
      "enum_value\030\001 \001(\0132).google.protobuf.EnumV"
      "alueDescriptorProto\"P\n\024GetExtensionRespo"
      "nse\0228\n\textension\030\001 \001(\0132%.google.protobuf"
      ".FieldDescriptorProto2\320\005\n\020ServerReflecti"
      "on\022`\n\013ListService\022&.grpc.reflection.v1.L"
      "istServiceRequest\032\'.grpc.reflection.v1.L"
      "istServiceResponse\"\000\022`\n\nGetService\022(.grp"
      "c.reflection.v1.GetDescriptorRequest\032&.g"
      "rpc.reflection.v1.GetServiceResponse\"\000\022^"
      "\n\tGetMethod\022(.grpc.reflection.v1.GetDesc"
      "riptorRequest\032%.grpc.reflection.v1.GetMe"
      "thodResponse\"\000\022h\n\016GetMessageType\022(.grpc."
      "reflection.v1.GetDescriptorRequest\032*.grp"
      "c.reflection.v1.GetMessageTypeResponse\"\000"
      "\022b\n\013GetEnumType\022(.grpc.reflection.v1.Get"
      "DescriptorRequest\032\'.grpc.reflection.v1.G"
      "etEnumTypeResponse\"\000\022d\n\014GetEnumValue\022(.g"
      "rpc.reflection.v1.GetDescriptorRequest\032("
      ".grpc.reflection.v1.GetEnumValueResponse"
      "\"\000\022d\n\014GetExtension\022(.grpc.reflection.v1."
      "GetDescriptorRequest\032(.grpc.reflection.v"
      "1.GetExtensionResponse\"\000b\006proto3",
      1392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "reflection.proto", &protobuf_RegisterTypes);
  ListServiceRequest::default_instance_ = new ListServiceRequest();
  GetDescriptorRequest::default_instance_ = new GetDescriptorRequest();
  ListServiceResponse::default_instance_ = new ListServiceResponse();
  GetMethodResponse::default_instance_ = new GetMethodResponse();
  GetServiceResponse::default_instance_ = new GetServiceResponse();
  GetMessageTypeResponse::default_instance_ = new GetMessageTypeResponse();
  GetEnumTypeResponse::default_instance_ = new GetEnumTypeResponse();
  GetEnumValueResponse::default_instance_ = new GetEnumValueResponse();
  GetExtensionResponse::default_instance_ = new GetExtensionResponse();
  ListServiceRequest::default_instance_->InitAsDefaultInstance();
  GetDescriptorRequest::default_instance_->InitAsDefaultInstance();
  ListServiceResponse::default_instance_->InitAsDefaultInstance();
  GetMethodResponse::default_instance_->InitAsDefaultInstance();
  GetServiceResponse::default_instance_->InitAsDefaultInstance();
  GetMessageTypeResponse::default_instance_->InitAsDefaultInstance();
  GetEnumTypeResponse::default_instance_->InitAsDefaultInstance();
  GetEnumValueResponse::default_instance_->InitAsDefaultInstance();
  GetExtensionResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(
      &protobuf_ShutdownFile_reflection_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_reflection_2eproto {
  StaticDescriptorInitializer_reflection_2eproto() {
    protobuf_AddDesc_reflection_2eproto();
  }
} static_descriptor_initializer_reflection_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceRequest::ListServiceRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.ListServiceRequest)
}

void ListServiceRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListServiceRequest::ListServiceRequest(const ListServiceRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.ListServiceRequest)
}

void ListServiceRequest::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
}

ListServiceRequest::~ListServiceRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.ListServiceRequest)
  SharedDtor();
}

void ListServiceRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListServiceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListServiceRequest_descriptor_;
}

const ListServiceRequest& ListServiceRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

ListServiceRequest* ListServiceRequest::default_instance_ = NULL;

ListServiceRequest* ListServiceRequest::New(
    ::google::protobuf::Arena* arena) const {
  ListServiceRequest* n = new ListServiceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceRequest::Clear() {}

bool ListServiceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.ListServiceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.ListServiceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.ListServiceRequest)
  return false;
#undef DO_
}

void ListServiceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.ListServiceRequest)
  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.ListServiceRequest)
}

::google::protobuf::uint8* ListServiceRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.ListServiceRequest)
  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.ListServiceRequest)
  return target;
}

int ListServiceRequest::ByteSize() const {
  int total_size = 0;

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListServiceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ListServiceRequest>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListServiceRequest::MergeFrom(const ListServiceRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
}

void ListServiceRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceRequest::CopyFrom(const ListServiceRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceRequest::IsInitialized() const { return true; }

void ListServiceRequest::Swap(ListServiceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceRequest::InternalSwap(ListServiceRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListServiceRequest_descriptor_;
  metadata.reflection = ListServiceRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListServiceRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDescriptorRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDescriptorRequest::GetDescriptorRequest()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetDescriptorRequest)
}

void GetDescriptorRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

GetDescriptorRequest::GetDescriptorRequest(const GetDescriptorRequest& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetDescriptorRequest)
}

void GetDescriptorRequest::SharedCtor() {
  _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDescriptorRequest::~GetDescriptorRequest() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetDescriptorRequest)
  SharedDtor();
}

void GetDescriptorRequest::SharedDtor() {
  name_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void GetDescriptorRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDescriptorRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetDescriptorRequest_descriptor_;
}

const GetDescriptorRequest& GetDescriptorRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetDescriptorRequest* GetDescriptorRequest::default_instance_ = NULL;

GetDescriptorRequest* GetDescriptorRequest::New(
    ::google::protobuf::Arena* arena) const {
  GetDescriptorRequest* n = new GetDescriptorRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDescriptorRequest::Clear() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetDescriptorRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetDescriptorRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
              this->name().data(), this->name().length(),
              ::google::protobuf::internal::WireFormatLite::PARSE,
              "grpc.reflection.v1.GetDescriptorRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetDescriptorRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetDescriptorRequest)
  return false;
#undef DO_
}

void GetDescriptorRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetDescriptorRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->name().data(), this->name().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "grpc.reflection.v1.GetDescriptorRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetDescriptorRequest)
}

::google::protobuf::uint8*
GetDescriptorRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetDescriptorRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->name().data(), this->name().length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "grpc.reflection.v1.GetDescriptorRequest.name");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetDescriptorRequest)
  return target;
}

int GetDescriptorRequest::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                          this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDescriptorRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetDescriptorRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetDescriptorRequest>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetDescriptorRequest::MergeFrom(const GetDescriptorRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {
    name_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.name_);
  }
}

void GetDescriptorRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDescriptorRequest::CopyFrom(const GetDescriptorRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDescriptorRequest::IsInitialized() const { return true; }

void GetDescriptorRequest::Swap(GetDescriptorRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDescriptorRequest::InternalSwap(GetDescriptorRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDescriptorRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetDescriptorRequest_descriptor_;
  metadata.reflection = GetDescriptorRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetDescriptorRequest

// optional string name = 1;
void GetDescriptorRequest::clear_name() {
  name_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetDescriptorRequest::name() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetDescriptorRequest.name)
  return name_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetDescriptorRequest::set_name(const ::std::string& value) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1.GetDescriptorRequest.name)
}
void GetDescriptorRequest::set_name(const char* value) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1.GetDescriptorRequest.name)
}
void GetDescriptorRequest::set_name(const char* value, size_t size) {
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1.GetDescriptorRequest.name)
}
::std::string* GetDescriptorRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetDescriptorRequest.name)
  return name_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetDescriptorRequest::release_name() {
  return name_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetDescriptorRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
  } else {
  }
  name_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetDescriptorRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListServiceResponse::kServicesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListServiceResponse::ListServiceResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.ListServiceResponse)
}

void ListServiceResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ListServiceResponse::ListServiceResponse(const ListServiceResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.ListServiceResponse)
}

void ListServiceResponse::SharedCtor() {
  _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

ListServiceResponse::~ListServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.ListServiceResponse)
  SharedDtor();
}

void ListServiceResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ListServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ListServiceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ListServiceResponse_descriptor_;
}

const ListServiceResponse& ListServiceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

ListServiceResponse* ListServiceResponse::default_instance_ = NULL;

ListServiceResponse* ListServiceResponse::New(
    ::google::protobuf::Arena* arena) const {
  ListServiceResponse* n = new ListServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ListServiceResponse::Clear() { services_.Clear(); }

bool ListServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.ListServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string services = 1;
      case 1: {
        if (tag == 10) {
        parse_services:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
              input, this->add_services()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
              this->services(this->services_size() - 1).data(),
              this->services(this->services_size() - 1).length(),
              ::google::protobuf::internal::WireFormatLite::PARSE,
              "grpc.reflection.v1.ListServiceResponse.services"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_services;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.ListServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.ListServiceResponse)
  return false;
#undef DO_
}

void ListServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.ListServiceResponse)
  // repeated string services = 1;
  for (int i = 0; i < this->services_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->services(i).data(), this->services(i).length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "grpc.reflection.v1.ListServiceResponse.services");
    ::google::protobuf::internal::WireFormatLite::WriteString(
        1, this->services(i), output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.ListServiceResponse)
}

::google::protobuf::uint8* ListServiceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.ListServiceResponse)
  // repeated string services = 1;
  for (int i = 0; i < this->services_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        this->services(i).data(), this->services(i).length(),
        ::google::protobuf::internal::WireFormatLite::SERIALIZE,
        "grpc.reflection.v1.ListServiceResponse.services");
    target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->services(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.ListServiceResponse)
  return target;
}

int ListServiceResponse::ByteSize() const {
  int total_size = 0;

  // repeated string services = 1;
  total_size += 1 * this->services_size();
  for (int i = 0; i < this->services_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        this->services(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ListServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ListServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const ListServiceResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ListServiceResponse::MergeFrom(const ListServiceResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  services_.MergeFrom(from.services_);
}

void ListServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListServiceResponse::CopyFrom(const ListServiceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListServiceResponse::IsInitialized() const { return true; }

void ListServiceResponse::Swap(ListServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListServiceResponse::InternalSwap(ListServiceResponse* other) {
  services_.UnsafeArenaSwap(&other->services_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ListServiceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ListServiceResponse_descriptor_;
  metadata.reflection = ListServiceResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ListServiceResponse

// repeated string services = 1;
int ListServiceResponse::services_size() const { return services_.size(); }
void ListServiceResponse::clear_services() { services_.Clear(); }
const ::std::string& ListServiceResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.ListServiceResponse.services)
  return services_.Get(index);
}
::std::string* ListServiceResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.ListServiceResponse.services)
  return services_.Mutable(index);
}
void ListServiceResponse::set_services(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.reflection.v1.ListServiceResponse.services)
  services_.Mutable(index)->assign(value);
}
void ListServiceResponse::set_services(int index, const char* value) {
  services_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1.ListServiceResponse.services)
}
void ListServiceResponse::set_services(int index, const char* value,
                                       size_t size) {
  services_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1.ListServiceResponse.services)
}
::std::string* ListServiceResponse::add_services() { return services_.Add(); }
void ListServiceResponse::add_services(const ::std::string& value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.reflection.v1.ListServiceResponse.services)
}
void ListServiceResponse::add_services(const char* value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.reflection.v1.ListServiceResponse.services)
}
void ListServiceResponse::add_services(const char* value, size_t size) {
  services_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.reflection.v1.ListServiceResponse.services)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListServiceResponse::services() const {
  // @@protoc_insertion_point(field_list:grpc.reflection.v1.ListServiceResponse.services)
  return services_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ListServiceResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:grpc.reflection.v1.ListServiceResponse.services)
  return &services_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMethodResponse::kMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMethodResponse::GetMethodResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetMethodResponse)
}

void GetMethodResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  method_ = const_cast< ::google::protobuf::MethodDescriptorProto*>(
      &::google::protobuf::MethodDescriptorProto::default_instance());
}

GetMethodResponse::GetMethodResponse(const GetMethodResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetMethodResponse)
}

void GetMethodResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  method_ = NULL;
}

GetMethodResponse::~GetMethodResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetMethodResponse)
  SharedDtor();
}

void GetMethodResponse::SharedDtor() {
  if (this != default_instance_) {
    delete method_;
  }
}

void GetMethodResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMethodResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMethodResponse_descriptor_;
}

const GetMethodResponse& GetMethodResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetMethodResponse* GetMethodResponse::default_instance_ = NULL;

GetMethodResponse* GetMethodResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetMethodResponse* n = new GetMethodResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMethodResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && method_ != NULL) delete method_;
  method_ = NULL;
}

bool GetMethodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetMethodResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.MethodDescriptorProto method = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_method()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetMethodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetMethodResponse)
  return false;
#undef DO_
}

void GetMethodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetMethodResponse)
  // optional .google.protobuf.MethodDescriptorProto method = 1;
  if (this->has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->method_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetMethodResponse)
}

::google::protobuf::uint8* GetMethodResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetMethodResponse)
  // optional .google.protobuf.MethodDescriptorProto method = 1;
  if (this->has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->method_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetMethodResponse)
  return target;
}

int GetMethodResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.MethodDescriptorProto method = 1;
  if (this->has_method()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->method_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMethodResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMethodResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetMethodResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMethodResponse::MergeFrom(const GetMethodResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_method()) {
    mutable_method()->::google::protobuf::MethodDescriptorProto::MergeFrom(
        from.method());
  }
}

void GetMethodResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMethodResponse::CopyFrom(const GetMethodResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMethodResponse::IsInitialized() const {
  if (has_method()) {
    if (!this->method_->IsInitialized()) return false;
  }
  return true;
}

void GetMethodResponse::Swap(GetMethodResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMethodResponse::InternalSwap(GetMethodResponse* other) {
  std::swap(method_, other->method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMethodResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMethodResponse_descriptor_;
  metadata.reflection = GetMethodResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMethodResponse

// optional .google.protobuf.MethodDescriptorProto method = 1;
bool GetMethodResponse::has_method() const {
  return !_is_default_instance_ && method_ != NULL;
}
void GetMethodResponse::clear_method() {
  if (GetArenaNoVirtual() == NULL && method_ != NULL) delete method_;
  method_ = NULL;
}
const ::google::protobuf::MethodDescriptorProto& GetMethodResponse::method()
    const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetMethodResponse.method)
  return method_ != NULL ? *method_ : *default_instance_->method_;
}
::google::protobuf::MethodDescriptorProto* GetMethodResponse::mutable_method() {
  if (method_ == NULL) {
    method_ = new ::google::protobuf::MethodDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetMethodResponse.method)
  return method_;
}
::google::protobuf::MethodDescriptorProto* GetMethodResponse::release_method() {
  ::google::protobuf::MethodDescriptorProto* temp = method_;
  method_ = NULL;
  return temp;
}
void GetMethodResponse::set_allocated_method(
    ::google::protobuf::MethodDescriptorProto* method) {
  delete method_;
  method_ = method;
  if (method) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetMethodResponse.method)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetServiceResponse::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetServiceResponse::GetServiceResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetServiceResponse)
}

void GetServiceResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  service_ = const_cast< ::google::protobuf::ServiceDescriptorProto*>(
      &::google::protobuf::ServiceDescriptorProto::default_instance());
}

GetServiceResponse::GetServiceResponse(const GetServiceResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetServiceResponse)
}

void GetServiceResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  service_ = NULL;
}

GetServiceResponse::~GetServiceResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetServiceResponse)
  SharedDtor();
}

void GetServiceResponse::SharedDtor() {
  if (this != default_instance_) {
    delete service_;
  }
}

void GetServiceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetServiceResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetServiceResponse_descriptor_;
}

const GetServiceResponse& GetServiceResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetServiceResponse* GetServiceResponse::default_instance_ = NULL;

GetServiceResponse* GetServiceResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetServiceResponse* n = new GetServiceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetServiceResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}

bool GetServiceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetServiceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.ServiceDescriptorProto service = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetServiceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetServiceResponse)
  return false;
#undef DO_
}

void GetServiceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetServiceResponse)
  // optional .google.protobuf.ServiceDescriptorProto service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->service_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetServiceResponse)
}

::google::protobuf::uint8* GetServiceResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetServiceResponse)
  // optional .google.protobuf.ServiceDescriptorProto service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->service_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetServiceResponse)
  return target;
}

int GetServiceResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.ServiceDescriptorProto service = 1;
  if (this->has_service()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->service_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetServiceResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetServiceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetServiceResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetServiceResponse::MergeFrom(const GetServiceResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_service()) {
    mutable_service()->::google::protobuf::ServiceDescriptorProto::MergeFrom(
        from.service());
  }
}

void GetServiceResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetServiceResponse::CopyFrom(const GetServiceResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetServiceResponse::IsInitialized() const {
  if (has_service()) {
    if (!this->service_->IsInitialized()) return false;
  }
  return true;
}

void GetServiceResponse::Swap(GetServiceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetServiceResponse::InternalSwap(GetServiceResponse* other) {
  std::swap(service_, other->service_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetServiceResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetServiceResponse_descriptor_;
  metadata.reflection = GetServiceResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetServiceResponse

// optional .google.protobuf.ServiceDescriptorProto service = 1;
bool GetServiceResponse::has_service() const {
  return !_is_default_instance_ && service_ != NULL;
}
void GetServiceResponse::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) delete service_;
  service_ = NULL;
}
const ::google::protobuf::ServiceDescriptorProto& GetServiceResponse::service()
    const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetServiceResponse.service)
  return service_ != NULL ? *service_ : *default_instance_->service_;
}
::google::protobuf::ServiceDescriptorProto*
GetServiceResponse::mutable_service() {
  if (service_ == NULL) {
    service_ = new ::google::protobuf::ServiceDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetServiceResponse.service)
  return service_;
}
::google::protobuf::ServiceDescriptorProto*
GetServiceResponse::release_service() {
  ::google::protobuf::ServiceDescriptorProto* temp = service_;
  service_ = NULL;
  return temp;
}
void GetServiceResponse::set_allocated_service(
    ::google::protobuf::ServiceDescriptorProto* service) {
  delete service_;
  service_ = service;
  if (service) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetServiceResponse.service)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetMessageTypeResponse::kMessageTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetMessageTypeResponse::GetMessageTypeResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetMessageTypeResponse)
}

void GetMessageTypeResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  message_type_ = const_cast< ::google::protobuf::DescriptorProto*>(
      &::google::protobuf::DescriptorProto::default_instance());
}

GetMessageTypeResponse::GetMessageTypeResponse(
    const GetMessageTypeResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetMessageTypeResponse)
}

void GetMessageTypeResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  message_type_ = NULL;
}

GetMessageTypeResponse::~GetMessageTypeResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetMessageTypeResponse)
  SharedDtor();
}

void GetMessageTypeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete message_type_;
  }
}

void GetMessageTypeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetMessageTypeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetMessageTypeResponse_descriptor_;
}

const GetMessageTypeResponse& GetMessageTypeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetMessageTypeResponse* GetMessageTypeResponse::default_instance_ = NULL;

GetMessageTypeResponse* GetMessageTypeResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetMessageTypeResponse* n = new GetMessageTypeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetMessageTypeResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && message_type_ != NULL)
    delete message_type_;
  message_type_ = NULL;
}

bool GetMessageTypeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetMessageTypeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.DescriptorProto message_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_message_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetMessageTypeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetMessageTypeResponse)
  return false;
#undef DO_
}

void GetMessageTypeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetMessageTypeResponse)
  // optional .google.protobuf.DescriptorProto message_type = 1;
  if (this->has_message_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->message_type_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetMessageTypeResponse)
}

::google::protobuf::uint8*
GetMessageTypeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetMessageTypeResponse)
  // optional .google.protobuf.DescriptorProto message_type = 1;
  if (this->has_message_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->message_type_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetMessageTypeResponse)
  return target;
}

int GetMessageTypeResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.DescriptorProto message_type = 1;
  if (this->has_message_type()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->message_type_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetMessageTypeResponse::MergeFrom(
    const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetMessageTypeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetMessageTypeResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetMessageTypeResponse::MergeFrom(const GetMessageTypeResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_message_type()) {
    mutable_message_type()->::google::protobuf::DescriptorProto::MergeFrom(
        from.message_type());
  }
}

void GetMessageTypeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetMessageTypeResponse::CopyFrom(const GetMessageTypeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetMessageTypeResponse::IsInitialized() const {
  if (has_message_type()) {
    if (!this->message_type_->IsInitialized()) return false;
  }
  return true;
}

void GetMessageTypeResponse::Swap(GetMessageTypeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetMessageTypeResponse::InternalSwap(GetMessageTypeResponse* other) {
  std::swap(message_type_, other->message_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetMessageTypeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetMessageTypeResponse_descriptor_;
  metadata.reflection = GetMessageTypeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetMessageTypeResponse

// optional .google.protobuf.DescriptorProto message_type = 1;
bool GetMessageTypeResponse::has_message_type() const {
  return !_is_default_instance_ && message_type_ != NULL;
}
void GetMessageTypeResponse::clear_message_type() {
  if (GetArenaNoVirtual() == NULL && message_type_ != NULL)
    delete message_type_;
  message_type_ = NULL;
}
const ::google::protobuf::DescriptorProto&
GetMessageTypeResponse::message_type() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetMessageTypeResponse.message_type)
  return message_type_ != NULL ? *message_type_
                               : *default_instance_->message_type_;
}
::google::protobuf::DescriptorProto*
GetMessageTypeResponse::mutable_message_type() {
  if (message_type_ == NULL) {
    message_type_ = new ::google::protobuf::DescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetMessageTypeResponse.message_type)
  return message_type_;
}
::google::protobuf::DescriptorProto*
GetMessageTypeResponse::release_message_type() {
  ::google::protobuf::DescriptorProto* temp = message_type_;
  message_type_ = NULL;
  return temp;
}
void GetMessageTypeResponse::set_allocated_message_type(
    ::google::protobuf::DescriptorProto* message_type) {
  delete message_type_;
  message_type_ = message_type;
  if (message_type) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetMessageTypeResponse.message_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEnumTypeResponse::kEnumTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEnumTypeResponse::GetEnumTypeResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetEnumTypeResponse)
}

void GetEnumTypeResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  enum_type_ = const_cast< ::google::protobuf::EnumDescriptorProto*>(
      &::google::protobuf::EnumDescriptorProto::default_instance());
}

GetEnumTypeResponse::GetEnumTypeResponse(const GetEnumTypeResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetEnumTypeResponse)
}

void GetEnumTypeResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  enum_type_ = NULL;
}

GetEnumTypeResponse::~GetEnumTypeResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetEnumTypeResponse)
  SharedDtor();
}

void GetEnumTypeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete enum_type_;
  }
}

void GetEnumTypeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetEnumTypeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetEnumTypeResponse_descriptor_;
}

const GetEnumTypeResponse& GetEnumTypeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetEnumTypeResponse* GetEnumTypeResponse::default_instance_ = NULL;

GetEnumTypeResponse* GetEnumTypeResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetEnumTypeResponse* n = new GetEnumTypeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetEnumTypeResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && enum_type_ != NULL) delete enum_type_;
  enum_type_ = NULL;
}

bool GetEnumTypeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetEnumTypeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.EnumDescriptorProto enum_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_enum_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetEnumTypeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetEnumTypeResponse)
  return false;
#undef DO_
}

void GetEnumTypeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetEnumTypeResponse)
  // optional .google.protobuf.EnumDescriptorProto enum_type = 1;
  if (this->has_enum_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->enum_type_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetEnumTypeResponse)
}

::google::protobuf::uint8* GetEnumTypeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetEnumTypeResponse)
  // optional .google.protobuf.EnumDescriptorProto enum_type = 1;
  if (this->has_enum_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->enum_type_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetEnumTypeResponse)
  return target;
}

int GetEnumTypeResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.EnumDescriptorProto enum_type = 1;
  if (this->has_enum_type()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->enum_type_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetEnumTypeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetEnumTypeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetEnumTypeResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetEnumTypeResponse::MergeFrom(const GetEnumTypeResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_enum_type()) {
    mutable_enum_type()->::google::protobuf::EnumDescriptorProto::MergeFrom(
        from.enum_type());
  }
}

void GetEnumTypeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnumTypeResponse::CopyFrom(const GetEnumTypeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnumTypeResponse::IsInitialized() const {
  if (has_enum_type()) {
    if (!this->enum_type_->IsInitialized()) return false;
  }
  return true;
}

void GetEnumTypeResponse::Swap(GetEnumTypeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEnumTypeResponse::InternalSwap(GetEnumTypeResponse* other) {
  std::swap(enum_type_, other->enum_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetEnumTypeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetEnumTypeResponse_descriptor_;
  metadata.reflection = GetEnumTypeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetEnumTypeResponse

// optional .google.protobuf.EnumDescriptorProto enum_type = 1;
bool GetEnumTypeResponse::has_enum_type() const {
  return !_is_default_instance_ && enum_type_ != NULL;
}
void GetEnumTypeResponse::clear_enum_type() {
  if (GetArenaNoVirtual() == NULL && enum_type_ != NULL) delete enum_type_;
  enum_type_ = NULL;
}
const ::google::protobuf::EnumDescriptorProto& GetEnumTypeResponse::enum_type()
    const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
  return enum_type_ != NULL ? *enum_type_ : *default_instance_->enum_type_;
}
::google::protobuf::EnumDescriptorProto*
GetEnumTypeResponse::mutable_enum_type() {
  if (enum_type_ == NULL) {
    enum_type_ = new ::google::protobuf::EnumDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
  return enum_type_;
}
::google::protobuf::EnumDescriptorProto*
GetEnumTypeResponse::release_enum_type() {
  ::google::protobuf::EnumDescriptorProto* temp = enum_type_;
  enum_type_ = NULL;
  return temp;
}
void GetEnumTypeResponse::set_allocated_enum_type(
    ::google::protobuf::EnumDescriptorProto* enum_type) {
  delete enum_type_;
  enum_type_ = enum_type;
  if (enum_type) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetEnumTypeResponse.enum_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetEnumValueResponse::kEnumValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetEnumValueResponse::GetEnumValueResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetEnumValueResponse)
}

void GetEnumValueResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  enum_value_ = const_cast< ::google::protobuf::EnumValueDescriptorProto*>(
      &::google::protobuf::EnumValueDescriptorProto::default_instance());
}

GetEnumValueResponse::GetEnumValueResponse(const GetEnumValueResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetEnumValueResponse)
}

void GetEnumValueResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  enum_value_ = NULL;
}

GetEnumValueResponse::~GetEnumValueResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetEnumValueResponse)
  SharedDtor();
}

void GetEnumValueResponse::SharedDtor() {
  if (this != default_instance_) {
    delete enum_value_;
  }
}

void GetEnumValueResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetEnumValueResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetEnumValueResponse_descriptor_;
}

const GetEnumValueResponse& GetEnumValueResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetEnumValueResponse* GetEnumValueResponse::default_instance_ = NULL;

GetEnumValueResponse* GetEnumValueResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetEnumValueResponse* n = new GetEnumValueResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetEnumValueResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && enum_value_ != NULL) delete enum_value_;
  enum_value_ = NULL;
}

bool GetEnumValueResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetEnumValueResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_enum_value()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetEnumValueResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetEnumValueResponse)
  return false;
#undef DO_
}

void GetEnumValueResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetEnumValueResponse)
  // optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
  if (this->has_enum_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->enum_value_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetEnumValueResponse)
}

::google::protobuf::uint8*
GetEnumValueResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetEnumValueResponse)
  // optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
  if (this->has_enum_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->enum_value_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetEnumValueResponse)
  return target;
}

int GetEnumValueResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
  if (this->has_enum_value()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->enum_value_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetEnumValueResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetEnumValueResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetEnumValueResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetEnumValueResponse::MergeFrom(const GetEnumValueResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_enum_value()) {
    mutable_enum_value()
        ->::google::protobuf::EnumValueDescriptorProto::MergeFrom(
            from.enum_value());
  }
}

void GetEnumValueResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEnumValueResponse::CopyFrom(const GetEnumValueResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEnumValueResponse::IsInitialized() const {
  if (has_enum_value()) {
    if (!this->enum_value_->IsInitialized()) return false;
  }
  return true;
}

void GetEnumValueResponse::Swap(GetEnumValueResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetEnumValueResponse::InternalSwap(GetEnumValueResponse* other) {
  std::swap(enum_value_, other->enum_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetEnumValueResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetEnumValueResponse_descriptor_;
  metadata.reflection = GetEnumValueResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetEnumValueResponse

// optional .google.protobuf.EnumValueDescriptorProto enum_value = 1;
bool GetEnumValueResponse::has_enum_value() const {
  return !_is_default_instance_ && enum_value_ != NULL;
}
void GetEnumValueResponse::clear_enum_value() {
  if (GetArenaNoVirtual() == NULL && enum_value_ != NULL) delete enum_value_;
  enum_value_ = NULL;
}
const ::google::protobuf::EnumValueDescriptorProto&
GetEnumValueResponse::enum_value() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetEnumValueResponse.enum_value)
  return enum_value_ != NULL ? *enum_value_ : *default_instance_->enum_value_;
}
::google::protobuf::EnumValueDescriptorProto*
GetEnumValueResponse::mutable_enum_value() {
  if (enum_value_ == NULL) {
    enum_value_ = new ::google::protobuf::EnumValueDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetEnumValueResponse.enum_value)
  return enum_value_;
}
::google::protobuf::EnumValueDescriptorProto*
GetEnumValueResponse::release_enum_value() {
  ::google::protobuf::EnumValueDescriptorProto* temp = enum_value_;
  enum_value_ = NULL;
  return temp;
}
void GetEnumValueResponse::set_allocated_enum_value(
    ::google::protobuf::EnumValueDescriptorProto* enum_value) {
  delete enum_value_;
  enum_value_ = enum_value;
  if (enum_value) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetEnumValueResponse.enum_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetExtensionResponse::kExtensionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetExtensionResponse::GetExtensionResponse()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc.reflection.v1.GetExtensionResponse)
}

void GetExtensionResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  extension_ = const_cast< ::google::protobuf::FieldDescriptorProto*>(
      &::google::protobuf::FieldDescriptorProto::default_instance());
}

GetExtensionResponse::GetExtensionResponse(const GetExtensionResponse& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpc.reflection.v1.GetExtensionResponse)
}

void GetExtensionResponse::SharedCtor() {
  _is_default_instance_ = false;
  _cached_size_ = 0;
  extension_ = NULL;
}

GetExtensionResponse::~GetExtensionResponse() {
  // @@protoc_insertion_point(destructor:grpc.reflection.v1.GetExtensionResponse)
  SharedDtor();
}

void GetExtensionResponse::SharedDtor() {
  if (this != default_instance_) {
    delete extension_;
  }
}

void GetExtensionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetExtensionResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetExtensionResponse_descriptor_;
}

const GetExtensionResponse& GetExtensionResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_reflection_2eproto();
  return *default_instance_;
}

GetExtensionResponse* GetExtensionResponse::default_instance_ = NULL;

GetExtensionResponse* GetExtensionResponse::New(
    ::google::protobuf::Arena* arena) const {
  GetExtensionResponse* n = new GetExtensionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetExtensionResponse::Clear() {
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) delete extension_;
  extension_ = NULL;
}

bool GetExtensionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
  if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc.reflection.v1.GetExtensionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .google.protobuf.FieldDescriptorProto extension = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::
                  ReadMessageNoVirtual(input, mutable_extension()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
                ::google::protobuf::internal::WireFormatLite::
                    WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input,
                                                                    tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc.reflection.v1.GetExtensionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc.reflection.v1.GetExtensionResponse)
  return false;
#undef DO_
}

void GetExtensionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc.reflection.v1.GetExtensionResponse)
  // optional .google.protobuf.FieldDescriptorProto extension = 1;
  if (this->has_extension()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *this->extension_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpc.reflection.v1.GetExtensionResponse)
}

::google::protobuf::uint8*
GetExtensionResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc.reflection.v1.GetExtensionResponse)
  // optional .google.protobuf.FieldDescriptorProto extension = 1;
  if (this->has_extension()) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteMessageNoVirtualToArray(1, *this->extension_, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpc.reflection.v1.GetExtensionResponse)
  return target;
}

int GetExtensionResponse::ByteSize() const {
  int total_size = 0;

  // optional .google.protobuf.FieldDescriptorProto extension = 1;
  if (this->has_extension()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                *this->extension_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetExtensionResponse::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetExtensionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const GetExtensionResponse>(&from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetExtensionResponse::MergeFrom(const GetExtensionResponse& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.has_extension()) {
    mutable_extension()->::google::protobuf::FieldDescriptorProto::MergeFrom(
        from.extension());
  }
}

void GetExtensionResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetExtensionResponse::CopyFrom(const GetExtensionResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetExtensionResponse::IsInitialized() const {
  if (has_extension()) {
    if (!this->extension_->IsInitialized()) return false;
  }
  return true;
}

void GetExtensionResponse::Swap(GetExtensionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetExtensionResponse::InternalSwap(GetExtensionResponse* other) {
  std::swap(extension_, other->extension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetExtensionResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetExtensionResponse_descriptor_;
  metadata.reflection = GetExtensionResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetExtensionResponse

// optional .google.protobuf.FieldDescriptorProto extension = 1;
bool GetExtensionResponse::has_extension() const {
  return !_is_default_instance_ && extension_ != NULL;
}
void GetExtensionResponse::clear_extension() {
  if (GetArenaNoVirtual() == NULL && extension_ != NULL) delete extension_;
  extension_ = NULL;
}
const ::google::protobuf::FieldDescriptorProto&
GetExtensionResponse::extension() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1.GetExtensionResponse.extension)
  return extension_ != NULL ? *extension_ : *default_instance_->extension_;
}
::google::protobuf::FieldDescriptorProto*
GetExtensionResponse::mutable_extension() {
  if (extension_ == NULL) {
    extension_ = new ::google::protobuf::FieldDescriptorProto;
  }
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1.GetExtensionResponse.extension)
  return extension_;
}
::google::protobuf::FieldDescriptorProto*
GetExtensionResponse::release_extension() {
  ::google::protobuf::FieldDescriptorProto* temp = extension_;
  extension_ = NULL;
  return temp;
}
void GetExtensionResponse::set_allocated_extension(
    ::google::protobuf::FieldDescriptorProto* extension) {
  delete extension_;
  extension_ = extension;
  if (extension) {
  } else {
  }
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1.GetExtensionResponse.extension)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace reflection
}  // namespace grpc

// @@protoc_insertion_point(global_scope)
