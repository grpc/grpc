/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     envoy/type/metadata/v2/metadata.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef ENVOY_TYPE_METADATA_V2_METADATA_PROTO_UPB_H_
#define ENVOY_TYPE_METADATA_V2_METADATA_PROTO_UPB_H_

#include "upb/generated_util.h"
#include "upb/msg.h"
#include "upb/decode.h"
#include "upb/encode.h"

#include "upb/port_def.inc"

#ifdef __cplusplus
extern "C" {
#endif

struct envoy_type_metadata_v2_MetadataKey;
struct envoy_type_metadata_v2_MetadataKey_PathSegment;
struct envoy_type_metadata_v2_MetadataKind;
struct envoy_type_metadata_v2_MetadataKind_Request;
struct envoy_type_metadata_v2_MetadataKind_Route;
struct envoy_type_metadata_v2_MetadataKind_Cluster;
struct envoy_type_metadata_v2_MetadataKind_Host;
typedef struct envoy_type_metadata_v2_MetadataKey envoy_type_metadata_v2_MetadataKey;
typedef struct envoy_type_metadata_v2_MetadataKey_PathSegment envoy_type_metadata_v2_MetadataKey_PathSegment;
typedef struct envoy_type_metadata_v2_MetadataKind envoy_type_metadata_v2_MetadataKind;
typedef struct envoy_type_metadata_v2_MetadataKind_Request envoy_type_metadata_v2_MetadataKind_Request;
typedef struct envoy_type_metadata_v2_MetadataKind_Route envoy_type_metadata_v2_MetadataKind_Route;
typedef struct envoy_type_metadata_v2_MetadataKind_Cluster envoy_type_metadata_v2_MetadataKind_Cluster;
typedef struct envoy_type_metadata_v2_MetadataKind_Host envoy_type_metadata_v2_MetadataKind_Host;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKey_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKey_PathSegment_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKind_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKind_Request_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKind_Route_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKind_Cluster_msginit;
extern const upb_msglayout envoy_type_metadata_v2_MetadataKind_Host_msginit;


/* envoy.type.metadata.v2.MetadataKey */

UPB_INLINE envoy_type_metadata_v2_MetadataKey *envoy_type_metadata_v2_MetadataKey_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKey *)upb_msg_new(&envoy_type_metadata_v2_MetadataKey_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKey *envoy_type_metadata_v2_MetadataKey_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKey *ret = envoy_type_metadata_v2_MetadataKey_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKey_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKey_serialize(const envoy_type_metadata_v2_MetadataKey *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKey_msginit, arena, len);
}

UPB_INLINE upb_strview envoy_type_metadata_v2_MetadataKey_key(const envoy_type_metadata_v2_MetadataKey *msg) { return UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)); }
UPB_INLINE const envoy_type_metadata_v2_MetadataKey_PathSegment* const* envoy_type_metadata_v2_MetadataKey_path(const envoy_type_metadata_v2_MetadataKey *msg, size_t *len) { return (const envoy_type_metadata_v2_MetadataKey_PathSegment* const*)_upb_array_accessor(msg, UPB_SIZE(8, 16), len); }

UPB_INLINE void envoy_type_metadata_v2_MetadataKey_set_key(envoy_type_metadata_v2_MetadataKey *msg, upb_strview value) {
  UPB_FIELD_AT(msg, upb_strview, UPB_SIZE(0, 0)) = value;
}
UPB_INLINE envoy_type_metadata_v2_MetadataKey_PathSegment** envoy_type_metadata_v2_MetadataKey_mutable_path(envoy_type_metadata_v2_MetadataKey *msg, size_t *len) {
  return (envoy_type_metadata_v2_MetadataKey_PathSegment**)_upb_array_mutable_accessor(msg, UPB_SIZE(8, 16), len);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKey_PathSegment** envoy_type_metadata_v2_MetadataKey_resize_path(envoy_type_metadata_v2_MetadataKey *msg, size_t len, upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKey_PathSegment**)_upb_array_resize_accessor(msg, UPB_SIZE(8, 16), len, UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, arena);
}
UPB_INLINE struct envoy_type_metadata_v2_MetadataKey_PathSegment* envoy_type_metadata_v2_MetadataKey_add_path(envoy_type_metadata_v2_MetadataKey *msg, upb_arena *arena) {
  struct envoy_type_metadata_v2_MetadataKey_PathSegment* sub = (struct envoy_type_metadata_v2_MetadataKey_PathSegment*)upb_msg_new(&envoy_type_metadata_v2_MetadataKey_PathSegment_msginit, arena);
  bool ok = _upb_array_append_accessor(
      msg, UPB_SIZE(8, 16), UPB_SIZE(4, 8), UPB_TYPE_MESSAGE, &sub, arena);
  if (!ok) return NULL;
  return sub;
}

/* envoy.type.metadata.v2.MetadataKey.PathSegment */

UPB_INLINE envoy_type_metadata_v2_MetadataKey_PathSegment *envoy_type_metadata_v2_MetadataKey_PathSegment_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKey_PathSegment *)upb_msg_new(&envoy_type_metadata_v2_MetadataKey_PathSegment_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKey_PathSegment *envoy_type_metadata_v2_MetadataKey_PathSegment_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKey_PathSegment *ret = envoy_type_metadata_v2_MetadataKey_PathSegment_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKey_PathSegment_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKey_PathSegment_serialize(const envoy_type_metadata_v2_MetadataKey_PathSegment *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKey_PathSegment_msginit, arena, len);
}

typedef enum {
  envoy_type_metadata_v2_MetadataKey_PathSegment_segment_key = 1,
  envoy_type_metadata_v2_MetadataKey_PathSegment_segment_NOT_SET = 0
} envoy_type_metadata_v2_MetadataKey_PathSegment_segment_oneofcases;
UPB_INLINE envoy_type_metadata_v2_MetadataKey_PathSegment_segment_oneofcases envoy_type_metadata_v2_MetadataKey_PathSegment_segment_case(const envoy_type_metadata_v2_MetadataKey_PathSegment* msg) { return (envoy_type_metadata_v2_MetadataKey_PathSegment_segment_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(8, 16)); }

UPB_INLINE bool envoy_type_metadata_v2_MetadataKey_PathSegment_has_key(const envoy_type_metadata_v2_MetadataKey_PathSegment *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(8, 16), 1); }
UPB_INLINE upb_strview envoy_type_metadata_v2_MetadataKey_PathSegment_key(const envoy_type_metadata_v2_MetadataKey_PathSegment *msg) { return UPB_READ_ONEOF(msg, upb_strview, UPB_SIZE(0, 0), UPB_SIZE(8, 16), 1, upb_strview_make("", strlen(""))); }

UPB_INLINE void envoy_type_metadata_v2_MetadataKey_PathSegment_set_key(envoy_type_metadata_v2_MetadataKey_PathSegment *msg, upb_strview value) {
  UPB_WRITE_ONEOF(msg, upb_strview, UPB_SIZE(0, 0), value, UPB_SIZE(8, 16), 1);
}

/* envoy.type.metadata.v2.MetadataKind */

UPB_INLINE envoy_type_metadata_v2_MetadataKind *envoy_type_metadata_v2_MetadataKind_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKind *)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKind *envoy_type_metadata_v2_MetadataKind_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKind *ret = envoy_type_metadata_v2_MetadataKind_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKind_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKind_serialize(const envoy_type_metadata_v2_MetadataKind *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKind_msginit, arena, len);
}

typedef enum {
  envoy_type_metadata_v2_MetadataKind_kind_request = 1,
  envoy_type_metadata_v2_MetadataKind_kind_route = 2,
  envoy_type_metadata_v2_MetadataKind_kind_cluster = 3,
  envoy_type_metadata_v2_MetadataKind_kind_host = 4,
  envoy_type_metadata_v2_MetadataKind_kind_NOT_SET = 0
} envoy_type_metadata_v2_MetadataKind_kind_oneofcases;
UPB_INLINE envoy_type_metadata_v2_MetadataKind_kind_oneofcases envoy_type_metadata_v2_MetadataKind_kind_case(const envoy_type_metadata_v2_MetadataKind* msg) { return (envoy_type_metadata_v2_MetadataKind_kind_oneofcases)UPB_FIELD_AT(msg, int32_t, UPB_SIZE(4, 8)); }

UPB_INLINE bool envoy_type_metadata_v2_MetadataKind_has_request(const envoy_type_metadata_v2_MetadataKind *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 1); }
UPB_INLINE const envoy_type_metadata_v2_MetadataKind_Request* envoy_type_metadata_v2_MetadataKind_request(const envoy_type_metadata_v2_MetadataKind *msg) { return UPB_READ_ONEOF(msg, const envoy_type_metadata_v2_MetadataKind_Request*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 1, NULL); }
UPB_INLINE bool envoy_type_metadata_v2_MetadataKind_has_route(const envoy_type_metadata_v2_MetadataKind *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 2); }
UPB_INLINE const envoy_type_metadata_v2_MetadataKind_Route* envoy_type_metadata_v2_MetadataKind_route(const envoy_type_metadata_v2_MetadataKind *msg) { return UPB_READ_ONEOF(msg, const envoy_type_metadata_v2_MetadataKind_Route*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 2, NULL); }
UPB_INLINE bool envoy_type_metadata_v2_MetadataKind_has_cluster(const envoy_type_metadata_v2_MetadataKind *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 3); }
UPB_INLINE const envoy_type_metadata_v2_MetadataKind_Cluster* envoy_type_metadata_v2_MetadataKind_cluster(const envoy_type_metadata_v2_MetadataKind *msg) { return UPB_READ_ONEOF(msg, const envoy_type_metadata_v2_MetadataKind_Cluster*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 3, NULL); }
UPB_INLINE bool envoy_type_metadata_v2_MetadataKind_has_host(const envoy_type_metadata_v2_MetadataKind *msg) { return _upb_has_oneof_field(msg, UPB_SIZE(4, 8), 4); }
UPB_INLINE const envoy_type_metadata_v2_MetadataKind_Host* envoy_type_metadata_v2_MetadataKind_host(const envoy_type_metadata_v2_MetadataKind *msg) { return UPB_READ_ONEOF(msg, const envoy_type_metadata_v2_MetadataKind_Host*, UPB_SIZE(0, 0), UPB_SIZE(4, 8), 4, NULL); }

UPB_INLINE void envoy_type_metadata_v2_MetadataKind_set_request(envoy_type_metadata_v2_MetadataKind *msg, envoy_type_metadata_v2_MetadataKind_Request* value) {
  UPB_WRITE_ONEOF(msg, envoy_type_metadata_v2_MetadataKind_Request*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 1);
}
UPB_INLINE struct envoy_type_metadata_v2_MetadataKind_Request* envoy_type_metadata_v2_MetadataKind_mutable_request(envoy_type_metadata_v2_MetadataKind *msg, upb_arena *arena) {
  struct envoy_type_metadata_v2_MetadataKind_Request* sub = (struct envoy_type_metadata_v2_MetadataKind_Request*)envoy_type_metadata_v2_MetadataKind_request(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_metadata_v2_MetadataKind_Request*)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Request_msginit, arena);
    if (!sub) return NULL;
    envoy_type_metadata_v2_MetadataKind_set_request(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_type_metadata_v2_MetadataKind_set_route(envoy_type_metadata_v2_MetadataKind *msg, envoy_type_metadata_v2_MetadataKind_Route* value) {
  UPB_WRITE_ONEOF(msg, envoy_type_metadata_v2_MetadataKind_Route*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 2);
}
UPB_INLINE struct envoy_type_metadata_v2_MetadataKind_Route* envoy_type_metadata_v2_MetadataKind_mutable_route(envoy_type_metadata_v2_MetadataKind *msg, upb_arena *arena) {
  struct envoy_type_metadata_v2_MetadataKind_Route* sub = (struct envoy_type_metadata_v2_MetadataKind_Route*)envoy_type_metadata_v2_MetadataKind_route(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_metadata_v2_MetadataKind_Route*)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Route_msginit, arena);
    if (!sub) return NULL;
    envoy_type_metadata_v2_MetadataKind_set_route(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_type_metadata_v2_MetadataKind_set_cluster(envoy_type_metadata_v2_MetadataKind *msg, envoy_type_metadata_v2_MetadataKind_Cluster* value) {
  UPB_WRITE_ONEOF(msg, envoy_type_metadata_v2_MetadataKind_Cluster*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 3);
}
UPB_INLINE struct envoy_type_metadata_v2_MetadataKind_Cluster* envoy_type_metadata_v2_MetadataKind_mutable_cluster(envoy_type_metadata_v2_MetadataKind *msg, upb_arena *arena) {
  struct envoy_type_metadata_v2_MetadataKind_Cluster* sub = (struct envoy_type_metadata_v2_MetadataKind_Cluster*)envoy_type_metadata_v2_MetadataKind_cluster(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_metadata_v2_MetadataKind_Cluster*)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Cluster_msginit, arena);
    if (!sub) return NULL;
    envoy_type_metadata_v2_MetadataKind_set_cluster(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_type_metadata_v2_MetadataKind_set_host(envoy_type_metadata_v2_MetadataKind *msg, envoy_type_metadata_v2_MetadataKind_Host* value) {
  UPB_WRITE_ONEOF(msg, envoy_type_metadata_v2_MetadataKind_Host*, UPB_SIZE(0, 0), value, UPB_SIZE(4, 8), 4);
}
UPB_INLINE struct envoy_type_metadata_v2_MetadataKind_Host* envoy_type_metadata_v2_MetadataKind_mutable_host(envoy_type_metadata_v2_MetadataKind *msg, upb_arena *arena) {
  struct envoy_type_metadata_v2_MetadataKind_Host* sub = (struct envoy_type_metadata_v2_MetadataKind_Host*)envoy_type_metadata_v2_MetadataKind_host(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_metadata_v2_MetadataKind_Host*)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Host_msginit, arena);
    if (!sub) return NULL;
    envoy_type_metadata_v2_MetadataKind_set_host(msg, sub);
  }
  return sub;
}

/* envoy.type.metadata.v2.MetadataKind.Request */

UPB_INLINE envoy_type_metadata_v2_MetadataKind_Request *envoy_type_metadata_v2_MetadataKind_Request_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKind_Request *)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Request_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKind_Request *envoy_type_metadata_v2_MetadataKind_Request_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKind_Request *ret = envoy_type_metadata_v2_MetadataKind_Request_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKind_Request_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKind_Request_serialize(const envoy_type_metadata_v2_MetadataKind_Request *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKind_Request_msginit, arena, len);
}



/* envoy.type.metadata.v2.MetadataKind.Route */

UPB_INLINE envoy_type_metadata_v2_MetadataKind_Route *envoy_type_metadata_v2_MetadataKind_Route_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKind_Route *)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Route_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKind_Route *envoy_type_metadata_v2_MetadataKind_Route_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKind_Route *ret = envoy_type_metadata_v2_MetadataKind_Route_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKind_Route_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKind_Route_serialize(const envoy_type_metadata_v2_MetadataKind_Route *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKind_Route_msginit, arena, len);
}



/* envoy.type.metadata.v2.MetadataKind.Cluster */

UPB_INLINE envoy_type_metadata_v2_MetadataKind_Cluster *envoy_type_metadata_v2_MetadataKind_Cluster_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKind_Cluster *)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Cluster_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKind_Cluster *envoy_type_metadata_v2_MetadataKind_Cluster_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKind_Cluster *ret = envoy_type_metadata_v2_MetadataKind_Cluster_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKind_Cluster_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKind_Cluster_serialize(const envoy_type_metadata_v2_MetadataKind_Cluster *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKind_Cluster_msginit, arena, len);
}



/* envoy.type.metadata.v2.MetadataKind.Host */

UPB_INLINE envoy_type_metadata_v2_MetadataKind_Host *envoy_type_metadata_v2_MetadataKind_Host_new(upb_arena *arena) {
  return (envoy_type_metadata_v2_MetadataKind_Host *)upb_msg_new(&envoy_type_metadata_v2_MetadataKind_Host_msginit, arena);
}
UPB_INLINE envoy_type_metadata_v2_MetadataKind_Host *envoy_type_metadata_v2_MetadataKind_Host_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  envoy_type_metadata_v2_MetadataKind_Host *ret = envoy_type_metadata_v2_MetadataKind_Host_new(arena);
  return (ret && upb_decode(buf, size, ret, &envoy_type_metadata_v2_MetadataKind_Host_msginit, arena)) ? ret : NULL;
}
UPB_INLINE char *envoy_type_metadata_v2_MetadataKind_Host_serialize(const envoy_type_metadata_v2_MetadataKind_Host *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &envoy_type_metadata_v2_MetadataKind_Host_msginit, arena, len);
}



#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port_undef.inc"

#endif  /* ENVOY_TYPE_METADATA_V2_METADATA_PROTO_UPB_H_ */
