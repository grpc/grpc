/* This file was generated by upbc (the upb compiler) from the input
 * file:
 *
 *     xds/type/matcher/v3/regex.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated. */

#ifndef XDS_TYPE_MATCHER_V3_REGEX_PROTO_UPB_H_
#define XDS_TYPE_MATCHER_V3_REGEX_PROTO_UPB_H_

#include "upb/msg_internal.h"
#include "upb/decode.h"
#include "upb/decode_fast.h"
#include "upb/encode.h"

#include "upb/port_def.inc"

#ifdef __cplusplus
extern "C" {
#endif

struct xds_type_matcher_v3_RegexMatcher;
struct xds_type_matcher_v3_RegexMatcher_GoogleRE2;
typedef struct xds_type_matcher_v3_RegexMatcher xds_type_matcher_v3_RegexMatcher;
typedef struct xds_type_matcher_v3_RegexMatcher_GoogleRE2 xds_type_matcher_v3_RegexMatcher_GoogleRE2;
extern const upb_msglayout xds_type_matcher_v3_RegexMatcher_msginit;
extern const upb_msglayout xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit;


/* xds.type.matcher.v3.RegexMatcher */

UPB_INLINE xds_type_matcher_v3_RegexMatcher *xds_type_matcher_v3_RegexMatcher_new(upb_arena *arena) {
  return (xds_type_matcher_v3_RegexMatcher *)_upb_msg_new(&xds_type_matcher_v3_RegexMatcher_msginit, arena);
}
UPB_INLINE xds_type_matcher_v3_RegexMatcher *xds_type_matcher_v3_RegexMatcher_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  xds_type_matcher_v3_RegexMatcher *ret = xds_type_matcher_v3_RegexMatcher_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &xds_type_matcher_v3_RegexMatcher_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE xds_type_matcher_v3_RegexMatcher *xds_type_matcher_v3_RegexMatcher_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  xds_type_matcher_v3_RegexMatcher *ret = xds_type_matcher_v3_RegexMatcher_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &xds_type_matcher_v3_RegexMatcher_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *xds_type_matcher_v3_RegexMatcher_serialize(const xds_type_matcher_v3_RegexMatcher *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &xds_type_matcher_v3_RegexMatcher_msginit, arena, len);
}

typedef enum {
  xds_type_matcher_v3_RegexMatcher_engine_type_google_re2 = 1,
  xds_type_matcher_v3_RegexMatcher_engine_type_NOT_SET = 0
} xds_type_matcher_v3_RegexMatcher_engine_type_oneofcases;
UPB_INLINE xds_type_matcher_v3_RegexMatcher_engine_type_oneofcases xds_type_matcher_v3_RegexMatcher_engine_type_case(const xds_type_matcher_v3_RegexMatcher* msg) { return (xds_type_matcher_v3_RegexMatcher_engine_type_oneofcases)*UPB_PTR_AT(msg, UPB_SIZE(12, 24), int32_t); }

UPB_INLINE bool xds_type_matcher_v3_RegexMatcher_has_google_re2(const xds_type_matcher_v3_RegexMatcher *msg) { return _upb_getoneofcase(msg, UPB_SIZE(12, 24)) == 1; }
UPB_INLINE const xds_type_matcher_v3_RegexMatcher_GoogleRE2* xds_type_matcher_v3_RegexMatcher_google_re2(const xds_type_matcher_v3_RegexMatcher *msg) { return UPB_READ_ONEOF(msg, const xds_type_matcher_v3_RegexMatcher_GoogleRE2*, UPB_SIZE(8, 16), UPB_SIZE(12, 24), 1, NULL); }
UPB_INLINE upb_strview xds_type_matcher_v3_RegexMatcher_regex(const xds_type_matcher_v3_RegexMatcher *msg) { return *UPB_PTR_AT(msg, UPB_SIZE(0, 0), upb_strview); }

UPB_INLINE void xds_type_matcher_v3_RegexMatcher_set_google_re2(xds_type_matcher_v3_RegexMatcher *msg, xds_type_matcher_v3_RegexMatcher_GoogleRE2* value) {
  UPB_WRITE_ONEOF(msg, xds_type_matcher_v3_RegexMatcher_GoogleRE2*, UPB_SIZE(8, 16), value, UPB_SIZE(12, 24), 1);
}
UPB_INLINE struct xds_type_matcher_v3_RegexMatcher_GoogleRE2* xds_type_matcher_v3_RegexMatcher_mutable_google_re2(xds_type_matcher_v3_RegexMatcher *msg, upb_arena *arena) {
  struct xds_type_matcher_v3_RegexMatcher_GoogleRE2* sub = (struct xds_type_matcher_v3_RegexMatcher_GoogleRE2*)xds_type_matcher_v3_RegexMatcher_google_re2(msg);
  if (sub == NULL) {
    sub = (struct xds_type_matcher_v3_RegexMatcher_GoogleRE2*)_upb_msg_new(&xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit, arena);
    if (!sub) return NULL;
    xds_type_matcher_v3_RegexMatcher_set_google_re2(msg, sub);
  }
  return sub;
}
UPB_INLINE void xds_type_matcher_v3_RegexMatcher_set_regex(xds_type_matcher_v3_RegexMatcher *msg, upb_strview value) {
  *UPB_PTR_AT(msg, UPB_SIZE(0, 0), upb_strview) = value;
}

/* xds.type.matcher.v3.RegexMatcher.GoogleRE2 */

UPB_INLINE xds_type_matcher_v3_RegexMatcher_GoogleRE2 *xds_type_matcher_v3_RegexMatcher_GoogleRE2_new(upb_arena *arena) {
  return (xds_type_matcher_v3_RegexMatcher_GoogleRE2 *)_upb_msg_new(&xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit, arena);
}
UPB_INLINE xds_type_matcher_v3_RegexMatcher_GoogleRE2 *xds_type_matcher_v3_RegexMatcher_GoogleRE2_parse(const char *buf, size_t size,
                        upb_arena *arena) {
  xds_type_matcher_v3_RegexMatcher_GoogleRE2 *ret = xds_type_matcher_v3_RegexMatcher_GoogleRE2_new(arena);
  if (!ret) return NULL;
  if (!upb_decode(buf, size, ret, &xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit, arena)) return NULL;
  return ret;
}
UPB_INLINE xds_type_matcher_v3_RegexMatcher_GoogleRE2 *xds_type_matcher_v3_RegexMatcher_GoogleRE2_parse_ex(const char *buf, size_t size,
                           const upb_extreg *extreg, int options,
                           upb_arena *arena) {
  xds_type_matcher_v3_RegexMatcher_GoogleRE2 *ret = xds_type_matcher_v3_RegexMatcher_GoogleRE2_new(arena);
  if (!ret) return NULL;
  if (!_upb_decode(buf, size, ret, &xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit, extreg, options, arena)) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char *xds_type_matcher_v3_RegexMatcher_GoogleRE2_serialize(const xds_type_matcher_v3_RegexMatcher_GoogleRE2 *msg, upb_arena *arena, size_t *len) {
  return upb_encode(msg, &xds_type_matcher_v3_RegexMatcher_GoogleRE2_msginit, arena, len);
}



extern const upb_msglayout_file xds_type_matcher_v3_regex_proto_upb_file_layout;

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port_undef.inc"

#endif  /* XDS_TYPE_MATCHER_V3_REGEX_PROTO_UPB_H_ */
