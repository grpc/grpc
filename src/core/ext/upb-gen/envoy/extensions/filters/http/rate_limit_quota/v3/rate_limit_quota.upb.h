/* This file was generated by upb_generator from the input file:
 *
 *     envoy/extensions/filters/http/rate_limit_quota/v3/rate_limit_quota.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated.
 * NO CHECKED-IN PROTOBUF GENCODE */

#ifndef ENVOY_EXTENSIONS_FILTERS_HTTP_RATE_LIMIT_QUOTA_V3_RATE_LIMIT_QUOTA_PROTO_UPB_H__UPB_H_
#define ENVOY_EXTENSIONS_FILTERS_HTTP_RATE_LIMIT_QUOTA_V3_RATE_LIMIT_QUOTA_PROTO_UPB_H__UPB_H_

#include "upb/generated_code_support.h"

#include "envoy/extensions/filters/http/rate_limit_quota/v3/rate_limit_quota.upb_minitable.h"

#include "envoy/config/core/v3/base.upb_minitable.h"
#include "envoy/config/core/v3/extension.upb_minitable.h"
#include "envoy/config/core/v3/grpc_service.upb_minitable.h"
#include "envoy/type/v3/http_status.upb_minitable.h"
#include "envoy/type/v3/ratelimit_strategy.upb_minitable.h"
#include "google/protobuf/duration.upb_minitable.h"
#include "google/protobuf/wrappers.upb_minitable.h"
#include "google/rpc/status.upb_minitable.h"
#include "xds/annotations/v3/status.upb_minitable.h"
#include "xds/type/matcher/v3/matcher.upb_minitable.h"
#include "udpa/annotations/status.upb_minitable.h"
#include "validate/validate.upb_minitable.h"

// Must be last.
#include "upb/port/def.inc"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder;
typedef struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder;
struct envoy_config_core_v3_GrpcService;
struct envoy_config_core_v3_HeaderValueOption;
struct envoy_config_core_v3_RuntimeFractionalPercent;
struct envoy_config_core_v3_TypedExtensionConfig;
struct envoy_type_v3_HttpStatus;
struct envoy_type_v3_RateLimitStrategy;
struct google_protobuf_BytesValue;
struct google_protobuf_Duration;
struct google_rpc_Status;
struct xds_type_matcher_v3_Matcher;



/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaFilterConfig */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaFilterConfig_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaFilterConfig_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaFilterConfig_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaFilterConfig_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaFilterConfig_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_rlqs_server(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_GrpcService* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_rlqs_server(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const struct envoy_config_core_v3_GrpcService* default_val = NULL;
  const struct envoy_config_core_v3_GrpcService* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__GrpcService_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_has_rlqs_server(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_domain(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(32, 16), 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE upb_StringView envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_domain(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = {2, UPB_SIZE(32, 16), 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(16, 40), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct xds_type_matcher_v3_Matcher* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_bucket_matchers(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const struct xds_type_matcher_v3_Matcher* default_val = NULL;
  const struct xds_type_matcher_v3_Matcher* ret;
  const upb_MiniTableField field = {3, UPB_SIZE(16, 40), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&xds__type__matcher__v3__Matcher_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_has_bucket_matchers(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(16, 40), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_filter_enabled(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {4, UPB_SIZE(20, 48), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_filter_enabled(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const struct envoy_config_core_v3_RuntimeFractionalPercent* default_val = NULL;
  const struct envoy_config_core_v3_RuntimeFractionalPercent* ret;
  const upb_MiniTableField field = {4, UPB_SIZE(20, 48), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_has_filter_enabled(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {4, UPB_SIZE(20, 48), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_filter_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {5, UPB_SIZE(24, 56), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_filter_enforced(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const struct envoy_config_core_v3_RuntimeFractionalPercent* default_val = NULL;
  const struct envoy_config_core_v3_RuntimeFractionalPercent* ret;
  const upb_MiniTableField field = {5, UPB_SIZE(24, 56), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_has_filter_enforced(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {5, UPB_SIZE(24, 56), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_clear_request_headers_to_add_when_not_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg) {
  const upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_HeaderValueOption* const* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_request_headers_to_add_when_not_enforced(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, size_t* size) {
  const upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  const upb_Array* arr = upb_Message_GetArray(UPB_UPCAST(msg), &field);
  if (arr) {
    if (size) *size = arr->UPB_PRIVATE(size);
    return (const struct envoy_config_core_v3_HeaderValueOption* const*)upb_Array_DataPtr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_request_headers_to_add_when_not_enforced_upb_array(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, size_t* size) {
  const upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  const upb_Array* arr = upb_Message_GetArray(UPB_UPCAST(msg), &field);
  if (size) {
    *size = arr ? arr->UPB_PRIVATE(size) : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_request_headers_to_add_when_not_enforced_mutable_upb_array(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(UPB_UPCAST(msg),
                                                       &field, arena);
  if (size) {
    *size = arr ? arr->UPB_PRIVATE(size) : 0;
  }
  return arr;
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_rlqs_server(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig *msg, struct envoy_config_core_v3_GrpcService* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__GrpcService_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_GrpcService* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_mutable_rlqs_server(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_GrpcService* sub = (struct envoy_config_core_v3_GrpcService*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_rlqs_server(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_GrpcService*)_upb_Message_New(&envoy__config__core__v3__GrpcService_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_rlqs_server(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_domain(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig *msg, upb_StringView value) {
  const upb_MiniTableField field = {2, UPB_SIZE(32, 16), 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig *msg, struct xds_type_matcher_v3_Matcher* value) {
  const upb_MiniTableField field = {3, UPB_SIZE(16, 40), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&xds__type__matcher__v3__Matcher_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct xds_type_matcher_v3_Matcher* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_mutable_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena) {
  struct xds_type_matcher_v3_Matcher* sub = (struct xds_type_matcher_v3_Matcher*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_bucket_matchers(msg);
  if (sub == NULL) {
    sub = (struct xds_type_matcher_v3_Matcher*)_upb_Message_New(&xds__type__matcher__v3__Matcher_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_bucket_matchers(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_filter_enabled(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig *msg, struct envoy_config_core_v3_RuntimeFractionalPercent* value) {
  const upb_MiniTableField field = {4, UPB_SIZE(20, 48), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_mutable_filter_enabled(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_RuntimeFractionalPercent* sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_filter_enabled(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)_upb_Message_New(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_filter_enabled(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_filter_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig *msg, struct envoy_config_core_v3_RuntimeFractionalPercent* value) {
  const upb_MiniTableField field = {5, UPB_SIZE(24, 56), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_mutable_filter_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_RuntimeFractionalPercent* sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_filter_enforced(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)_upb_Message_New(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_set_filter_enforced(msg, sub);
  }
  return sub;
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption** envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_mutable_request_headers_to_add_when_not_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, size_t* size) {
  upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetMutableArray(UPB_UPCAST(msg), &field);
  if (arr) {
    if (size) *size = arr->UPB_PRIVATE(size);
    return (struct envoy_config_core_v3_HeaderValueOption**)upb_Array_MutableDataPtr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption** envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_resize_request_headers_to_add_when_not_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return (struct envoy_config_core_v3_HeaderValueOption**)upb_Message_ResizeArrayUninitialized(UPB_UPCAST(msg),
                                                   &field, size, arena);
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig_add_request_headers_to_add_when_not_enforced(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaFilterConfig* msg, upb_Arena* arena) {
  upb_MiniTableField field = {6, UPB_SIZE(28, 64), 0, 4, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      UPB_UPCAST(msg), &field, arena);
  if (!arr || !UPB_PRIVATE(_upb_Array_ResizeUninitialized)(
                  arr, arr->UPB_PRIVATE(size) + 1, arena)) {
    return NULL;
  }
  struct envoy_config_core_v3_HeaderValueOption* sub = (struct envoy_config_core_v3_HeaderValueOption*)_upb_Message_New(&envoy__config__core__v3__HeaderValueOption_msg_init, arena);
  if (!arr || !sub) return NULL;
  UPB_PRIVATE(_upb_Array_Set)
  (arr, arr->UPB_PRIVATE(size) - 1, &sub, sizeof(sub));
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaOverride */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaOverride_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaOverride_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaOverride_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaOverride_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaOverride_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_clear_domain(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg) {
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE upb_StringView envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_domain(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_clear_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct xds_type_matcher_v3_Matcher* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_bucket_matchers(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg) {
  const struct xds_type_matcher_v3_Matcher* default_val = NULL;
  const struct xds_type_matcher_v3_Matcher* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&xds__type__matcher__v3__Matcher_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_has_bucket_matchers(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_set_domain(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride *msg, upb_StringView value) {
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_set_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride *msg, struct xds_type_matcher_v3_Matcher* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&xds__type__matcher__v3__Matcher_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct xds_type_matcher_v3_Matcher* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_mutable_bucket_matchers(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride* msg, upb_Arena* arena) {
  struct xds_type_matcher_v3_Matcher* sub = (struct xds_type_matcher_v3_Matcher*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_bucket_matchers(msg);
  if (sub == NULL) {
    sub = (struct xds_type_matcher_v3_Matcher*)_upb_Message_New(&xds__type__matcher__v3__Matcher_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaOverride_set_bucket_matchers(msg, sub);
  }
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_clear_bucket_id_builder(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_bucket_id_builder(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* default_val = NULL;
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_has_bucket_id_builder(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_clear_reporting_interval(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct google_protobuf_Duration* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_reporting_interval(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const struct google_protobuf_Duration* default_val = NULL;
  const struct google_protobuf_Duration* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__Duration_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_has_reporting_interval(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_clear_deny_response_settings(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_deny_response_settings(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* default_val = NULL;
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* ret;
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_has_deny_response_settings(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_clear_no_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_no_assignment_behavior(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* default_val = NULL;
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* ret;
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_has_no_assignment_behavior(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_clear_expired_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {5, UPB_SIZE(28, 48), 68, 4, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_expired_assignment_behavior(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* default_val = NULL;
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* ret;
  const upb_MiniTableField field = {5, UPB_SIZE(28, 48), 68, 4, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_has_expired_assignment_behavior(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg) {
  const upb_MiniTableField field = {5, UPB_SIZE(28, 48), 68, 4, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_bucket_id_builder(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings *msg, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_mutable_bucket_id_builder(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_bucket_id_builder(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_bucket_id_builder(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_reporting_interval(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings *msg, struct google_protobuf_Duration* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__Duration_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct google_protobuf_Duration* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_mutable_reporting_interval(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena) {
  struct google_protobuf_Duration* sub = (struct google_protobuf_Duration*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_reporting_interval(msg);
  if (sub == NULL) {
    sub = (struct google_protobuf_Duration*)_upb_Message_New(&google__protobuf__Duration_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_reporting_interval(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_deny_response_settings(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings *msg, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* value) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_mutable_deny_response_settings(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_deny_response_settings(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_deny_response_settings(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_no_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings *msg, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* value) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 67, 3, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_mutable_no_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_no_assignment_behavior(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_no_assignment_behavior(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_expired_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings *msg, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* value) {
  const upb_MiniTableField field = {5, UPB_SIZE(28, 48), 68, 4, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_mutable_expired_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_expired_assignment_behavior(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_set_expired_assignment_behavior(msg, sub);
  }
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.NoAssignmentBehavior */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, options, arena, &ptr, len);
  return ptr;
}
typedef enum {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_fallback_rate_limit = 1,
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_NOT_SET = 0
} envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_oneofcases;
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_oneofcases envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_case(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_no_assignment_behavior_oneofcases)upb_Message_WhichOneofFieldNumber(
      UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_clear_no_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearOneof(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__NoAssignmentBehavior_msg_init, &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_clear_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_type_v3_RateLimitStrategy* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_fallback_rate_limit(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg) {
  const struct envoy_type_v3_RateLimitStrategy* default_val = NULL;
  const struct envoy_type_v3_RateLimitStrategy* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__RateLimitStrategy_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_has_fallback_rate_limit(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_set_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior *msg, struct envoy_type_v3_RateLimitStrategy* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__RateLimitStrategy_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_type_v3_RateLimitStrategy* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_mutable_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior* msg, upb_Arena* arena) {
  struct envoy_type_v3_RateLimitStrategy* sub = (struct envoy_type_v3_RateLimitStrategy*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_fallback_rate_limit(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_v3_RateLimitStrategy*)_upb_Message_New(&envoy__type__v3__RateLimitStrategy_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_NoAssignmentBehavior_set_fallback_rate_limit(msg, sub);
  }
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, options, arena, &ptr, len);
  return ptr;
}
typedef enum {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_fallback_rate_limit = 2,
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_reuse_last_assignment = 3,
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_NOT_SET = 0
} envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_oneofcases;
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_oneofcases envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_case(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_oneofcases)upb_Message_WhichOneofFieldNumber(
      UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_clear_expired_assignment_behavior(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearOneof(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior_msg_init, &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_clear_expired_assignment_behavior_timeout(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct google_protobuf_Duration* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_timeout(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const struct google_protobuf_Duration* default_val = NULL;
  const struct google_protobuf_Duration* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__Duration_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_has_expired_assignment_behavior_timeout(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_clear_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_type_v3_RateLimitStrategy* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_fallback_rate_limit(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const struct envoy_type_v3_RateLimitStrategy* default_val = NULL;
  const struct envoy_type_v3_RateLimitStrategy* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__RateLimitStrategy_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_has_fallback_rate_limit(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_clear_reuse_last_assignment(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_reuse_last_assignment(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* default_val = NULL;
  const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* ret;
  const upb_MiniTableField field = {3, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_has_reuse_last_assignment(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_expired_assignment_behavior_timeout(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior *msg, struct google_protobuf_Duration* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__Duration_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct google_protobuf_Duration* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_mutable_expired_assignment_behavior_timeout(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg, upb_Arena* arena) {
  struct google_protobuf_Duration* sub = (struct google_protobuf_Duration*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_expired_assignment_behavior_timeout(msg);
  if (sub == NULL) {
    sub = (struct google_protobuf_Duration*)_upb_Message_New(&google__protobuf__Duration_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_expired_assignment_behavior_timeout(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior *msg, struct envoy_type_v3_RateLimitStrategy* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__RateLimitStrategy_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_type_v3_RateLimitStrategy* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_mutable_fallback_rate_limit(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg, upb_Arena* arena) {
  struct envoy_type_v3_RateLimitStrategy* sub = (struct envoy_type_v3_RateLimitStrategy*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_fallback_rate_limit(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_v3_RateLimitStrategy*)_upb_Message_New(&envoy__type__v3__RateLimitStrategy_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_fallback_rate_limit(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_reuse_last_assignment(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior *msg, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* value) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 24), UPB_SIZE(-17, -13), 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_mutable_reuse_last_assignment(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_reuse_last_assignment(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_set_reuse_last_assignment(msg, sub);
  }
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.ExpiredAssignmentBehavior.ReuseLastAssignment */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_ExpiredAssignmentBehavior_ReuseLastAssignment* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__ExpiredAssignmentBehavior__ReuseLastAssignment_msg_init, options, arena, &ptr, len);
  return ptr;
}


/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.DenyResponseSettings */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__DenyResponseSettings_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_clear_http_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_type_v3_HttpStatus* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_http_status(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const struct envoy_type_v3_HttpStatus* default_val = NULL;
  const struct envoy_type_v3_HttpStatus* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__HttpStatus_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_has_http_status(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_clear_http_body(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct google_protobuf_BytesValue* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_http_body(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const struct google_protobuf_BytesValue* default_val = NULL;
  const struct google_protobuf_BytesValue* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__BytesValue_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_has_http_body(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_clear_grpc_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct google_rpc_Status* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_grpc_status(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const struct google_rpc_Status* default_val = NULL;
  const struct google_rpc_Status* ret;
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__rpc__Status_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_has_grpc_status(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_clear_response_headers_to_add(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_HeaderValueOption* const* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_response_headers_to_add(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, size_t* size) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  const upb_Array* arr = upb_Message_GetArray(UPB_UPCAST(msg), &field);
  if (arr) {
    if (size) *size = arr->UPB_PRIVATE(size);
    return (const struct envoy_config_core_v3_HeaderValueOption* const*)upb_Array_DataPtr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE const upb_Array* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_response_headers_to_add_upb_array(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, size_t* size) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  const upb_Array* arr = upb_Message_GetArray(UPB_UPCAST(msg), &field);
  if (size) {
    *size = arr ? arr->UPB_PRIVATE(size) : 0;
  }
  return arr;
}
UPB_INLINE upb_Array* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_response_headers_to_add_mutable_upb_array(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, size_t* size, upb_Arena* arena) {
  const upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(UPB_UPCAST(msg),
                                                       &field, arena);
  if (size) {
    *size = arr ? arr->UPB_PRIVATE(size) : 0;
  }
  return arr;
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_http_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings *msg, struct envoy_type_v3_HttpStatus* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__type__v3__HttpStatus_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_type_v3_HttpStatus* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_mutable_http_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, upb_Arena* arena) {
  struct envoy_type_v3_HttpStatus* sub = (struct envoy_type_v3_HttpStatus*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_http_status(msg);
  if (sub == NULL) {
    sub = (struct envoy_type_v3_HttpStatus*)_upb_Message_New(&envoy__type__v3__HttpStatus_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_http_status(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_http_body(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings *msg, struct google_protobuf_BytesValue* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__protobuf__BytesValue_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct google_protobuf_BytesValue* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_mutable_http_body(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, upb_Arena* arena) {
  struct google_protobuf_BytesValue* sub = (struct google_protobuf_BytesValue*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_http_body(msg);
  if (sub == NULL) {
    sub = (struct google_protobuf_BytesValue*)_upb_Message_New(&google__protobuf__BytesValue_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_http_body(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_grpc_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings *msg, struct google_rpc_Status* value) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&google__rpc__Status_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct google_rpc_Status* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_mutable_grpc_status(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, upb_Arena* arena) {
  struct google_rpc_Status* sub = (struct google_rpc_Status*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_grpc_status(msg);
  if (sub == NULL) {
    sub = (struct google_rpc_Status*)_upb_Message_New(&google__rpc__Status_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_set_grpc_status(msg, sub);
  }
  return sub;
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption** envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_mutable_response_headers_to_add(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, size_t* size) {
  upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetMutableArray(UPB_UPCAST(msg), &field);
  if (arr) {
    if (size) *size = arr->UPB_PRIVATE(size);
    return (struct envoy_config_core_v3_HeaderValueOption**)upb_Array_MutableDataPtr(arr);
  } else {
    if (size) *size = 0;
    return NULL;
  }
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption** envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_resize_response_headers_to_add(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, size_t size, upb_Arena* arena) {
  upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return (struct envoy_config_core_v3_HeaderValueOption**)upb_Message_ResizeArrayUninitialized(UPB_UPCAST(msg),
                                                   &field, size, arena);
}
UPB_INLINE struct envoy_config_core_v3_HeaderValueOption* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings_add_response_headers_to_add(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_DenyResponseSettings* msg, upb_Arena* arena) {
  upb_MiniTableField field = {4, UPB_SIZE(24, 40), 0, 3, 11, (int)kUpb_FieldMode_Array | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__HeaderValueOption_msg_init);
  upb_Array* arr = upb_Message_GetOrCreateMutableArray(
      UPB_UPCAST(msg), &field, arena);
  if (!arr || !UPB_PRIVATE(_upb_Array_ResizeUninitialized)(
                  arr, arr->UPB_PRIVATE(size) + 1, arena)) {
    return NULL;
  }
  struct envoy_config_core_v3_HeaderValueOption* sub = (struct envoy_config_core_v3_HeaderValueOption*)_upb_Message_New(&envoy__config__core__v3__HeaderValueOption_msg_init, arena);
  if (!arr || !sub) return NULL;
  UPB_PRIVATE(_upb_Array_Set)
  (arr, arr->UPB_PRIVATE(size) - 1, &sub, sizeof(sub));
  return sub;
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_clear_bucket_id_builder(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE size_t envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_size(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  const upb_Map* map = upb_Message_GetMap(UPB_UPCAST(msg), &field);
  return map ? _upb_Map_Size(map) : 0;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_get(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_StringView key, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder** val) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__BucketIdBuilderEntry_msg_init);
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init);
  const upb_Map* map = upb_Message_GetMap(UPB_UPCAST(msg), &field);
  if (!map) return false;
  return _upb_Map_Get(map, &key, 0, val, sizeof(*val));
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_next(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_StringView* key, const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder** val,
                           size_t* iter) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__BucketIdBuilderEntry_msg_init);
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init);
  const upb_Map* map = upb_Message_GetMap(UPB_UPCAST(msg), &field);
  if (!map) return false;
  upb_MessageValue k;
  upb_MessageValue v;
  if (!upb_Map_Next(map, &k, &v, iter)) return false;
  memcpy(key, &k, sizeof(*key));
  memcpy(val, &v, sizeof(*val));
  return true;
}
UPB_INLINE const upb_Map* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_upb_map(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__BucketIdBuilderEntry_msg_init);
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init);
  return upb_Message_GetMap(UPB_UPCAST(msg), &field);
}
UPB_INLINE upb_Map* _envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_mutable_upb_map(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_Arena* a) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__BucketIdBuilderEntry_msg_init);
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init);
  return _upb_Message_GetOrCreateMutableMap(UPB_UPCAST(msg), &field, 0, sizeof(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder*), a);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_clear(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Map* map = (upb_Map*)upb_Message_GetMap(UPB_UPCAST(msg), &field);
  if (!map) return;
  _upb_Map_Clear(map);
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_set(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_StringView key, envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* val, upb_Arena* a) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__BucketIdBuilderEntry_msg_init);
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init);
  upb_Map* map = _upb_Message_GetOrCreateMutableMap(UPB_UPCAST(msg),
                                                    &field, 0, sizeof(val), a);
  return _upb_Map_Insert(map, &key, 0, &val, sizeof(val), a) !=
         kUpb_MapInsertStatus_OutOfMemory;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_bucket_id_builder_delete(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder* msg, upb_StringView key) {
  const upb_MiniTableField field = {1, 8, 0, 0, 11, (int)kUpb_FieldMode_Map | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Map* map = (upb_Map*)upb_Message_GetMap(UPB_UPCAST(msg), &field);
  if (!map) return false;
  return _upb_Map_Delete(map, &key, 0, NULL);
}

/* envoy.extensions.filters.http.rate_limit_quota.v3.RateLimitQuotaBucketSettings.BucketIdBuilder.ValueBuilder */

UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder*)_upb_Message_New(&envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* ret = envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_serialize(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_serialize_ex(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, options, arena, &ptr, len);
  return ptr;
}
typedef enum {
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_string_value = 1,
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_custom_value = 2,
  envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_NOT_SET = 0
} envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_oneofcases;
UPB_INLINE envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_oneofcases envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_case(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  return (envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_value_specifier_oneofcases)upb_Message_WhichOneofFieldNumber(
      UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_clear_value_specifier(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_ClearOneof(UPB_UPCAST(msg), &envoy__extensions__filters__http__rate_0limit_0quota__v3__RateLimitQuotaBucketSettings__BucketIdBuilder__ValueBuilder_msg_init, &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_clear_string_value(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE upb_StringView envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_string_value(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_has_string_value(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_clear_custom_value(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_TypedExtensionConfig* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_custom_value(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const struct envoy_config_core_v3_TypedExtensionConfig* default_val = NULL;
  const struct envoy_config_core_v3_TypedExtensionConfig* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__TypedExtensionConfig_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_has_custom_value(const envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_set_string_value(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder *msg, upb_StringView value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), -9, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE void envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_set_custom_value(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder *msg, struct envoy_config_core_v3_TypedExtensionConfig* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 16), -9, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__TypedExtensionConfig_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_TypedExtensionConfig* envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_mutable_custom_value(envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_TypedExtensionConfig* sub = (struct envoy_config_core_v3_TypedExtensionConfig*)envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_custom_value(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_TypedExtensionConfig*)_upb_Message_New(&envoy__config__core__v3__TypedExtensionConfig_msg_init, arena);
    if (sub) envoy_extensions_filters_http_rate_limit_quota_v3_RateLimitQuotaBucketSettings_BucketIdBuilder_ValueBuilder_set_custom_value(msg, sub);
  }
  return sub;
}

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port/undef.inc"

#endif  /* ENVOY_EXTENSIONS_FILTERS_HTTP_RATE_LIMIT_QUOTA_V3_RATE_LIMIT_QUOTA_PROTO_UPB_H__UPB_H_ */
