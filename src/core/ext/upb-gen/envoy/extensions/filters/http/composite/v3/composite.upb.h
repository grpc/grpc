/* This file was generated by upb_generator from the input file:
 *
 *     envoy/extensions/filters/http/composite/v3/composite.proto
 *
 * Do not edit -- your changes will be discarded when the file is
 * regenerated.
 * NO CHECKED-IN PROTOBUF GENCODE */

#ifndef ENVOY_EXTENSIONS_FILTERS_HTTP_COMPOSITE_V3_COMPOSITE_PROTO_UPB_H__UPB_H_
#define ENVOY_EXTENSIONS_FILTERS_HTTP_COMPOSITE_V3_COMPOSITE_PROTO_UPB_H__UPB_H_

#include "upb/generated_code_support.h"

#include "envoy/extensions/filters/http/composite/v3/composite.upb_minitable.h"

#include "envoy/config/core/v3/base.upb_minitable.h"
#include "envoy/config/core/v3/config_source.upb_minitable.h"
#include "envoy/config/core/v3/extension.upb_minitable.h"
#include "udpa/annotations/migrate.upb_minitable.h"
#include "udpa/annotations/status.upb_minitable.h"
#include "validate/validate.upb_minitable.h"

// Must be last.
#include "upb/port/def.inc"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct envoy_extensions_filters_http_composite_v3_Composite { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_composite_v3_Composite;
typedef struct envoy_extensions_filters_http_composite_v3_DynamicConfig { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_composite_v3_DynamicConfig;
typedef struct envoy_extensions_filters_http_composite_v3_ExecuteFilterAction { upb_Message UPB_PRIVATE(base); } envoy_extensions_filters_http_composite_v3_ExecuteFilterAction;
struct envoy_config_core_v3_ExtensionConfigSource;
struct envoy_config_core_v3_RuntimeFractionalPercent;
struct envoy_config_core_v3_TypedExtensionConfig;



/* envoy.extensions.filters.http.composite.v3.Composite */

UPB_INLINE envoy_extensions_filters_http_composite_v3_Composite* envoy_extensions_filters_http_composite_v3_Composite_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_composite_v3_Composite*)_upb_Message_New(&envoy__extensions__filters__http__composite__v3__Composite_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_Composite* envoy_extensions_filters_http_composite_v3_Composite_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_Composite* ret = envoy_extensions_filters_http_composite_v3_Composite_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__Composite_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_Composite* envoy_extensions_filters_http_composite_v3_Composite_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_Composite* ret = envoy_extensions_filters_http_composite_v3_Composite_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__Composite_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_Composite_serialize(const envoy_extensions_filters_http_composite_v3_Composite* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__Composite_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_Composite_serialize_ex(const envoy_extensions_filters_http_composite_v3_Composite* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__Composite_msg_init, options, arena, &ptr, len);
  return ptr;
}


/* envoy.extensions.filters.http.composite.v3.DynamicConfig */

UPB_INLINE envoy_extensions_filters_http_composite_v3_DynamicConfig* envoy_extensions_filters_http_composite_v3_DynamicConfig_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_composite_v3_DynamicConfig*)_upb_Message_New(&envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_DynamicConfig* envoy_extensions_filters_http_composite_v3_DynamicConfig_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_DynamicConfig* ret = envoy_extensions_filters_http_composite_v3_DynamicConfig_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_DynamicConfig* envoy_extensions_filters_http_composite_v3_DynamicConfig_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_DynamicConfig* ret = envoy_extensions_filters_http_composite_v3_DynamicConfig_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_DynamicConfig_serialize(const envoy_extensions_filters_http_composite_v3_DynamicConfig* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_DynamicConfig_serialize_ex(const envoy_extensions_filters_http_composite_v3_DynamicConfig* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_DynamicConfig_clear_name(envoy_extensions_filters_http_composite_v3_DynamicConfig* msg) {
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE upb_StringView envoy_extensions_filters_http_composite_v3_DynamicConfig_name(const envoy_extensions_filters_http_composite_v3_DynamicConfig* msg) {
  upb_StringView default_val = upb_StringView_FromString("");
  upb_StringView ret;
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_DynamicConfig_clear_config_discovery(envoy_extensions_filters_http_composite_v3_DynamicConfig* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_ExtensionConfigSource* envoy_extensions_filters_http_composite_v3_DynamicConfig_config_discovery(const envoy_extensions_filters_http_composite_v3_DynamicConfig* msg) {
  const struct envoy_config_core_v3_ExtensionConfigSource* default_val = NULL;
  const struct envoy_config_core_v3_ExtensionConfigSource* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__ExtensionConfigSource_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_composite_v3_DynamicConfig_has_config_discovery(const envoy_extensions_filters_http_composite_v3_DynamicConfig* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_composite_v3_DynamicConfig_set_name(envoy_extensions_filters_http_composite_v3_DynamicConfig *msg, upb_StringView value) {
  const upb_MiniTableField field = {1, 16, 0, kUpb_NoSub, 9, (int)kUpb_FieldMode_Scalar | ((int)kUpb_FieldRep_StringView << kUpb_FieldRep_Shift)};
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_DynamicConfig_set_config_discovery(envoy_extensions_filters_http_composite_v3_DynamicConfig *msg, struct envoy_config_core_v3_ExtensionConfigSource* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(12, 32), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__ExtensionConfigSource_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_ExtensionConfigSource* envoy_extensions_filters_http_composite_v3_DynamicConfig_mutable_config_discovery(envoy_extensions_filters_http_composite_v3_DynamicConfig* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_ExtensionConfigSource* sub = (struct envoy_config_core_v3_ExtensionConfigSource*)envoy_extensions_filters_http_composite_v3_DynamicConfig_config_discovery(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_ExtensionConfigSource*)_upb_Message_New(&envoy__config__core__v3__ExtensionConfigSource_msg_init, arena);
    if (sub) envoy_extensions_filters_http_composite_v3_DynamicConfig_set_config_discovery(msg, sub);
  }
  return sub;
}

/* envoy.extensions.filters.http.composite.v3.ExecuteFilterAction */

UPB_INLINE envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_new(upb_Arena* arena) {
  return (envoy_extensions_filters_http_composite_v3_ExecuteFilterAction*)_upb_Message_New(&envoy__extensions__filters__http__composite__v3__ExecuteFilterAction_msg_init, arena);
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_parse(const char* buf, size_t size, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* ret = envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__ExecuteFilterAction_msg_init, NULL, 0, arena) !=
      kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_parse_ex(const char* buf, size_t size,
                           const upb_ExtensionRegistry* extreg,
                           int options, upb_Arena* arena) {
  envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* ret = envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_new(arena);
  if (!ret) return NULL;
  if (upb_Decode(buf, size, UPB_UPCAST(ret), &envoy__extensions__filters__http__composite__v3__ExecuteFilterAction_msg_init, extreg, options,
                 arena) != kUpb_DecodeStatus_Ok) {
    return NULL;
  }
  return ret;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_serialize(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg, upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__ExecuteFilterAction_msg_init, 0, arena, &ptr, len);
  return ptr;
}
UPB_INLINE char* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_serialize_ex(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg, int options,
                                 upb_Arena* arena, size_t* len) {
  char* ptr;
  (void)upb_Encode(UPB_UPCAST(msg), &envoy__extensions__filters__http__composite__v3__ExecuteFilterAction_msg_init, options, arena, &ptr, len);
  return ptr;
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_clear_typed_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_TypedExtensionConfig* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_typed_config(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const struct envoy_config_core_v3_TypedExtensionConfig* default_val = NULL;
  const struct envoy_config_core_v3_TypedExtensionConfig* ret;
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__TypedExtensionConfig_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_has_typed_config(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_clear_dynamic_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const envoy_extensions_filters_http_composite_v3_DynamicConfig* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_dynamic_config(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const envoy_extensions_filters_http_composite_v3_DynamicConfig* default_val = NULL;
  const envoy_extensions_filters_http_composite_v3_DynamicConfig* ret;
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_has_dynamic_config(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_clear_sample_percent(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  upb_Message_ClearBaseField(UPB_UPCAST(msg), &field);
}
UPB_INLINE const struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_sample_percent(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const struct envoy_config_core_v3_RuntimeFractionalPercent* default_val = NULL;
  const struct envoy_config_core_v3_RuntimeFractionalPercent* ret;
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  _upb_Message_GetNonExtensionField(UPB_UPCAST(msg), &field,
                                    &default_val, &ret);
  return ret;
}
UPB_INLINE bool envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_has_sample_percent(const envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  return upb_Message_HasBaseField(UPB_UPCAST(msg), &field);
}

UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_typed_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction *msg, struct envoy_config_core_v3_TypedExtensionConfig* value) {
  const upb_MiniTableField field = {1, UPB_SIZE(12, 16), 64, 0, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__TypedExtensionConfig_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_TypedExtensionConfig* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_mutable_typed_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_TypedExtensionConfig* sub = (struct envoy_config_core_v3_TypedExtensionConfig*)envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_typed_config(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_TypedExtensionConfig*)_upb_Message_New(&envoy__config__core__v3__TypedExtensionConfig_msg_init, arena);
    if (sub) envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_typed_config(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_dynamic_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction *msg, envoy_extensions_filters_http_composite_v3_DynamicConfig* value) {
  const upb_MiniTableField field = {2, UPB_SIZE(16, 24), 65, 1, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_extensions_filters_http_composite_v3_DynamicConfig* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_mutable_dynamic_config(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg, upb_Arena* arena) {
  struct envoy_extensions_filters_http_composite_v3_DynamicConfig* sub = (struct envoy_extensions_filters_http_composite_v3_DynamicConfig*)envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_dynamic_config(msg);
  if (sub == NULL) {
    sub = (struct envoy_extensions_filters_http_composite_v3_DynamicConfig*)_upb_Message_New(&envoy__extensions__filters__http__composite__v3__DynamicConfig_msg_init, arena);
    if (sub) envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_dynamic_config(msg, sub);
  }
  return sub;
}
UPB_INLINE void envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_sample_percent(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction *msg, struct envoy_config_core_v3_RuntimeFractionalPercent* value) {
  const upb_MiniTableField field = {3, UPB_SIZE(20, 32), 66, 2, 11, (int)kUpb_FieldMode_Scalar | ((int)UPB_SIZE(kUpb_FieldRep_4Byte, kUpb_FieldRep_8Byte) << kUpb_FieldRep_Shift)};
  UPB_PRIVATE(_upb_MiniTable_StrongReference)(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init);
  upb_Message_SetBaseField((upb_Message *)msg, &field, &value);
}
UPB_INLINE struct envoy_config_core_v3_RuntimeFractionalPercent* envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_mutable_sample_percent(envoy_extensions_filters_http_composite_v3_ExecuteFilterAction* msg, upb_Arena* arena) {
  struct envoy_config_core_v3_RuntimeFractionalPercent* sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_sample_percent(msg);
  if (sub == NULL) {
    sub = (struct envoy_config_core_v3_RuntimeFractionalPercent*)_upb_Message_New(&envoy__config__core__v3__RuntimeFractionalPercent_msg_init, arena);
    if (sub) envoy_extensions_filters_http_composite_v3_ExecuteFilterAction_set_sample_percent(msg, sub);
  }
  return sub;
}

#ifdef __cplusplus
}  /* extern "C" */
#endif

#include "upb/port/undef.inc"

#endif  /* ENVOY_EXTENSIONS_FILTERS_HTTP_COMPOSITE_V3_COMPOSITE_PROTO_UPB_H__UPB_H_ */
