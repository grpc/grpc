<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/messages.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Configuration for a particular response.
 * </pre>
 *
 * Protobuf type <code>grpc.testing.ResponseParameters</code>
 */
class ResponseParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1;</code>
     */
    private $size = 0;
    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2;</code>
     */
    private $interval_us = 0;
    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3;</code>
     */
    private $compressed = null;

    public function __construct() {
        \GPBMetadata\Src\Proto\Grpc\Testing\Messages::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1;</code>
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * <pre>
     * Desired payload sizes in responses from the server.
     * </pre>
     *
     * <code>int32 size = 1;</code>
     */
    public function setSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->size = $var;
    }

    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2;</code>
     */
    public function getIntervalUs()
    {
        return $this->interval_us;
    }

    /**
     * <pre>
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     * </pre>
     *
     * <code>int32 interval_us = 2;</code>
     */
    public function setIntervalUs($var)
    {
        GPBUtil::checkInt32($var);
        $this->interval_us = $var;
    }

    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3;</code>
     */
    public function getCompressed()
    {
        return $this->compressed;
    }

    /**
     * <pre>
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     * </pre>
     *
     * <code>.grpc.testing.BoolValue compressed = 3;</code>
     */
    public function setCompressed(&$var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\BoolValue::class);
        $this->compressed = $var;
    }

}

