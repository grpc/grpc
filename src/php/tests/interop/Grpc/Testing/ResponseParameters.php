<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: src/proto/grpc/testing/messages.proto

namespace Grpc\Testing;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Configuration for a particular response.
 *
 * Generated from protobuf message <code>grpc.testing.ResponseParameters</code>
 */
class ResponseParameters extends \Google\Protobuf\Internal\Message
{
    /**
     * Desired payload sizes in responses from the server.
     *
     * Generated from protobuf field <code>int32 size = 1;</code>
     */
    protected $size = 0;
    /**
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     *
     * Generated from protobuf field <code>int32 interval_us = 2;</code>
     */
    protected $interval_us = 0;
    /**
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     *
     * Generated from protobuf field <code>.grpc.testing.BoolValue compressed = 3;</code>
     */
    protected $compressed = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $size
     *           Desired payload sizes in responses from the server.
     *     @type int $interval_us
     *           Desired interval between consecutive responses in the response stream in
     *           microseconds.
     *     @type \Grpc\Testing\BoolValue $compressed
     *           Whether to request the server to compress the response. This field is
     *           "nullable" in order to interoperate seamlessly with clients not able to
     *           implement the full compression tests by introspecting the call to verify
     *           the response's compression status.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Src\Proto\Grpc\Testing\Messages::initOnce();
        parent::__construct($data);
    }

    /**
     * Desired payload sizes in responses from the server.
     *
     * Generated from protobuf field <code>int32 size = 1;</code>
     * @return int
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Desired payload sizes in responses from the server.
     *
     * Generated from protobuf field <code>int32 size = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     *
     * Generated from protobuf field <code>int32 interval_us = 2;</code>
     * @return int
     */
    public function getIntervalUs()
    {
        return $this->interval_us;
    }

    /**
     * Desired interval between consecutive responses in the response stream in
     * microseconds.
     *
     * Generated from protobuf field <code>int32 interval_us = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setIntervalUs($var)
    {
        GPBUtil::checkInt32($var);
        $this->interval_us = $var;

        return $this;
    }

    /**
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     *
     * Generated from protobuf field <code>.grpc.testing.BoolValue compressed = 3;</code>
     * @return \Grpc\Testing\BoolValue|null
     */
    public function getCompressed()
    {
        return $this->compressed;
    }

    public function hasCompressed()
    {
        return isset($this->compressed);
    }

    public function clearCompressed()
    {
        unset($this->compressed);
    }

    /**
     * Whether to request the server to compress the response. This field is
     * "nullable" in order to interoperate seamlessly with clients not able to
     * implement the full compression tests by introspecting the call to verify
     * the response's compression status.
     *
     * Generated from protobuf field <code>.grpc.testing.BoolValue compressed = 3;</code>
     * @param \Grpc\Testing\BoolValue $var
     * @return $this
     */
    public function setCompressed($var)
    {
        GPBUtil::checkMessage($var, \Grpc\Testing\BoolValue::class);
        $this->compressed = $var;

        return $this;
    }

}

