// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reflection.proto

#ifndef PROTOBUF_reflection_2eproto__INCLUDED
#define PROTOBUF_reflection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace grpc {
namespace reflection {
namespace v1alpha {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_reflection_2eproto();
void protobuf_AssignDesc_reflection_2eproto();
void protobuf_ShutdownFile_reflection_2eproto();

class EmptyRequest;
class ExtensionNumberResponse;
class ExtensionRequest;
class FileDescriptorProtoResponse;
class FileNameRequest;
class ListServiceResponse;
class SymbolRequest;
class TypeRequest;

// ===================================================================

class EmptyRequest : public ::google::protobuf::Message {
 public:
  EmptyRequest();
  virtual ~EmptyRequest();

  EmptyRequest(const EmptyRequest& from);

  inline EmptyRequest& operator=(const EmptyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmptyRequest& default_instance();

  void Swap(EmptyRequest* other);

  // implements Message ----------------------------------------------

  inline EmptyRequest* New() const { return New(NULL); }

  EmptyRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EmptyRequest& from);
  void MergeFrom(const EmptyRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EmptyRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.EmptyRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static EmptyRequest* default_instance_;
};
// -------------------------------------------------------------------

class FileNameRequest : public ::google::protobuf::Message {
 public:
  FileNameRequest();
  virtual ~FileNameRequest();

  FileNameRequest(const FileNameRequest& from);

  inline FileNameRequest& operator=(const FileNameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileNameRequest& default_instance();

  void Swap(FileNameRequest* other);

  // implements Message ----------------------------------------------

  inline FileNameRequest* New() const { return New(NULL); }

  FileNameRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileNameRequest& from);
  void MergeFrom(const FileNameRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileNameRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.FileNameRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static FileNameRequest* default_instance_;
};
// -------------------------------------------------------------------

class SymbolRequest : public ::google::protobuf::Message {
 public:
  SymbolRequest();
  virtual ~SymbolRequest();

  SymbolRequest(const SymbolRequest& from);

  inline SymbolRequest& operator=(const SymbolRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SymbolRequest& default_instance();

  void Swap(SymbolRequest* other);

  // implements Message ----------------------------------------------

  inline SymbolRequest* New() const { return New(NULL); }

  SymbolRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SymbolRequest& from);
  void MergeFrom(const SymbolRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SymbolRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string symbol = 1;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.SymbolRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static SymbolRequest* default_instance_;
};
// -------------------------------------------------------------------

class ExtensionRequest : public ::google::protobuf::Message {
 public:
  ExtensionRequest();
  virtual ~ExtensionRequest();

  ExtensionRequest(const ExtensionRequest& from);

  inline ExtensionRequest& operator=(const ExtensionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtensionRequest& default_instance();

  void Swap(ExtensionRequest* other);

  // implements Message ----------------------------------------------

  inline ExtensionRequest* New() const { return New(NULL); }

  ExtensionRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtensionRequest& from);
  void MergeFrom(const ExtensionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtensionRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string containing_type = 1;
  void clear_containing_type();
  static const int kContainingTypeFieldNumber = 1;
  const ::std::string& containing_type() const;
  void set_containing_type(const ::std::string& value);
  void set_containing_type(const char* value);
  void set_containing_type(const char* value, size_t size);
  ::std::string* mutable_containing_type();
  ::std::string* release_containing_type();
  void set_allocated_containing_type(::std::string* containing_type);

  // optional int32 extension_number = 2;
  void clear_extension_number();
  static const int kExtensionNumberFieldNumber = 2;
  ::google::protobuf::int32 extension_number() const;
  void set_extension_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.ExtensionRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr containing_type_;
  ::google::protobuf::int32 extension_number_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static ExtensionRequest* default_instance_;
};
// -------------------------------------------------------------------

class TypeRequest : public ::google::protobuf::Message {
 public:
  TypeRequest();
  virtual ~TypeRequest();

  TypeRequest(const TypeRequest& from);

  inline TypeRequest& operator=(const TypeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeRequest& default_instance();

  void Swap(TypeRequest* other);

  // implements Message ----------------------------------------------

  inline TypeRequest* New() const { return New(NULL); }

  TypeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeRequest& from);
  void MergeFrom(const TypeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeRequest* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.TypeRequest)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static TypeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ListServiceResponse : public ::google::protobuf::Message {
 public:
  ListServiceResponse();
  virtual ~ListServiceResponse();

  ListServiceResponse(const ListServiceResponse& from);

  inline ListServiceResponse& operator=(const ListServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListServiceResponse& default_instance();

  void Swap(ListServiceResponse* other);

  // implements Message ----------------------------------------------

  inline ListServiceResponse* New() const { return New(NULL); }

  ListServiceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ListServiceResponse& from);
  void MergeFrom(const ListServiceResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ListServiceResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string services = 1;
  int services_size() const;
  void clear_services();
  static const int kServicesFieldNumber = 1;
  const ::std::string& services(int index) const;
  ::std::string* mutable_services(int index);
  void set_services(int index, const ::std::string& value);
  void set_services(int index, const char* value);
  void set_services(int index, const char* value, size_t size);
  ::std::string* add_services();
  void add_services(const ::std::string& value);
  void add_services(const char* value);
  void add_services(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& services() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_services();

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.ListServiceResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::std::string> services_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static ListServiceResponse* default_instance_;
};
// -------------------------------------------------------------------

class FileDescriptorProtoResponse : public ::google::protobuf::Message {
 public:
  FileDescriptorProtoResponse();
  virtual ~FileDescriptorProtoResponse();

  FileDescriptorProtoResponse(const FileDescriptorProtoResponse& from);

  inline FileDescriptorProtoResponse& operator=(
      const FileDescriptorProtoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDescriptorProtoResponse& default_instance();

  void Swap(FileDescriptorProtoResponse* other);

  // implements Message ----------------------------------------------

  inline FileDescriptorProtoResponse* New() const { return New(NULL); }

  FileDescriptorProtoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileDescriptorProtoResponse& from);
  void MergeFrom(const FileDescriptorProtoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileDescriptorProtoResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes file_descriptor_proto = 1;
  void clear_file_descriptor_proto();
  static const int kFileDescriptorProtoFieldNumber = 1;
  const ::std::string& file_descriptor_proto() const;
  void set_file_descriptor_proto(const ::std::string& value);
  void set_file_descriptor_proto(const char* value);
  void set_file_descriptor_proto(const void* value, size_t size);
  ::std::string* mutable_file_descriptor_proto();
  ::std::string* release_file_descriptor_proto();
  void set_allocated_file_descriptor_proto(
      ::std::string* file_descriptor_proto);

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.FileDescriptorProtoResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr file_descriptor_proto_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static FileDescriptorProtoResponse* default_instance_;
};
// -------------------------------------------------------------------

class ExtensionNumberResponse : public ::google::protobuf::Message {
 public:
  ExtensionNumberResponse();
  virtual ~ExtensionNumberResponse();

  ExtensionNumberResponse(const ExtensionNumberResponse& from);

  inline ExtensionNumberResponse& operator=(
      const ExtensionNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtensionNumberResponse& default_instance();

  void Swap(ExtensionNumberResponse* other);

  // implements Message ----------------------------------------------

  inline ExtensionNumberResponse* New() const { return New(NULL); }

  ExtensionNumberResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtensionNumberResponse& from);
  void MergeFrom(const ExtensionNumberResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }

 private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtensionNumberResponse* other);

 private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }

 public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 extension_number = 1;
  int extension_number_size() const;
  void clear_extension_number();
  static const int kExtensionNumberFieldNumber = 1;
  ::google::protobuf::int32 extension_number(int index) const;
  void set_extension_number(int index, ::google::protobuf::int32 value);
  void add_extension_number(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32>&
  extension_number() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32>*
  mutable_extension_number();

  // @@protoc_insertion_point(class_scope:grpc.reflection.v1alpha.ExtensionNumberResponse)
 private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32>
      extension_number_;
  mutable int _extension_number_cached_byte_size_;
  mutable int _cached_size_;
  friend void protobuf_AddDesc_reflection_2eproto();
  friend void protobuf_AssignDesc_reflection_2eproto();
  friend void protobuf_ShutdownFile_reflection_2eproto();

  void InitAsDefaultInstance();
  static ExtensionNumberResponse* default_instance_;
};
// ===================================================================

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EmptyRequest

// -------------------------------------------------------------------

// FileNameRequest

// optional string filename = 1;
inline void FileNameRequest::clear_filename() {
  filename_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileNameRequest::filename() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.FileNameRequest.filename)
  return filename_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileNameRequest::set_filename(const ::std::string& value) {
  filename_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.FileNameRequest.filename)
}
inline void FileNameRequest::set_filename(const char* value) {
  filename_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.FileNameRequest.filename)
}
inline void FileNameRequest::set_filename(const char* value, size_t size) {
  filename_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.FileNameRequest.filename)
}
inline ::std::string* FileNameRequest::mutable_filename() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.FileNameRequest.filename)
  return filename_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileNameRequest::release_filename() {
  return filename_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileNameRequest::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
  } else {
  }
  filename_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.FileNameRequest.filename)
}

// -------------------------------------------------------------------

// SymbolRequest

// optional string symbol = 1;
inline void SymbolRequest::clear_symbol() {
  symbol_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SymbolRequest::symbol() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.SymbolRequest.symbol)
  return symbol_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolRequest::set_symbol(const ::std::string& value) {
  symbol_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.SymbolRequest.symbol)
}
inline void SymbolRequest::set_symbol(const char* value) {
  symbol_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.SymbolRequest.symbol)
}
inline void SymbolRequest::set_symbol(const char* value, size_t size) {
  symbol_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.SymbolRequest.symbol)
}
inline ::std::string* SymbolRequest::mutable_symbol() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.SymbolRequest.symbol)
  return symbol_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SymbolRequest::release_symbol() {
  return symbol_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SymbolRequest::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
  } else {
  }
  symbol_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.SymbolRequest.symbol)
}

// -------------------------------------------------------------------

// ExtensionRequest

// optional string containing_type = 1;
inline void ExtensionRequest::clear_containing_type() {
  containing_type_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExtensionRequest::containing_type() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
  return containing_type_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionRequest::set_containing_type(const ::std::string& value) {
  containing_type_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
}
inline void ExtensionRequest::set_containing_type(const char* value) {
  containing_type_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
}
inline void ExtensionRequest::set_containing_type(const char* value,
                                                  size_t size) {
  containing_type_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
}
inline ::std::string* ExtensionRequest::mutable_containing_type() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
  return containing_type_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtensionRequest::release_containing_type() {
  return containing_type_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtensionRequest::set_allocated_containing_type(
    ::std::string* containing_type) {
  if (containing_type != NULL) {
  } else {
  }
  containing_type_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      containing_type);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.ExtensionRequest.containing_type)
}

// optional int32 extension_number = 2;
inline void ExtensionRequest::clear_extension_number() {
  extension_number_ = 0;
}
inline ::google::protobuf::int32 ExtensionRequest::extension_number() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.ExtensionRequest.extension_number)
  return extension_number_;
}
inline void ExtensionRequest::set_extension_number(
    ::google::protobuf::int32 value) {
  extension_number_ = value;
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.ExtensionRequest.extension_number)
}

// -------------------------------------------------------------------

// TypeRequest

// optional string type = 1;
inline void TypeRequest::clear_type() {
  type_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TypeRequest::type() const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.TypeRequest.type)
  return type_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TypeRequest::set_type(const ::std::string& value) {
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.TypeRequest.type)
}
inline void TypeRequest::set_type(const char* value) {
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.TypeRequest.type)
}
inline void TypeRequest::set_type(const char* value, size_t size) {
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                   ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.TypeRequest.type)
}
inline ::std::string* TypeRequest::mutable_type() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.TypeRequest.type)
  return type_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypeRequest::release_type() {
  return type_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TypeRequest::set_allocated_type(::std::string* type) {
  if (type != NULL) {
  } else {
  }
  type_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.TypeRequest.type)
}

// -------------------------------------------------------------------

// ListServiceResponse

// repeated string services = 1;
inline int ListServiceResponse::services_size() const {
  return services_.size();
}
inline void ListServiceResponse::clear_services() { services_.Clear(); }
inline const ::std::string& ListServiceResponse::services(int index) const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.ListServiceResponse.services)
  return services_.Get(index);
}
inline ::std::string* ListServiceResponse::mutable_services(int index) {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.ListServiceResponse.services)
  return services_.Mutable(index);
}
inline void ListServiceResponse::set_services(int index,
                                              const ::std::string& value) {
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.ListServiceResponse.services)
  services_.Mutable(index)->assign(value);
}
inline void ListServiceResponse::set_services(int index, const char* value) {
  services_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.ListServiceResponse.services)
}
inline void ListServiceResponse::set_services(int index, const char* value,
                                              size_t size) {
  services_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.ListServiceResponse.services)
}
inline ::std::string* ListServiceResponse::add_services() {
  return services_.Add();
}
inline void ListServiceResponse::add_services(const ::std::string& value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpc.reflection.v1alpha.ListServiceResponse.services)
}
inline void ListServiceResponse::add_services(const char* value) {
  services_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpc.reflection.v1alpha.ListServiceResponse.services)
}
inline void ListServiceResponse::add_services(const char* value, size_t size) {
  services_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpc.reflection.v1alpha.ListServiceResponse.services)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListServiceResponse::services() const {
  // @@protoc_insertion_point(field_list:grpc.reflection.v1alpha.ListServiceResponse.services)
  return services_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListServiceResponse::mutable_services() {
  // @@protoc_insertion_point(field_mutable_list:grpc.reflection.v1alpha.ListServiceResponse.services)
  return &services_;
}

// -------------------------------------------------------------------

// FileDescriptorProtoResponse

// optional bytes file_descriptor_proto = 1;
inline void FileDescriptorProtoResponse::clear_file_descriptor_proto() {
  file_descriptor_proto_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDescriptorProtoResponse::file_descriptor_proto()
    const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
  return file_descriptor_proto_.GetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDescriptorProtoResponse::set_file_descriptor_proto(
    const ::std::string& value) {
  file_descriptor_proto_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
}
inline void FileDescriptorProtoResponse::set_file_descriptor_proto(
    const char* value) {
  file_descriptor_proto_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
}
inline void FileDescriptorProtoResponse::set_file_descriptor_proto(
    const void* value, size_t size) {
  file_descriptor_proto_.SetNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
}
inline ::std::string*
FileDescriptorProtoResponse::mutable_file_descriptor_proto() {
  // @@protoc_insertion_point(field_mutable:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
  return file_descriptor_proto_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string*
FileDescriptorProtoResponse::release_file_descriptor_proto() {
  return file_descriptor_proto_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDescriptorProtoResponse::set_allocated_file_descriptor_proto(
    ::std::string* file_descriptor_proto) {
  if (file_descriptor_proto != NULL) {
  } else {
  }
  file_descriptor_proto_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      file_descriptor_proto);
  // @@protoc_insertion_point(field_set_allocated:grpc.reflection.v1alpha.FileDescriptorProtoResponse.file_descriptor_proto)
}

// -------------------------------------------------------------------

// ExtensionNumberResponse

// repeated int32 extension_number = 1;
inline int ExtensionNumberResponse::extension_number_size() const {
  return extension_number_.size();
}
inline void ExtensionNumberResponse::clear_extension_number() {
  extension_number_.Clear();
}
inline ::google::protobuf::int32 ExtensionNumberResponse::extension_number(
    int index) const {
  // @@protoc_insertion_point(field_get:grpc.reflection.v1alpha.ExtensionNumberResponse.extension_number)
  return extension_number_.Get(index);
}
inline void ExtensionNumberResponse::set_extension_number(
    int index, ::google::protobuf::int32 value) {
  extension_number_.Set(index, value);
  // @@protoc_insertion_point(field_set:grpc.reflection.v1alpha.ExtensionNumberResponse.extension_number)
}
inline void ExtensionNumberResponse::add_extension_number(
    ::google::protobuf::int32 value) {
  extension_number_.Add(value);
  // @@protoc_insertion_point(field_add:grpc.reflection.v1alpha.ExtensionNumberResponse.extension_number)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32>&
ExtensionNumberResponse::extension_number() const {
  // @@protoc_insertion_point(field_list:grpc.reflection.v1alpha.ExtensionNumberResponse.extension_number)
  return extension_number_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32>*
ExtensionNumberResponse::mutable_extension_number() {
  // @@protoc_insertion_point(field_mutable_list:grpc.reflection.v1alpha.ExtensionNumberResponse.extension_number)
  return &extension_number_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha
}  // namespace reflection
}  // namespace grpc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_reflection_2eproto__INCLUDED
