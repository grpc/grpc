type: com.google.api.codegen.ConfigProto
config_schema_version: 1.0.0
# The settings of generated code in a specific language.
language_settings:
  java:
    package_name: com.google.cloud.dataproc.v1beta2
  python:
    package_name: google.cloud.dataproc_v1beta2.gapic
  go:
    package_name: cloud.google.com/go/dataproc/apiv1beta2
  csharp:
    package_name: Google.Cloud.Dataproc.V1Beta2
  ruby:
    package_name: Google::Cloud::Dataproc::V1beta2
  php:
    package_name: Google\Cloud\Dataproc\V1beta2
  nodejs:
    package_name: dataproc.v1beta2
    domain_layer_location: google-cloud
# A list of API interface configurations.
interfaces:
# The fully qualified name of the API interface.
- name: google.cloud.dataproc.v1beta2.AutoscalingPolicyService
  # A list of resource collection configurations.
  # Consists of a name_pattern and an entity_name.
  # The name_pattern is a pattern to describe the names of the resources of this
  # collection, using the platform's conventions for URI patterns. A generator
  # may use this to generate methods to compose and decompose such names. The
  # pattern should use named placeholders as in `shelves/{shelf}/books/{book}`;
  # those will be taken as hints for the parameter names of the generated
  # methods. If empty, no name methods are generated.
  # The entity_name is the name to be used as a basis for generated methods and
  # classes.
  collections:
  - name_pattern: projects/{project}/regions/{region}
    entity_name: region
  - name_pattern: projects/{project}/regions/{region}/autoscalingPolicies/{autoscaling_policy}
    entity_name: autoscaling_policy
  # Definition for retryable codes.
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - DEADLINE_EXCEEDED
    - UNAVAILABLE
  - name: non_idempotent
    retry_codes: []
  # Definition for retry/backoff parameters.
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 20000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 20000
    total_timeout_millis: 600000
  # A list of method configurations.
  # Common properties:
  #
  #   name - The simple name of the method.
  #
  #   flattening - Specifies the configuration for parameter flattening.
  #   Describes the parameter groups for which a generator should produce method
  #   overloads which allow a client to directly pass request message fields as
  #   method parameters. This information may or may not be used, depending on
  #   the target language.
  #   Consists of groups, which each represent a list of parameters to be
  #   flattened. Each parameter listed must be a field of the request message.
  #
  #   required_fields - Fields that are always required for a request to be
  #   valid.
  #
  #   page_streaming - Specifies the configuration for paging.
  #   Describes information for generating a method which transforms a paging
  #   list RPC into a stream of resources.
  #   Consists of a request and a response.
  #   The request specifies request information of the list method. It defines
  #   which fields match the paging pattern in the request. The request consists
  #   of a page_size_field and a token_field. The page_size_field is the name of
  #   the optional field specifying the maximum number of elements to be
  #   returned in the response. The token_field is the name of the field in the
  #   request containing the page token.
  #   The response specifies response information of the list method. It defines
  #   which fields match the paging pattern in the response. The response
  #   consists of a token_field and a resources_field. The token_field is the
  #   name of the field in the response containing the next page token. The
  #   resources_field is the name of the field in the response containing the
  #   list of resources belonging to the page.
  #
  #   retry_codes_name - Specifies the configuration for retryable codes. The
  #   name must be defined in interfaces.retry_codes_def.
  #
  #   retry_params_name - Specifies the configuration for retry/backoff
  #   parameters. The name must be defined in interfaces.retry_params_def.
  #
  #   field_name_patterns - Maps the field name of the request type to
  #   entity_name of interfaces.collections.
  #   Specifies the string pattern that the field must follow.
  #
  #   timeout_millis - Specifies the default timeout for a non-retrying call. If
  #   the call is retrying, refer to retry_params_name instead.
  methods:
  - name: CreateAutoscalingPolicy
    flattening:
      groups:
      - parameters:
        - parent
        - policy
    required_fields:
    - parent
    - policy
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      parent: region
    timeout_millis: 60000
  - name: UpdateAutoscalingPolicy
    flattening:
      groups:
      - parameters:
        - policy
    required_fields:
    - policy
    retry_codes_name: idempotent
    retry_params_name: default
    field_name_patterns:
      policy.name: autoscaling_policy
    timeout_millis: 60000
  - name: GetAutoscalingPolicy
    flattening:
      groups:
      - parameters:
        - name
    required_fields:
    - name
    retry_codes_name: idempotent
    retry_params_name: default
    field_name_patterns:
      name: autoscaling_policy
    timeout_millis: 60000
  - name: ListAutoscalingPolicies
    flattening:
      groups:
      - parameters:
        - parent
    required_fields:
    - parent
    page_streaming:
      request:
        page_size_field: page_size
        token_field: page_token
      response:
        token_field: next_page_token
        resources_field: policies
    retry_codes_name: idempotent
    retry_params_name: default
    field_name_patterns:
      parent: region
    timeout_millis: 60000
  - name: DeleteAutoscalingPolicy
    flattening:
      groups:
      - parameters:
        - name
    required_fields:
    - name
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      name: autoscaling_policy
    timeout_millis: 60000
# The fully qualified name of the API interface.
- name: google.cloud.dataproc.v1beta2.ClusterController
  # A list of resource collection configurations.
  # Consists of a name_pattern and an entity_name.
  # The name_pattern is a pattern to describe the names of the resources of this
  # collection, using the platform's conventions for URI patterns. A generator
  # may use this to generate methods to compose and decompose such names. The
  # pattern should use named placeholders as in `shelves/{shelf}/books/{book}`;
  # those will be taken as hints for the parameter names of the generated
  # methods. If empty, no name methods are generated.
  # The entity_name is the name to be used as a basis for generated methods and
  # classes.
  collections: []
  # Definition for smoke test.
  smoke_test:
    method: ListClusters
    init_fields:
    - project_id=$PROJECT_ID
    - region="global"
  # Definition for retryable codes.
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - INTERNAL
    - DEADLINE_EXCEEDED
    - UNAVAILABLE
  - name: non_idempotent
    retry_codes:
    - UNAVAILABLE
  # Definition for retry/backoff parameters.
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 10000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 10000
    total_timeout_millis: 300000
  # A list of method configurations.
  # Common properties:
  #
  #   name - The simple name of the method.
  #
  #   flattening - Specifies the configuration for parameter flattening.
  #   Describes the parameter groups for which a generator should produce method
  #   overloads which allow a client to directly pass request message fields as
  #   method parameters. This information may or may not be used, depending on
  #   the target language.
  #   Consists of groups, which each represent a list of parameters to be
  #   flattened. Each parameter listed must be a field of the request message.
  #
  #   required_fields - Fields that are always required for a request to be
  #   valid.
  #
  #   page_streaming - Specifies the configuration for paging.
  #   Describes information for generating a method which transforms a paging
  #   list RPC into a stream of resources.
  #   Consists of a request and a response.
  #   The request specifies request information of the list method. It defines
  #   which fields match the paging pattern in the request. The request consists
  #   of a page_size_field and a token_field. The page_size_field is the name of
  #   the optional field specifying the maximum number of elements to be
  #   returned in the response. The token_field is the name of the field in the
  #   request containing the page token.
  #   The response specifies response information of the list method. It defines
  #   which fields match the paging pattern in the response. The response
  #   consists of a token_field and a resources_field. The token_field is the
  #   name of the field in the response containing the next page token. The
  #   resources_field is the name of the field in the response containing the
  #   list of resources belonging to the page.
  #
  #   retry_codes_name - Specifies the configuration for retryable codes. The
  #   name must be defined in interfaces.retry_codes_def.
  #
  #   retry_params_name - Specifies the configuration for retry/backoff
  #   parameters. The name must be defined in interfaces.retry_params_def.
  #
  #   field_name_patterns - Maps the field name of the request type to
  #   entity_name of interfaces.collections.
  #   Specifies the string pattern that the field must follow.
  #
  #   timeout_millis - Specifies the default timeout for a non-retrying call. If
  #   the call is retrying, refer to retry_params_name instead.
  methods:
  - name: CreateCluster
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - cluster
    required_fields:
    - project_id
    - region
    - cluster
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
    long_running:
      return_type: google.cloud.dataproc.v1beta2.Cluster
      metadata_type: google.cloud.dataproc.v1beta2.ClusterOperationMetadata
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 900000
  - name: UpdateCluster
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - cluster_name
        - cluster
        - update_mask
    required_fields:
    - project_id
    - region
    - cluster_name
    - cluster
    - update_mask
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
    long_running:
      return_type: google.cloud.dataproc.v1beta2.Cluster
      metadata_type: google.cloud.dataproc.v1beta2.ClusterOperationMetadata
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 900000
  - name: DeleteCluster
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - cluster_name
    required_fields:
    - project_id
    - region
    - cluster_name
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
    long_running:
      return_type: google.protobuf.Empty
      metadata_type: google.cloud.dataproc.v1beta2.ClusterOperationMetadata
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 900000
  - name: GetCluster
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - cluster_name
    required_fields:
    - project_id
    - region
    - cluster_name
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 60000
  - name: ListClusters
    flattening:
      groups:
      - parameters:
        - project_id
        - region
      - parameters:
        - project_id
        - region
        - filter
    required_fields:
    - project_id
    - region
    page_streaming:
      request:
        page_size_field: page_size
        token_field: page_token
      response:
        token_field: next_page_token
        resources_field: clusters
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 60000
  - name: DiagnoseCluster
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - cluster_name
    required_fields:
    - project_id
    - region
    - cluster_name
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 60000
    long_running:
      return_type: google.protobuf.Empty
      metadata_type: google.cloud.dataproc.v1beta2.DiagnoseClusterResults
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 30000
  # The fully qualified name of the API interface.
- name: google.cloud.dataproc.v1beta2.JobController
  # A list of resource collection configurations.
  # Consists of a name_pattern and an entity_name.
  # The name_pattern is a pattern to describe the names of the resources of this
  # collection, using the platform's conventions for URI patterns. A generator
  # may use this to generate methods to compose and decompose such names. The
  # pattern should use named placeholders as in `shelves/{shelf}/books/{book}`;
  # those will be taken as hints for the parameter names of the generated
  # methods. If empty, no name methods are generated.
  # The entity_name is the name to be used as a basis for generated methods and
  # classes.
  collections: []
  # Definition for retryable codes.
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - DEADLINE_EXCEEDED
    - INTERNAL
    - UNAVAILABLE
  - name: non_idempotent
    retry_codes:
    - UNAVAILABLE
  # Definition for retry/backoff parameters.
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 30000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 30000
    total_timeout_millis: 900000
  # A list of method configurations.
  # Common properties:
  #
  #   name - The simple name of the method.
  #
  #   flattening - Specifies the configuration for parameter flattening.
  #   Describes the parameter groups for which a generator should produce method
  #   overloads which allow a client to directly pass request message fields as
  #   method parameters. This information may or may not be used, depending on
  #   the target language.
  #   Consists of groups, which each represent a list of parameters to be
  #   flattened. Each parameter listed must be a field of the request message.
  #
  #   required_fields - Fields that are always required for a request to be
  #   valid.
  #
  #   page_streaming - Specifies the configuration for paging.
  #   Describes information for generating a method which transforms a paging
  #   list RPC into a stream of resources.
  #   Consists of a request and a response.
  #   The request specifies request information of the list method. It defines
  #   which fields match the paging pattern in the request. The request consists
  #   of a page_size_field and a token_field. The page_size_field is the name of
  #   the optional field specifying the maximum number of elements to be
  #   returned in the response. The token_field is the name of the field in the
  #   request containing the page token.
  #   The response specifies response information of the list method. It defines
  #   which fields match the paging pattern in the response. The response
  #   consists of a token_field and a resources_field. The token_field is the
  #   name of the field in the response containing the next page token. The
  #   resources_field is the name of the field in the response containing the
  #   list of resources belonging to the page.
  #
  #   retry_codes_name - Specifies the configuration for retryable codes. The
  #   name must be defined in interfaces.retry_codes_def.
  #
  #   retry_params_name - Specifies the configuration for retry/backoff
  #   parameters. The name must be defined in interfaces.retry_params_def.
  #
  #   field_name_patterns - Maps the field name of the request type to
  #   entity_name of interfaces.collections.
  #   Specifies the string pattern that the field must follow.
  #
  #   timeout_millis - Specifies the default timeout for a non-retrying call. If
  #   the call is retrying, refer to retry_params_name instead.
  methods:
  - name: SubmitJob
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - job
    required_fields:
    - project_id
    - region
    - job
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: GetJob
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - job_id
    required_fields:
    - project_id
    - region
    - job_id
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: ListJobs
    flattening:
      groups:
      - parameters:
        - project_id
        - region
      - parameters:
        - project_id
        - region
        - filter
    required_fields:
    - project_id
    - region
    page_streaming:
      request:
        page_size_field: page_size
        token_field: page_token
      response:
        token_field: next_page_token
        resources_field: jobs
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: UpdateJob
    required_fields:
    - project_id
    - region
    - job_id
    - job
    - update_mask
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: CancelJob
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - job_id
    required_fields:
    - project_id
    - region
    - job_id
    retry_codes_name: idempotent
    retry_params_name: default
    timeout_millis: 30000
  - name: DeleteJob
    flattening:
      groups:
      - parameters:
        - project_id
        - region
        - job_id
    required_fields:
    - project_id
    - region
    - job_id
    retry_codes_name: non_idempotent
    retry_params_name: default
    timeout_millis: 30000
  # The fully qualified name of the API interface.
- name: google.cloud.dataproc.v1beta2.WorkflowTemplateService
  # A list of resource collection configurations.
  # Consists of a name_pattern and an entity_name.
  # The name_pattern is a pattern to describe the names of the resources of this
  # collection, using the platform's conventions for URI patterns. A generator
  # may use this to generate methods to compose and decompose such names. The
  # pattern should use named placeholders as in `shelves/{shelf}/books/{book}`;
  # those will be taken as hints for the parameter names of the generated
  # methods. If empty, no name methods are generated.
  # The entity_name is the name to be used as a basis for generated methods and
  # classes.
  collections:
  - name_pattern: projects/{project}/regions/{region}
    entity_name: region
  - name_pattern: projects/{project}/regions/{region}/workflowTemplates/{workflow_template}
    entity_name: workflow_template
  # Definition for retryable codes.
  retry_codes_def:
  - name: idempotent
    retry_codes:
    - DEADLINE_EXCEEDED
    - INTERNAL
    - UNAVAILABLE
  - name: non_idempotent
    retry_codes:
    - UNAVAILABLE
  # Definition for retry/backoff parameters.
  retry_params_def:
  - name: default
    initial_retry_delay_millis: 100
    retry_delay_multiplier: 1.3
    max_retry_delay_millis: 60000
    initial_rpc_timeout_millis: 20000
    rpc_timeout_multiplier: 1
    max_rpc_timeout_millis: 20000
    total_timeout_millis: 600000
  # A list of method configurations.
  # Common properties:
  #
  #   name - The simple name of the method.
  #
  #   flattening - Specifies the configuration for parameter flattening.
  #   Describes the parameter groups for which a generator should produce method
  #   overloads which allow a client to directly pass request message fields as
  #   method parameters. This information may or may not be used, depending on
  #   the target language.
  #   Consists of groups, which each represent a list of parameters to be
  #   flattened. Each parameter listed must be a field of the request message.
  #
  #   required_fields - Fields that are always required for a request to be
  #   valid.
  #
  #   page_streaming - Specifies the configuration for paging.
  #   Describes information for generating a method which transforms a paging
  #   list RPC into a stream of resources.
  #   Consists of a request and a response.
  #   The request specifies request information of the list method. It defines
  #   which fields match the paging pattern in the request. The request consists
  #   of a page_size_field and a token_field. The page_size_field is the name of
  #   the optional field specifying the maximum number of elements to be
  #   returned in the response. The token_field is the name of the field in the
  #   request containing the page token.
  #   The response specifies response information of the list method. It defines
  #   which fields match the paging pattern in the response. The response
  #   consists of a token_field and a resources_field. The token_field is the
  #   name of the field in the response containing the next page token. The
  #   resources_field is the name of the field in the response containing the
  #   list of resources belonging to the page.
  #
  #   retry_codes_name - Specifies the configuration for retryable codes. The
  #   name must be defined in interfaces.retry_codes_def.
  #
  #   retry_params_name - Specifies the configuration for retry/backoff
  #   parameters. The name must be defined in interfaces.retry_params_def.
  #
  #   field_name_patterns - Maps the field name of the request type to
  #   entity_name of interfaces.collections.
  #   Specifies the string pattern that the field must follow.
  #
  #   timeout_millis - Specifies the default timeout for a non-retrying call. If
  #   the call is retrying, refer to retry_params_name instead.
  methods:
  - name: CreateWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - parent
        - template
    required_fields:
    - parent
    - template
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      parent: region
    timeout_millis: 30000
  - name: GetWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - name
    required_fields:
    - name
    retry_codes_name: idempotent
    retry_params_name: default
    field_name_patterns:
      name: workflow_template
    timeout_millis: 60000
  - name: InstantiateWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - name
      - parameters:
        - name
        - parameters
    required_fields:
    - name
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      name: workflow_template
    timeout_millis: 60000
    long_running:
      return_type: google.protobuf.Empty
      metadata_type: google.cloud.dataproc.v1beta2.WorkflowMetadata
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 43200000
  - name: InstantiateInlineWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - parent
        - template
    required_fields:
    - parent
    - template
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      parent: region
    timeout_millis: 60000
    long_running:
      return_type: google.protobuf.Empty
      metadata_type: google.cloud.dataproc.v1beta2.WorkflowMetadata
      implements_delete: false
      implements_cancel: false
      initial_poll_delay_millis: 1000
      poll_delay_multiplier: 2
      max_poll_delay_millis: 10000
      total_poll_timeout_millis: 43200000
  - name: UpdateWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - template
    required_fields:
    - template
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      template.name: workflow_template
    timeout_millis: 60000
  - name: ListWorkflowTemplates
    flattening:
      groups:
      - parameters:
        - parent
    required_fields:
    - parent
    page_streaming:
      request:
        page_size_field: page_size
        token_field: page_token
      response:
        token_field: next_page_token
        resources_field: templates
    retry_codes_name: idempotent
    retry_params_name: default
    field_name_patterns:
      parent: region
    timeout_millis: 60000
  - name: DeleteWorkflowTemplate
    flattening:
      groups:
      - parameters:
        - name
    required_fields:
    - name
    retry_codes_name: non_idempotent
    retry_params_name: default
    field_name_patterns:
      name: workflow_template
    timeout_millis: 60000
resource_name_generation:
- message_name: AutoscalingPolicy
  field_entity_map:
    name: autoscaling_policy
- message_name: CreateAutoscalingPolicyRequest
  field_entity_map:
    parent: region
- message_name: GetAutoscalingPolicyRequest
  field_entity_map:
    name: autoscaling_policy
- message_name: ListAutoscalingPoliciesRequest
  field_entity_map:
    parent: region
- message_name: DeleteAutoscalingPolicyRequest
  field_entity_map:
    name: autoscaling_policy
- message_name: WorkflowTemplate
  field_entity_map:
    name: workflow_template
- message_name: CreateWorkflowTemplateRequest
  field_entity_map:
    parent: region
- message_name: GetWorkflowTemplateRequest
  field_entity_map:
    name: workflow_template
- message_name: InstantiateWorkflowTemplateRequest
  field_entity_map:
    name: workflow_template
- message_name: InstantiateInlineWorkflowTemplateRequest
  field_entity_map:
    parent: region
- message_name: ListWorkflowTemplatesRequest
  field_entity_map:
    parent: region
- message_name: DeleteWorkflowTemplateRequest
  field_entity_map:
    name: workflow_template
